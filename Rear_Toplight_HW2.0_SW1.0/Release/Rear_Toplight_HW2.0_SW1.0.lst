gplink-2.0.0
Copyright (c) IDE Tool Project
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           func._BAT_StateGet	.code
                                           _BAT_StateGet	;Function start
                                           ;	.line	58; "../ADC.c"	value = Adc_read();
001e2f   e01d     MOVP	#0x1D               	PAGESEL	_Adc_read
001e30   dd13     CALL	#0xd13              	CALL	_Adc_read
001e31   e01e     MOVP	#0x1E               	PAGESEL	$
001e32   e100     MOVB	#0x00               	BANKSEL	r0x1009
001e33   51c0     MOV	0xc0, R0             	MOV	r0x1009, R0
                                           	BANKSEL	STK00
001e34   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x100A
001e35   51c1     MOV	0xc1, R0             	MOV	r0x100A, R0
                                           ;	.line	73; "../ADC.c"	if(value >= 1452 && value <= 3512)
001e36   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1009
001e37   38c0     SUB	R0, 0xc0             	SUB	R0, r0x1009
001e38   7a03     JB	0x3, 2                	JB	PSW, 2
001e39   ce3c     JMP	#0xe3c               	JMP	_00025_DS_
001e3a   98ac     MOV	R0, #0xac            	MOV	R0,# 0xac
                                           	BANKSEL	r0x100A
001e3b   38c1     SUB	R0, 0xc1             	SUB	R0, r0x100A
                                           _00025_DS_
001e3c   7803     JB	0x3, 0                	JB	PSW, 0
001e3d   ce48     JMP	#0xe48               	JMP	_00018_DS_
001e3e   980d     MOV	R0, #0xd             	MOV	R0,# 0x0d
                                           	BANKSEL	r0x1009
001e3f   38c0     SUB	R0, 0xc0             	SUB	R0, r0x1009
001e40   7a03     JB	0x3, 2                	JB	PSW, 2
001e41   ce44     JMP	#0xe44               	JMP	_00026_DS_
001e42   98b9     MOV	R0, #0xb9            	MOV	R0,# 0xb9
                                           	BANKSEL	r0x100A
001e43   38c1     SUB	R0, 0xc1             	SUB	R0, r0x100A
                                           _00026_DS_
001e44   7003     JNB	0x3, 0               	JNB	PSW, 0
001e45   ce48     JMP	#0xe48               	JMP	_00018_DS_
                                           ;	.line	75; "../ADC.c"	return 1;
001e46   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
001e47   ce49     JMP	#0xe49               	JMP	_00021_DS_
                                           _00018_DS_
                                           ;	.line	79; "../ADC.c"	return 0;
001e48   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           _00021_DS_
001e49   0008     CRET
                   	CRET	
                                           func._Adc_read	.code
                                           _Adc_read	;Function start
                                           ;	.line	43; "../ADC.c"	uint32_t Adc_sum = 0 ; 		          //adc采样累加变量
001d13   e100     MOVB	#0x00               	BANKSEL	r0x1004
001d14   03c6     CLR	0xc6                 	CLR	r0x1004
                                           	BANKSEL	r0x1005
001d15   03c5     CLR	0xc5                 	CLR	r0x1005
                                           ;	.line	45; "../ADC.c"	for(i = 0; i < 8; i++)
001d16   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	r0x1006
001d17   51c4     MOV	0xc4, R0             	MOV	r0x1006, R0
                                           _00012_DS_
                                           ;	.line	47; "../ADC.c"	Adc_sum += Adc_fun();		  //累加八次采样值
001d18   e01e     MOVP	#0x1E               	PAGESEL	_Adc_fun
001d19   de8b     CALL	#0xe8b              	CALL	_Adc_fun
001d1a   e01d     MOVP	#0x1D               	PAGESEL	$
001d1b   e100     MOVB	#0x00               	BANKSEL	r0x1007
001d1c   51c2     MOV	0xc2, R0             	MOV	r0x1007, R0
                                           	BANKSEL	STK00
001d1d   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1008
001d1e   51c3     MOV	0xc3, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
001d1f   50c3     MOV	R0, 0xc3             	MOV	R0, r0x1008
                                           	BANKSEL	r0x1004
001d20   21c6     ADD	0xc6, R0             	ADD	r0x1004, R0
                                           	BANKSEL	r0x1007
001d21   0ec2     MOVZ	R0, 0xc2            	MOVZ	R0, r0x1007
001d22   7003     JNB	0x3, 0               	JNB	PSW, 0
001d23   ff10     INC	R0                   	INC	R0
001d24   7203     JNB	0x3, 2               	JNB	PSW, 2
001d25   cd27     JMP	#0xd27               	JMP	_00027_DS_
                                           	BANKSEL	r0x1005
001d26   21c5     ADD	0xc5, R0             	ADD	r0x1005, R0
                                           _00027_DS_
                                           	BANKSEL	r0x1006
001d27   0ec4     MOVZ	R0, 0xc4            	MOVZ	R0, r0x1006
                                           	BANKSEL	r0x1008
001d28   51c3     MOV	0xc3, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
001d29   07c3     DEC	0xc3                 	DEC	r0x1008
                                           	BANKSEL	r0x1008
001d2a   0ec3     MOVZ	R0, 0xc3            	MOVZ	R0, r0x1008
                                           	BANKSEL	r0x1006
001d2b   51c4     MOV	0xc4, R0             	MOV	r0x1006, R0
                                           ;	.line	45; "../ADC.c"	for(i = 0; i < 8; i++)
001d2c   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1006
001d2d   30c4     ORL	R0, 0xc4             	ORL	R0, r0x1006
001d2e   7a03     JB	0x3, 2                	JB	PSW, 2
001d2f   cd18     JMP	#0xd18               	JMP	_00012_DS_
                                           ;	.line	49; "../ADC.c"	Adc_sum  += 4;					  // 四舍五入
001d30   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1004
001d31   21c6     ADD	0xc6, R0             	ADD	r0x1004, R0
001d32   7803     JB	0x3, 0                	JB	PSW, 0
001d33   cd35     JMP	#0xd35               	JMP	_00028_DS_
                                           	BANKSEL	r0x1005
001d34   0bc5     INC	0xc5                 	INC	r0x1005
                                           _00028_DS_
                                           ;	.line	50; "../ADC.c"	Adc_sum >>= 3;		              //右移动3位  除8求均值
001d35   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x1005
001d36   11c5     RRC	0xc5                 	RRC	r0x1005
                                           	BANKSEL	r0x1004
001d37   11c6     RRC	0xc6                 	RRC	r0x1004
001d38   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x1005
001d39   11c5     RRC	0xc5                 	RRC	r0x1005
                                           	BANKSEL	r0x1004
001d3a   11c6     RRC	0xc6                 	RRC	r0x1004
001d3b   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x1005
001d3c   11c5     RRC	0xc5                 	RRC	r0x1005
                                           	BANKSEL	r0x1004
001d3d   11c6     RRC	0xc6                 	RRC	r0x1004
                                           ;	.line	51; "../ADC.c"	return Adc_sum;
                                           	BANKSEL	r0x1004
001d3e   0ec6     MOVZ	R0, 0xc6            	MOVZ	R0, r0x1004
                                           	BANKSEL	STK00
001d3f   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1005
001d40   0ec5     MOVZ	R0, 0xc5            	MOVZ	R0, r0x1005
001d41   0008     CRET
                   	CRET	
                                           func._Adc_fun	.code
                                           _Adc_fun	;Function start
                                           ;	.line	27; "../ADC.c"	START = 1;					  //启动ADC
001e8b   e100     MOVB	#0x00               	BANKSEL	_ADCCTL0_bits
001e8c   691f     SET	0x1f, 1              	SET	_ADCCTL0_bits, 1
                                           _00003_DS_
                                           ;	.line	28; "../ADC.c"	while(START);                 //等待转换结束
                                           	BANKSEL	_ADCCTL0_bits
001e8d   711f     JNB	0x1f, 1              	JNB	_ADCCTL0_bits, 1
001e8e   ce8d     JMP	#0xe8d               	JMP	_00003_DS_
                                           ;	.line	29; "../ADC.c"	Adc_num = ADCDATA0H;	  	  //将高位加进去
                                           	BANKSEL	_ADCDATA0H
001e8f   0e1e     MOVZ	R0, 0x1e            	MOVZ	R0, _ADCDATA0H
                                           	BANKSEL	r0x1000
001e90   51c9     MOV	0xc9, R0             	MOV	r0x1000, R0
                                           	BANKSEL	r0x1001
001e91   03c8     CLR	0xc8                 	CLR	r0x1001
                                           ;	.line	30; "../ADC.c"	Adc_num <<=8;
                                           	BANKSEL	r0x1000
001e92   0ec9     MOVZ	R0, 0xc9            	MOVZ	R0, r0x1000
                                           	BANKSEL	r0x1001
001e93   51c8     MOV	0xc8, R0             	MOV	r0x1001, R0
                                           	BANKSEL	r0x1000
001e94   03c9     CLR	0xc9                 	CLR	r0x1000
                                           ;	.line	31; "../ADC.c"	Adc_num |= ADCDATA0L;		  //将低位加进去
                                           	BANKSEL	_ADCDATA0L
001e95   0e3e     MOVZ	R0, 0x3e            	MOVZ	R0, _ADCDATA0L
                                           	BANKSEL	r0x1002
001e96   51c7     MOV	0xc7, R0             	MOV	r0x1002, R0
                                           	BANKSEL	r0x1002
001e97   0ec7     MOVZ	R0, 0xc7            	MOVZ	R0, r0x1002
                                           	BANKSEL	r0x1000
001e98   31c9     ORL	0xc9, R0             	ORL	r0x1000, R0
001e99   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1001
001e9a   31c8     ORL	0xc8, R0             	ORL	r0x1001, R0
                                           ;	.line	32; "../ADC.c"	return Adc_num;			      //返回转换值
                                           	BANKSEL	r0x1000
001e9b   0ec9     MOVZ	R0, 0xc9            	MOVZ	R0, r0x1000
                                           	BANKSEL	STK00
001e9c   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1001
001e9d   0ec8     MOVZ	R0, 0xc8            	MOVZ	R0, r0x1001
001e9e   0008     CRET
                   	CRET	
                                           func._ADC_Init	.code
                                           _ADC_Init	;Function start
                                           ;	.line	11; "../ADC.c"	TR11 = 1;		//ADC引脚配置 P1.1
001ef6   e100     MOVB	#0x00               	BANKSEL	_TR1_bits
001ef7   6927     SET	0x27, 1              	SET	_TR1_bits, 1
                                           ;	.line	12; "../ADC.c"	ANSEH = 0x00;
                                           	BANKSEL	_ANSEH
001ef8   031d     CLR	0x1d                 	CLR	_ANSEH
                                           ;	.line	13; "../ADC.c"	ANSEL = 0x02;
001ef9   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_ANSEL
001efa   5131     MOV	0x31, R0             	MOV	_ANSEL, R0
                                           ;	.line	14; "../ADC.c"	ADCCTL1 = 0x95;		              //ad校准使能，8分频，VDD作为参考电压
001efb   9895     MOV	R0, #0x95            	MOV	R0,# 0x95
                                           	BANKSEL	_ADCCTL1
001efc   513f     MOV	0x3f, R0             	MOV	_ADCCTL1, R0
                                           ;	.line	15; "../ADC.c"	ADCCTL0 = 0x85;		              //右对齐，通道1， AD使能打开     ( 0x 1_00 0101 )
001efd   9885     MOV	R0, #0x85            	MOV	R0,# 0x85
                                           	BANKSEL	_ADCCTL0
001efe   511f     MOV	0x1f, R0             	MOV	_ADCCTL0, R0
001eff   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           ID_CTouch_0	.code
                                           _CTouch_Channel_Tab
001f54   b006     RRET	R0, #0x6            	RRET R0, #0x06
001f55   b007     RRET	R0, #0x7            	RRET R0, #0x07
                                           ID_CTouch_1	.code
                                           _CTouch_Threshold_Tab
001f2e   b03c     RRET	R0, #0x3c           	RRET R0, #0x3c
001f2f   b000     RRET	R0, #0x0            	RRET R0, #0x00
001f30   b03c     RRET	R0, #0x3c           	RRET R0, #0x3c
001f31   b000     RRET	R0, #0x0            	RRET R0, #0x00
                                           ID_CTouch_2	.code
                                           _CTouch_Second_Key_Threshold_Tab
001f32   b000     RRET	R0, #0x0            	RRET R0, #0x00
001f33   b000     RRET	R0, #0x0            	RRET R0, #0x00
001f34   b000     RRET	R0, #0x0            	RRET R0, #0x00
001f35   b000     RRET	R0, #0x0            	RRET R0, #0x00
                                           ID_CTouch_3	.code
                                           _CTouch_Single_Hysteresis_Tab
001f56   b006     RRET	R0, #0x6            	RRET R0, #0x06
001f57   b006     RRET	R0, #0x6            	RRET R0, #0x06
                                           ID_CTouch_4	.code
                                           _CTouch_Noise_threshold_Tab
001f58   b01e     RRET	R0, #0x1e           	RRET R0, #0x1e
001f59   b01e     RRET	R0, #0x1e           	RRET R0, #0x1e
                                           ID_CTouch_5	.code
                                           _CTouch_Negative_Noise_threshold_Tab
001f5a   b03c     RRET	R0, #0x3c           	RRET R0, #0x3c
001f5b   b03c     RRET	R0, #0x3c           	RRET R0, #0x3c
                                           ID_CTouch_6	.code
                                           _CTouch_Max_Threshold_Tab
001f36   b0c8     RRET	R0, #0xc8           	RRET R0, #0xc8
001f37   b000     RRET	R0, #0x0            	RRET R0, #0x00
001f38   b0c8     RRET	R0, #0xc8           	RRET R0, #0xc8
001f39   b000     RRET	R0, #0x0            	RRET R0, #0x00
                                           ID_CTouch_7	.code
                                           _CTouch_Disturb_Noise_threshold_Tab
001f3a   b03c     RRET	R0, #0x3c           	RRET R0, #0x3c
001f3b   b000     RRET	R0, #0x0            	RRET R0, #0x00
001f3c   b03c     RRET	R0, #0x3c           	RRET R0, #0x3c
001f3d   b000     RRET	R0, #0x0            	RRET R0, #0x00
                                           ID_CTouch_8	.code
                                           _CTouch_Steady_Noise_threshold_Tab
001f5c   b014     RRET	R0, #0x14           	RRET R0, #0x14
001f5d   b014     RRET	R0, #0x14           	RRET R0, #0x14
                                           ID_CTouch_9	.code
                                           _CTOUCH_VDAC_Tab
001f5e   b0f0     RRET	R0, #0xf0           	RRET R0, #0xf0
001f5f   b0f0     RRET	R0, #0xf0           	RRET R0, #0xf0
                                           ID_CTouch_10	.code
                                           _DEF_NUM_CHANNELS
000003   b002     RRET	R0, #0x2            	RRET R0, #0x02
                                           func.__Parameter_Init_	.code
                                           __Parameter_Init_	;Function start
                                           ;	.line	47; "../CTouch.c"	Channel_Num_lib = DEF_NUM_CHANNELS;
001df3   9900     MOV	R1, #0x0             	MOV	R1,# high (_DEF_NUM_CHANNELS+0)
001df4   9803     MOV	R0, #0x3             	MOV	R0,# low (_DEF_NUM_CHANNELS+0)
001df5   e01f     MOVP	#0x1F               	PAGESEL	__R2PCL
001df6   df60     CALL	#0xf60              	CALL	__R2PCL
001df7   e01d     MOVP	#0x1D               	PAGESEL	$
001df8   e100     MOVB	#0x00               	BANKSEL	_Channel_Num_lib
001df9   51bf     MOV	0xbf, R0             	MOV	_Channel_Num_lib, R0
                                           ;	.line	48; "../CTouch.c"	ON_debounce_times_lib = DEF_TOUCH_ON_DEBOUNCE;
001dfa   980a     MOV	R0, #0xa             	MOV	R0,# 0x0a
                                           	BANKSEL	_ON_debounce_times_lib
001dfb   51be     MOV	0xbe, R0             	MOV	_ON_debounce_times_lib, R0
                                           ;	.line	49; "../CTouch.c"	Data_Stream_Enable_lib = DEF_DATA_STREAM_ENABLE;
                                           	BANKSEL	_Data_Stream_Enable_lib
001dfc   03bd     CLR	0xbd                 	CLR	_Data_Stream_Enable_lib
                                           ;	.line	50; "../CTouch.c"	Press_On_Max_Time_lib = DEF_PRESS_ON_MAX_TIME;
001dfd   98e8     MOV	R0, #0xe8            	MOV	R0,# 0xe8
001dfe   e101     MOVB	#0x01               	BANKSEL	_Press_On_Max_Time_lib
001dff   51bd     MOV	0xbd, R0             	MOV	_Press_On_Max_Time_lib, R0
001e00   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	_Press_On_Max_Time_lib
001e01   51be     MOV	0xbe, R0             	MOV	(_Press_On_Max_Time_lib + 1), R0
                                           ;	.line	51; "../CTouch.c"	Data_Change_Disturb_Max_Channel = DEF_DATA_CHANGE_DISTURB_MAX_CHANNEL;
001e02   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
001e03   e100     MOVB	#0x00               	BANKSEL	_Data_Change_Disturb_Max_Channel
001e04   51bc     MOV	0xbc, R0             	MOV	_Data_Change_Disturb_Max_Channel, R0
                                           ;	.line	52; "../CTouch.c"	Protect_Mode_Release_Time_lib = DEF_PROTECT_MODE_RELEASE_CYCLE;
001e05   9846     MOV	R0, #0x46            	MOV	R0,# 0x46
                                           	BANKSEL	_Protect_Mode_Release_Time_lib
001e06   51bb     MOV	0xbb, R0             	MOV	_Protect_Mode_Release_Time_lib, R0
                                           ;	.line	53; "../CTouch.c"	Baseline_Update_Cnt_lib = DEF_BASELINE_UPDATE_CNT;
001e07   98f4     MOV	R0, #0xf4            	MOV	R0,# 0xf4
001e08   e101     MOVB	#0x01               	BANKSEL	_Baseline_Update_Cnt_lib
001e09   51bb     MOV	0xbb, R0             	MOV	_Baseline_Update_Cnt_lib, R0
001e0a   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_Baseline_Update_Cnt_lib
001e0b   51bc     MOV	0xbc, R0             	MOV	(_Baseline_Update_Cnt_lib + 1), R0
                                           ;	.line	54; "../CTouch.c"	Max_Key_Cnt_Lib = DEF_MAX_KEY_CNT;
001e0c   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
001e0d   e100     MOVB	#0x00               	BANKSEL	_Max_Key_Cnt_Lib
001e0e   51ba     MOV	0xba, R0             	MOV	_Max_Key_Cnt_Lib, R0
                                           ;	.line	55; "../CTouch.c"	Ref_Channel_Enable_lib = DEF_REFERENCE_CHANNEL_ENABLE;
                                           	BANKSEL	_Ref_Channel_Enable_lib
001e0f   03b9     CLR	0xb9                 	CLR	_Ref_Channel_Enable_lib
001e10   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           ID_Flash_0	.idata
                                           _saveflag
                                           	.db	0x00
                                           func._set_savefalg	.code
                                           _set_savefalg	;Function start
                                           ;	.line	494; "../Flash.c"	void set_savefalg(uint8_t value)
001f4e   e100     MOVB	#0x00               	BANKSEL	_saveflag
001f4f   51a9     MOV	0xa9, R0             	MOV	_saveflag, R0
                                           ;	.line	496; "../Flash.c"	saveflag = value;
001f50   0008     CRET
                   	CRET	
                                           func._Flash_data_set	.code
                                           _Flash_data_set	;Function start
                                           ;	.line	466; "../Flash.c"	void Flash_data_set(uint8_t ch,uint8_t sw,uint8_t status)
0017ff   e100     MOVB	#0x00               	BANKSEL	r0x1031
001800   51ae     MOV	0xae, R0             	MOV	r0x1031, R0
                                           	BANKSEL	STK00
001801   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1032
001802   51ad     MOV	0xad, R0             	MOV	r0x1032, R0
                                           	BANKSEL	STK01
001803   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1033
001804   51ac     MOV	0xac, R0             	MOV	r0x1033, R0
                                           ;	.line	468; "../Flash.c"	if(ch == 1)
                                           	BANKSEL	r0x1031
001805   0eae     MOVZ	R0, 0xae            	MOVZ	R0, r0x1031
001806   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
001807   7a03     JB	0x3, 2                	JB	PSW, 2
001808   c841     JMP	#0x841               	JMP	_00051_DS_
                                           ;	.line	470; "../Flash.c"	FLASH_BUFFER[0] = 0x55;
001809   9855     MOV	R0, #0x55            	MOV	R0,# 0x55
00180a   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
00180b   5180     MOV	0x80, R0             	MOV	 (_FLASH_BUFFER + 0), R0
                                           	BANKSEL	_FLASH_BUFFER
00180c   0381     CLR	0x81                 	CLR	 (_FLASH_BUFFER + 1)
                                           ;	.line	471; "../Flash.c"	FLASH_BUFFER[1] = sw;
00180d   e100     MOVB	#0x00               	BANKSEL	r0x1032
00180e   0ead     MOVZ	R0, 0xad            	MOVZ	R0, r0x1032
                                           	BANKSEL	r0x1034
00180f   51ab     MOV	0xab, R0             	MOV	r0x1034, R0
001810   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001811   5182     MOV	0x82, R0             	MOV	 (_FLASH_BUFFER + 2), R0
001812   e100     MOVB	#0x00               	BANKSEL	r0x1035
001813   03aa     CLR	0xaa                 	CLR	r0x1035
001814   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001815   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001816   5183     MOV	0x83, R0             	MOV	 (_FLASH_BUFFER + 3), R0
                                           ;	.line	472; "../Flash.c"	FLASH_BUFFER[2] = status;
001817   e100     MOVB	#0x00               	BANKSEL	r0x1033
001818   0eac     MOVZ	R0, 0xac            	MOVZ	R0, r0x1033
                                           	BANKSEL	r0x1034
001819   51ab     MOV	0xab, R0             	MOV	r0x1034, R0
00181a   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
00181b   5184     MOV	0x84, R0             	MOV	 (_FLASH_BUFFER + 4), R0
00181c   e100     MOVB	#0x00               	BANKSEL	r0x1035
00181d   03aa     CLR	0xaa                 	CLR	r0x1035
00181e   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
00181f   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001820   5185     MOV	0x85, R0             	MOV	 (_FLASH_BUFFER + 5), R0
                                           ;	.line	475; "../Flash.c"	FLASH_BUFFER[3] = FLASH_READ_ONE(0x1FC0+3);
001821   98c3     MOV	R0, #0xc3            	MOV	R0,# 0xc3
                                           	BANKSEL	STK00
001822   517e     MOV	0x7e, R0             	MOV	STK00, R0
001823   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
001824   e01d     MOVP	#0x1D               	PAGESEL	_FLASH_READ_ONE
001825   ddb2     CALL	#0xdb2              	CALL	_FLASH_READ_ONE
001826   e018     MOVP	#0x18               	PAGESEL	$
001827   e100     MOVB	#0x00               	BANKSEL	r0x1035
001828   51aa     MOV	0xaa, R0             	MOV	r0x1035, R0
                                           	BANKSEL	STK00
001829   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1034
00182a   51ab     MOV	0xab, R0             	MOV	r0x1034, R0
00182b   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
00182c   5186     MOV	0x86, R0             	MOV	 (_FLASH_BUFFER + 6), R0
00182d   e100     MOVB	#0x00               	BANKSEL	r0x1035
00182e   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, r0x1035
00182f   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001830   5187     MOV	0x87, R0             	MOV	 (_FLASH_BUFFER + 7), R0
                                           ;	.line	476; "../Flash.c"	FLASH_BUFFER[4] = FLASH_READ_ONE(0x1FC0+4);
001831   98c4     MOV	R0, #0xc4            	MOV	R0,# 0xc4
                                           	BANKSEL	STK00
001832   517e     MOV	0x7e, R0             	MOV	STK00, R0
001833   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
001834   e01d     MOVP	#0x1D               	PAGESEL	_FLASH_READ_ONE
001835   ddb2     CALL	#0xdb2              	CALL	_FLASH_READ_ONE
001836   e018     MOVP	#0x18               	PAGESEL	$
001837   e100     MOVB	#0x00               	BANKSEL	r0x1035
001838   51aa     MOV	0xaa, R0             	MOV	r0x1035, R0
                                           	BANKSEL	STK00
001839   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1034
00183a   51ab     MOV	0xab, R0             	MOV	r0x1034, R0
00183b   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
00183c   5188     MOV	0x88, R0             	MOV	 (_FLASH_BUFFER + 8), R0
00183d   e100     MOVB	#0x00               	BANKSEL	r0x1035
00183e   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, r0x1035
00183f   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001840   5189     MOV	0x89, R0             	MOV	 (_FLASH_BUFFER + 9), R0
                                           _00051_DS_
                                           ;	.line	480; "../Flash.c"	if(ch == 2)
001841   e100     MOVB	#0x00               	BANKSEL	r0x1031
001842   0eae     MOVZ	R0, 0xae            	MOVZ	R0, r0x1031
001843   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
001844   7a03     JB	0x3, 2                	JB	PSW, 2
001845   c87e     JMP	#0x87e               	JMP	_00053_DS_
                                           ;	.line	482; "../Flash.c"	FLASH_BUFFER[0] = 0x55;
001846   9855     MOV	R0, #0x55            	MOV	R0,# 0x55
001847   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001848   5180     MOV	0x80, R0             	MOV	 (_FLASH_BUFFER + 0), R0
                                           	BANKSEL	_FLASH_BUFFER
001849   0381     CLR	0x81                 	CLR	 (_FLASH_BUFFER + 1)
                                           ;	.line	485; "../Flash.c"	FLASH_BUFFER[1] = FLASH_READ_ONE(0x1FC0+1);
00184a   98c1     MOV	R0, #0xc1            	MOV	R0,# 0xc1
                                           	BANKSEL	STK00
00184b   517e     MOV	0x7e, R0             	MOV	STK00, R0
00184c   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
00184d   e01d     MOVP	#0x1D               	PAGESEL	_FLASH_READ_ONE
00184e   ddb2     CALL	#0xdb2              	CALL	_FLASH_READ_ONE
00184f   e018     MOVP	#0x18               	PAGESEL	$
001850   e100     MOVB	#0x00               	BANKSEL	r0x1034
001851   51ab     MOV	0xab, R0             	MOV	r0x1034, R0
                                           	BANKSEL	STK00
001852   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1031
001853   51ae     MOV	0xae, R0             	MOV	r0x1031, R0
001854   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001855   5182     MOV	0x82, R0             	MOV	 (_FLASH_BUFFER + 2), R0
001856   e100     MOVB	#0x00               	BANKSEL	r0x1034
001857   0eab     MOVZ	R0, 0xab            	MOVZ	R0, r0x1034
001858   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001859   5183     MOV	0x83, R0             	MOV	 (_FLASH_BUFFER + 3), R0
                                           ;	.line	486; "../Flash.c"	FLASH_BUFFER[2] = FLASH_READ_ONE(0x1FC0+2);
00185a   98c2     MOV	R0, #0xc2            	MOV	R0,# 0xc2
                                           	BANKSEL	STK00
00185b   517e     MOV	0x7e, R0             	MOV	STK00, R0
00185c   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
00185d   e01d     MOVP	#0x1D               	PAGESEL	_FLASH_READ_ONE
00185e   ddb2     CALL	#0xdb2              	CALL	_FLASH_READ_ONE
00185f   e018     MOVP	#0x18               	PAGESEL	$
001860   e100     MOVB	#0x00               	BANKSEL	r0x1034
001861   51ab     MOV	0xab, R0             	MOV	r0x1034, R0
                                           	BANKSEL	STK00
001862   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1031
001863   51ae     MOV	0xae, R0             	MOV	r0x1031, R0
001864   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001865   5184     MOV	0x84, R0             	MOV	 (_FLASH_BUFFER + 4), R0
001866   e100     MOVB	#0x00               	BANKSEL	r0x1034
001867   0eab     MOVZ	R0, 0xab            	MOVZ	R0, r0x1034
001868   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001869   5185     MOV	0x85, R0             	MOV	 (_FLASH_BUFFER + 5), R0
                                           ;	.line	487; "../Flash.c"	FLASH_BUFFER[3] = sw;
00186a   e100     MOVB	#0x00               	BANKSEL	r0x1032
00186b   0ead     MOVZ	R0, 0xad            	MOVZ	R0, r0x1032
                                           	BANKSEL	r0x1031
00186c   51ae     MOV	0xae, R0             	MOV	r0x1031, R0
00186d   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
00186e   5186     MOV	0x86, R0             	MOV	 (_FLASH_BUFFER + 6), R0
00186f   e100     MOVB	#0x00               	BANKSEL	r0x1034
001870   03ab     CLR	0xab                 	CLR	r0x1034
001871   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001872   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001873   5187     MOV	0x87, R0             	MOV	 (_FLASH_BUFFER + 7), R0
                                           ;	.line	488; "../Flash.c"	FLASH_BUFFER[4] = status;
001874   e100     MOVB	#0x00               	BANKSEL	r0x1033
001875   0eac     MOVZ	R0, 0xac            	MOVZ	R0, r0x1033
                                           	BANKSEL	r0x1031
001876   51ae     MOV	0xae, R0             	MOV	r0x1031, R0
001877   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
001878   5188     MOV	0x88, R0             	MOV	 (_FLASH_BUFFER + 8), R0
001879   e100     MOVB	#0x00               	BANKSEL	r0x1032
00187a   03ad     CLR	0xad                 	CLR	r0x1032
00187b   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
00187c   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
00187d   5189     MOV	0x89, R0             	MOV	 (_FLASH_BUFFER + 9), R0
                                           _00053_DS_
                                           ;	.line	490; "../Flash.c"	set_savefalg(1);
00187e   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
00187f   e01f     MOVP	#0x1F               	PAGESEL	_set_savefalg
001880   df4e     CALL	#0xf4e              	CALL	_set_savefalg
001881   e018     MOVP	#0x18               	PAGESEL	$
001882   0008     CRET
                   	CRET	
                                           func._FLASH_Deal	.code
                                           _FLASH_Deal	;Function start
                                           ;	.line	457; "../Flash.c"	if(saveflag == 1)
001e9f   e100     MOVB	#0x00               	BANKSEL	_saveflag
001ea0   0ea9     MOVZ	R0, 0xa9            	MOVZ	R0, _saveflag
001ea1   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
001ea2   7a03     JB	0x3, 2                	JB	PSW, 2
001ea3   ceb0     JMP	#0xeb0               	JMP	_00047_DS_
                                           ;	.line	460; "../Flash.c"	FLASH_WRITE_FUN(0x1FC0,FLASH_BUFFER_MAX);
001ea4   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	STK01
001ea5   517d     MOV	0x7d, R0             	MOV	STK01, R0
001ea6   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	STK00
001ea7   517e     MOV	0x7e, R0             	MOV	STK00, R0
001ea8   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
001ea9   e01b     MOVP	#0x1B               	PAGESEL	_FLASH_WRITE_FUN
001eaa   db93     CALL	#0xb93              	CALL	_FLASH_WRITE_FUN
001eab   e01e     MOVP	#0x1E               	PAGESEL	$
                                           ;	.line	461; "../Flash.c"	set_savefalg(0);
001eac   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001ead   e01f     MOVP	#0x1F               	PAGESEL	_set_savefalg
001eae   df4e     CALL	#0xf4e              	CALL	_set_savefalg
001eaf   e01e     MOVP	#0x1E               	PAGESEL	$
                                           _00047_DS_
001eb0   0008     CRET
                   	CRET	
                                           func._FLASH_Init	.code
                                           _FLASH_Init	;Function start
                                           ;	.line	412; "../Flash.c"	for(i = 0; i < BUFFER_MAX; i++)
00173b   e100     MOVB	#0x00               	BANKSEL	r0x103B
00173c   03b3     CLR	0xb3                 	CLR	r0x103B
                                           	BANKSEL	r0x103C
00173d   03b2     CLR	0xb2                 	CLR	r0x103C
                                           _00030_DS_
00173e   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x103C
00173f   38b2     SUB	R0, 0xb2             	SUB	R0, r0x103C
001740   7a03     JB	0x3, 2                	JB	PSW, 2
001741   c744     JMP	#0x744               	JMP	_00044_DS_
001742   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x103B
001743   38b3     SUB	R0, 0xb3             	SUB	R0, r0x103B
                                           _00044_DS_
001744   7003     JNB	0x3, 0               	JNB	PSW, 0
001745   c770     JMP	#0x770               	JMP	_00033_DS_
                                           ;	.line	415; "../Flash.c"	BUFFER_ARRY[i] = FLASH_READ_ONE(0x1FC0+i);
001746   6003     CLR	0x3, 0               	CLR	PSW, 0
                                           	BANKSEL	r0x103B
001747   12b3     RLCR	0xb3                	RLCR	r0x103B
                                           	BANKSEL	r0x103D
001748   51b1     MOV	0xb1, R0             	MOV	r0x103D, R0
                                           	BANKSEL	r0x103C
001749   12b2     RLCR	0xb2                	RLCR	r0x103C
00174a   98b8     MOV	R0, #0xb8            	MOV	R0,# (_BUFFER_ARRY + 0)
                                           	BANKSEL	r0x103D
00174b   21b1     ADD	0xb1, R0             	ADD	r0x103D, R0
00174c   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	r0x103B
00174d   20b3     ADD	R0, 0xb3             	ADD	R0, r0x103B
                                           	BANKSEL	r0x103F
00174e   51b0     MOV	0xb0, R0             	MOV	r0x103F, R0
00174f   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
                                           	BANKSEL	r0x1040
001750   51af     MOV	0xaf, R0             	MOV	r0x1040, R0
                                           	BANKSEL	r0x103C
001751   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x103C
001752   7003     JNB	0x3, 0               	JNB	PSW, 0
001753   ff10     INC	R0                   	INC	R0
001754   7203     JNB	0x3, 2               	JNB	PSW, 2
001755   c757     JMP	#0x757               	JMP	_00060_DS_
                                           	BANKSEL	r0x1040
001756   21af     ADD	0xaf, R0             	ADD	r0x1040, R0
                                           _00060_DS_
                                           	BANKSEL	r0x103F
001757   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103F
                                           	BANKSEL	STK00
001758   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1040
001759   0eaf     MOVZ	R0, 0xaf            	MOVZ	R0, r0x1040
00175a   e01d     MOVP	#0x1D               	PAGESEL	_FLASH_READ_ONE
00175b   ddb2     CALL	#0xdb2              	CALL	_FLASH_READ_ONE
00175c   e017     MOVP	#0x17               	PAGESEL	$
00175d   e100     MOVB	#0x00               	BANKSEL	r0x1040
00175e   51af     MOV	0xaf, R0             	MOV	r0x1040, R0
                                           	BANKSEL	STK00
00175f   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x103F
001760   51b0     MOV	0xb0, R0             	MOV	r0x103F, R0
                                           	BANKSEL	r0x103F
001761   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, r0x103F
                                           	BANKSEL	r0x103D
001762   52b1     MOV	R1, 0xb1             	MOV	R1, r0x103D
001763   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001764   f741     ST	[R1], R0              	ST	[R1], R0
001765   ff11     INC	R1                   	INC	R1
001766   e100     MOVB	#0x00               	BANKSEL	r0x1040
001767   0eaf     MOVZ	R0, 0xaf            	MOVZ	R0, r0x1040
001768   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001769   f741     ST	[R1], R0              	ST	[R1], R0
                                           ;	.line	412; "../Flash.c"	for(i = 0; i < BUFFER_MAX; i++)
00176a   e100     MOVB	#0x00               	BANKSEL	r0x103B
00176b   0bb3     INC	0xb3                 	INC	r0x103B
00176c   7a03     JB	0x3, 2                	JB	PSW, 2
00176d   c76f     JMP	#0x76f               	JMP	_00061_DS_
                                           	BANKSEL	r0x103C
00176e   0bb2     INC	0xb2                 	INC	r0x103C
                                           _00061_DS_
00176f   c73e     JMP	#0x73e               	JMP	_00030_DS_
                                           _00033_DS_
                                           ;	.line	418; "../Flash.c"	if(BUFFER_ARRY[0] == 0x55)  //有储存数据 恢复数据
001770   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001771   0eb8     MOVZ	R0, 0xb8            	MOVZ	R0,  (_BUFFER_ARRY + 0)
001772   e100     MOVB	#0x00               	BANKSEL	r0x103B
001773   51b3     MOV	0xb3, R0             	MOV	r0x103B, R0
001774   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001775   0eb9     MOVZ	R0, 0xb9            	MOVZ	R0,  (_BUFFER_ARRY + 1)
001776   e100     MOVB	#0x00               	BANKSEL	r0x103C
001777   51b2     MOV	0xb2, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103B
001778   0eb3     MOVZ	R0, 0xb3            	MOVZ	R0, r0x103B
001779   a855     XOR	R0, #0x55            	XOR	R0,# 0x55
00177a   7a03     JB	0x3, 2                	JB	PSW, 2
00177b   c7d9     JMP	#0x7d9               	JMP	_00028_DS_
                                           	BANKSEL	r0x103C
00177c   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x103C
00177d   a800     XOR	R0, #0x0             	XOR	R0,# 0x00
00177e   7a03     JB	0x3, 2                	JB	PSW, 2
00177f   c7d9     JMP	#0x7d9               	JMP	_00028_DS_
                                           ;	.line	421; "../Flash.c"	if(BUFFER_ARRY[1] == LeftReadLightSW && BUFFER_ARRY[2] == Ind_On)
001780   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001781   0eba     MOVZ	R0, 0xba            	MOVZ	R0,  (_BUFFER_ARRY + 2)
001782   e100     MOVB	#0x00               	BANKSEL	r0x103B
001783   51b3     MOV	0xb3, R0             	MOV	r0x103B, R0
001784   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001785   0ebb     MOVZ	R0, 0xbb            	MOVZ	R0,  (_BUFFER_ARRY + 3)
001786   e100     MOVB	#0x00               	BANKSEL	r0x103C
001787   51b2     MOV	0xb2, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103B
001788   0eb3     MOVZ	R0, 0xb3            	MOVZ	R0, r0x103B
001789   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
00178a   7a03     JB	0x3, 2                	JB	PSW, 2
00178b   c7ae     JMP	#0x7ae               	JMP	_00022_DS_
                                           	BANKSEL	r0x103C
00178c   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x103C
00178d   a800     XOR	R0, #0x0             	XOR	R0,# 0x00
00178e   7a03     JB	0x3, 2                	JB	PSW, 2
00178f   c7ae     JMP	#0x7ae               	JMP	_00022_DS_
001790   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001791   0ebc     MOVZ	R0, 0xbc            	MOVZ	R0,  (_BUFFER_ARRY + 4)
001792   e100     MOVB	#0x00               	BANKSEL	r0x103B
001793   51b3     MOV	0xb3, R0             	MOV	r0x103B, R0
001794   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
001795   0ebd     MOVZ	R0, 0xbd            	MOVZ	R0,  (_BUFFER_ARRY + 5)
001796   e100     MOVB	#0x00               	BANKSEL	r0x103C
001797   51b2     MOV	0xb2, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103B
001798   0eb3     MOVZ	R0, 0xb3            	MOVZ	R0, r0x103B
001799   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
00179a   7a03     JB	0x3, 2                	JB	PSW, 2
00179b   c7ae     JMP	#0x7ae               	JMP	_00022_DS_
                                           	BANKSEL	r0x103C
00179c   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x103C
00179d   a800     XOR	R0, #0x0             	XOR	R0,# 0x00
00179e   7a03     JB	0x3, 2                	JB	PSW, 2
00179f   c7ae     JMP	#0x7ae               	JMP	_00022_DS_
                                           ;	.line	423; "../Flash.c"	set_led(1,LeftReadLightSW,Key_On);
0017a0   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
0017a1   517d     MOV	0x7d, R0             	MOV	STK01, R0
0017a2   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
0017a3   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017a4   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
0017a5   e01e     MOVP	#0x1E               	PAGESEL	_set_led
0017a6   de11     CALL	#0xe11              	CALL	_set_led
0017a7   e017     MOVP	#0x17               	PAGESEL	$
                                           ;	.line	424; "../Flash.c"	key_state_set(1,Key_On);
0017a8   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
0017a9   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017aa   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
0017ab   e01e     MOVP	#0x1E               	PAGESEL	_key_state_set
0017ac   deb1     CALL	#0xeb1              	CALL	_key_state_set
0017ad   e017     MOVP	#0x17               	PAGESEL	$
                                           _00022_DS_
                                           ;	.line	428; "../Flash.c"	if(BUFFER_ARRY[3] == RightReadLightSW && BUFFER_ARRY[4] == Ind_On)
0017ae   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
0017af   0ebe     MOVZ	R0, 0xbe            	MOVZ	R0,  (_BUFFER_ARRY + 6)
0017b0   e100     MOVB	#0x00               	BANKSEL	r0x103B
0017b1   51b3     MOV	0xb3, R0             	MOV	r0x103B, R0
0017b2   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
0017b3   0ebf     MOVZ	R0, 0xbf            	MOVZ	R0,  (_BUFFER_ARRY + 7)
0017b4   e100     MOVB	#0x00               	BANKSEL	r0x103C
0017b5   51b2     MOV	0xb2, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103B
0017b6   0eb3     MOVZ	R0, 0xb3            	MOVZ	R0, r0x103B
                                           	BANKSEL	r0x103C
0017b7   30b2     ORL	R0, 0xb2             	ORL	R0, r0x103C
0017b8   7a03     JB	0x3, 2                	JB	PSW, 2
0017b9   c7fe     JMP	#0x7fe               	JMP	_00034_DS_
0017ba   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
0017bb   0ec0     MOVZ	R0, 0xc0            	MOVZ	R0,  (_BUFFER_ARRY + 8)
0017bc   e100     MOVB	#0x00               	BANKSEL	r0x103B
0017bd   51b3     MOV	0xb3, R0             	MOV	r0x103B, R0
0017be   e102     MOVB	#0x02               	BANKSEL	_BUFFER_ARRY
0017bf   0ec1     MOVZ	R0, 0xc1            	MOVZ	R0,  (_BUFFER_ARRY + 9)
0017c0   e100     MOVB	#0x00               	BANKSEL	r0x103C
0017c1   51b2     MOV	0xb2, R0             	MOV	r0x103C, R0
                                           	BANKSEL	r0x103B
0017c2   0eb3     MOVZ	R0, 0xb3            	MOVZ	R0, r0x103B
0017c3   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
0017c4   7a03     JB	0x3, 2                	JB	PSW, 2
0017c5   c7fe     JMP	#0x7fe               	JMP	_00034_DS_
                                           	BANKSEL	r0x103C
0017c6   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, r0x103C
0017c7   a800     XOR	R0, #0x0             	XOR	R0,# 0x00
0017c8   7a03     JB	0x3, 2                	JB	PSW, 2
0017c9   c7fe     JMP	#0x7fe               	JMP	_00034_DS_
                                           ;	.line	430; "../Flash.c"	set_led(2,RightReadLightSW,Key_On);
0017ca   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
0017cb   517d     MOV	0x7d, R0             	MOV	STK01, R0
0017cc   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK00
0017cd   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017ce   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
0017cf   e01e     MOVP	#0x1E               	PAGESEL	_set_led
0017d0   de11     CALL	#0xe11              	CALL	_set_led
0017d1   e017     MOVP	#0x17               	PAGESEL	$
                                           ;	.line	431; "../Flash.c"	key_state_set(2,Key_On);
0017d2   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
0017d3   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017d4   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
0017d5   e01e     MOVP	#0x1E               	PAGESEL	_key_state_set
0017d6   deb1     CALL	#0xeb1              	CALL	_key_state_set
0017d7   e017     MOVP	#0x17               	PAGESEL	$
0017d8   c7fe     JMP	#0x7fe               	JMP	_00034_DS_
                                           _00028_DS_
                                           ;	.line	437; "../Flash.c"	FLASH_BUFFER[0] = 0x55;
0017d9   9855     MOV	R0, #0x55            	MOV	R0,# 0x55
0017da   e103     MOVB	#0x03               	BANKSEL	_FLASH_BUFFER
0017db   5180     MOV	0x80, R0             	MOV	 (_FLASH_BUFFER + 0), R0
                                           	BANKSEL	_FLASH_BUFFER
0017dc   0381     CLR	0x81                 	CLR	 (_FLASH_BUFFER + 1)
                                           ;	.line	438; "../Flash.c"	FLASH_BUFFER[1] = LeftReadLightSW;
0017dd   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_FLASH_BUFFER
0017de   5182     MOV	0x82, R0             	MOV	 (_FLASH_BUFFER + 2), R0
                                           	BANKSEL	_FLASH_BUFFER
0017df   0383     CLR	0x83                 	CLR	 (_FLASH_BUFFER + 3)
                                           ;	.line	439; "../Flash.c"	FLASH_BUFFER[2] = Ind_Off;
                                           	BANKSEL	_FLASH_BUFFER
0017e0   0384     CLR	0x84                 	CLR	 (_FLASH_BUFFER + 4)
                                           	BANKSEL	_FLASH_BUFFER
0017e1   0385     CLR	0x85                 	CLR	 (_FLASH_BUFFER + 5)
                                           ;	.line	440; "../Flash.c"	FLASH_BUFFER[3] = RightReadLightSW;
                                           	BANKSEL	_FLASH_BUFFER
0017e2   0386     CLR	0x86                 	CLR	 (_FLASH_BUFFER + 6)
                                           	BANKSEL	_FLASH_BUFFER
0017e3   0387     CLR	0x87                 	CLR	 (_FLASH_BUFFER + 7)
                                           ;	.line	441; "../Flash.c"	FLASH_BUFFER[4] = Ind_Off;
                                           	BANKSEL	_FLASH_BUFFER
0017e4   0388     CLR	0x88                 	CLR	 (_FLASH_BUFFER + 8)
                                           	BANKSEL	_FLASH_BUFFER
0017e5   0389     CLR	0x89                 	CLR	 (_FLASH_BUFFER + 9)
                                           ;	.line	443; "../Flash.c"	set_led(1,LeftReadLightSW,Key_Off);
0017e6   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
0017e7   517d     MOV	0x7d, R0             	MOV	STK01, R0
0017e8   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
0017e9   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017ea   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
0017eb   e01e     MOVP	#0x1E               	PAGESEL	_set_led
0017ec   de11     CALL	#0xe11              	CALL	_set_led
0017ed   e017     MOVP	#0x17               	PAGESEL	$
                                           ;	.line	444; "../Flash.c"	set_led(2,RightReadLightSW,Key_Off);
0017ee   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
0017ef   517d     MOV	0x7d, R0             	MOV	STK01, R0
0017f0   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK00
0017f1   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017f2   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
0017f3   e01e     MOVP	#0x1E               	PAGESEL	_set_led
0017f4   de11     CALL	#0xe11              	CALL	_set_led
0017f5   e017     MOVP	#0x17               	PAGESEL	$
                                           ;	.line	446; "../Flash.c"	FLASH_WRITE_FUN(0x1FC0,FLASH_BUFFER_MAX);
0017f6   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	STK01
0017f7   517d     MOV	0x7d, R0             	MOV	STK01, R0
0017f8   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
                                           	BANKSEL	STK00
0017f9   517e     MOV	0x7e, R0             	MOV	STK00, R0
0017fa   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
0017fb   e01b     MOVP	#0x1B               	PAGESEL	_FLASH_WRITE_FUN
0017fc   db93     CALL	#0xb93              	CALL	_FLASH_WRITE_FUN
0017fd   e017     MOVP	#0x17               	PAGESEL	$
                                           _00034_DS_
0017fe   0008     CRET
                   	CRET	
                                           func._FLASH_WRITE_ONE	.code
                                           _FLASH_WRITE_ONE	;Function start
                                           ;	.line	392; "../Flash.c"	void FLASH_WRITE_ONE(unsigned int address,unsigned int value)
                                           	BANKSEL	r0x1046
                                           	MOV	r0x1046, R0
                                           	BANKSEL	r0x104B
                                           	MOV	r0x104B, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x1047
                                           	MOV	r0x1047, R0
                                           	BANKSEL	STK01
                                           	MOVZ	R0, STK01
                                           	BANKSEL	r0x1048
                                           	MOV	r0x1048, R0
                                           	BANKSEL	STK02
                                           	MOVZ	R0, STK02
                                           	BANKSEL	r0x1049
                                           	MOV	r0x1049, R0
                                           ;	.line	395; "../Flash.c"	FLASH_READ_FUN(address&0xFFE0,FLASH_BUFFER_MAX);
                                           	MOV	R0,# 0xe0
                                           	BANKSEL	r0x1047
                                           	AND	R0, r0x1047
                                           	BANKSEL	r0x104A
                                           	MOV	r0x104A, R0
                                           	MOV	R0,# 0x10
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x104A
                                           	MOVZ	R0, r0x104A
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x104B
                                           	MOVZ	R0, r0x104B
                                           	PAGESEL	_FLASH_READ_FUN
                                           	CALL	_FLASH_READ_FUN
                                           	PAGESEL	$
                                           ;	.line	397; "../Flash.c"	FLASH_BUFFER[address&0x1F] = value;
                                           	MOV	R0,# 0x1f
                                           	BANKSEL	r0x1047
                                           	AND	R0, r0x1047
                                           	BANKSEL	r0x104A
                                           	MOV	r0x104A, R0
                                           	BANKSEL	r0x104B
                                           	CLR	r0x104B
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x104A
                                           	RLCR	r0x104A
                                           	BANKSEL	r0x104C
                                           	MOV	r0x104C, R0
                                           	BANKSEL	r0x104B
                                           	RLCR	r0x104B
                                           	BANKSEL	r0x104C
                                           	MOV	R0, r0x104C
                                           	ADD	R0,# (_FLASH_BUFFER + 0)
                                           	BANKSEL	r0x104A
                                           	MOV	r0x104A, R0
                                           	BANKSEL	r0x1049
                                           	MOVZ	R0, r0x1049
                                           	BANKSEL	r0x104A
                                           	MOV	R1, r0x104A
                                           	BANKSEL	_FLASH_BUFFER
                                           	ST	[R1], R0
                                           	INC	R1
                                           	BANKSEL	r0x1048
                                           	MOVZ	R0, r0x1048
                                           	BANKSEL	_FLASH_BUFFER
                                           	ST	[R1], R0
                                           ;	.line	399; "../Flash.c"	FLASH_WRITE_FUN(address&0xFFE0,FLASH_BUFFER_MAX);
                                           	MOV	R0,# 0xe0
                                           	BANKSEL	r0x1047
                                           	AND	r0x1047, R0
                                           	MOV	R0,# 0x10
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x1047
                                           	MOVZ	R0, r0x1047
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x1046
                                           	MOVZ	R0, r0x1046
                                           	PAGESEL	_FLASH_WRITE_FUN
                                           	CALL	_FLASH_WRITE_FUN
                                           	PAGESEL	$
                                           	CRET	
                                           func._FLASH_WRITE_FUN	.code
                                           _FLASH_WRITE_FUN	;Function start
                                           ;	.line	238; "../Flash.c"	void FLASH_WRITE_FUN(unsigned int address,unsigned char length)
001b93   e100     MOVB	#0x00               	BANKSEL	r0x1036
001b94   51b5     MOV	0xb5, R0             	MOV	r0x1036, R0
                                           	BANKSEL	STK00
001b95   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1037
001b96   51b6     MOV	0xb6, R0             	MOV	r0x1037, R0
                                           	BANKSEL	STK01
001b97   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1038
001b98   51b4     MOV	0xb4, R0             	MOV	r0x1038, R0
                                           ;	.line	242; "../Flash.c"	NVMADDRH=(unsigned char) (address>>8);
                                           	BANKSEL	r0x1036
001b99   0eb5     MOVZ	R0, 0xb5            	MOVZ	R0, r0x1036
                                           	BANKSEL	_NVMADDRH
001b9a   513a     MOV	0x3a, R0             	MOV	_NVMADDRH, R0
                                           ;	.line	243; "../Flash.c"	NVMADDRL=address;
                                           	BANKSEL	r0x1037
001b9b   0eb6     MOVZ	R0, 0xb6            	MOVZ	R0, r0x1037
                                           	BANKSEL	_NVMADDRL
001b9c   513b     MOV	0x3b, R0             	MOV	_NVMADDRL, R0
                                           	;
                                           	BANKSEL _INTCTL
001b9d   520b     MOV	R1, 0xb              	MOV R1,_INTCTL
                                           	;
001b9e   660b     CLR	0xb, 6               	CLR _INTCTL,_PUIE
001b9f   670b     CLR	0xb, 7               	CLR _INTCTL,_AIE
001ba0   770b     JNB	0xb, 7               	JNB _INTCTL,_AIE
001ba1   cb9f     JMP	#0xb9f               	JMP $-2
                                           	;
001ba2   9830     MOV	R0, #0x30            	MOV R0,#0x30
001ba3   542f     MOV	R2, 0x2f             	MOV R2,_OSCCTL
001ba4   512f     MOV	0x2f, R0             	MOV _OSCCTL,R0
                                           	;
001ba5   9b80     MOV	R3, #0x80            	MOV R3,#_FLASH_BUFFER
                                           	
                                           ;	.line	262; "../Flash.c"	while(length--)		// 仅使用R0，不改变R1
                                           	BANKSEL	r0x1038
001ba6   0eb4     MOVZ	R0, 0xb4            	MOVZ	R0, r0x1038
                                           	BANKSEL	r0x1037
001ba7   51b6     MOV	0xb6, R0             	MOV	r0x1037, R0
                                           _00011_DS_
                                           	BANKSEL	r0x1037
001ba8   0eb6     MOVZ	R0, 0xb6            	MOVZ	R0, r0x1037
                                           	BANKSEL	r0x1036
001ba9   51b5     MOV	0xb5, R0             	MOV	r0x1036, R0
                                           	BANKSEL	r0x1037
001baa   07b6     DEC	0xb6                 	DEC	r0x1037
001bab   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1036
001bac   30b5     ORL	R0, 0xb5             	ORL	R0, r0x1036
001bad   7203     JNB	0x3, 2               	JNB	PSW, 2
001bae   cbcc     JMP	#0xbcc               	JMP	_00013_DS_
                                           	;
001baf   e103     MOVB	#0x03               	BANKSEL _FLASH_BUFFER
001bb0   f71e     LD	R6, [R3]              	LD R6,[R3]
001bb1   ff13     INC	R3                   	INC R3
001bb2   f71f     LD	R7, [R3]              	LD R7,[R3]
001bb3   ff13     INC	R3                   	INC R3
001bb4   e100     MOVB	#0x00               	BANKSEL _NVMDATAH
001bb5   5f38     MOV	0x38, R7             	MOV _NVMDATAH,R7
001bb6   5d39     MOV	0x39, R6             	MOV _NVMDATAL,R6
                                           	;
001bb7   9d84     MOV	R5, #0x84            	MOV R5 ,#0x84
001bb8   5b3c     MOV	0x3c, R5             	MOV _NVMCTL0,R5
001bb9   9d69     MOV	R5, #0x69            	MOV R5,#0x69
001bba   5b3d     MOV	0x3d, R5             	MOV _NVMCTL1,R5
001bbb   9d96     MOV	R5, #0x96            	MOV R5,#0x96
001bbc   5b3d     MOV	0x3d, R5             	MOV _NVMCTL1,R5
001bbd   693c     SET	0x3c, 1              	SET _NVMCTL0 , 1 ;
001bbe   ffff     NOPZ                     	NOPZ
001bbf   ffff     NOPZ                     	NOPZ
001bc0   ffff     NOPZ                     	NOPZ
001bc1   ffff     NOPZ                     	NOPZ
001bc2   ffff     NOPZ                     	NOPZ
001bc3   ffff     NOPZ                     	NOPZ ;
001bc4   ffff     NOPZ                     	NOPZ
001bc5   ffff     NOPZ                     	NOPZ
001bc6   ffff     NOPZ                     	NOPZ
001bc7   ffff     NOPZ                     	NOPZ
001bc8   9d80     MOV	R5, #0x80            	MOV R5,#0X80
001bc9   5b3c     MOV	0x3c, R5             	MOV _NVMCTL0,R5
                                           	;
                                           	BANKSEL _NVMADDRL
001bca   0b3b     INC	0x3b                 	INC _NVMADDRL
                                           	
001bcb   cba8     JMP	#0xba8               	JMP	_00011_DS_
                                           _00013_DS_
                                           	;
                                           	BANKSEL _OSCCTL
001bcc   552f     MOV	0x2f, R2             	MOV _OSCCTL,R2
001bcd   89c0     AND	R1, #0xc0            	AND R1,#0xC0 ;
001bce   330b     ORL	0xb, R1              	ORL _INTCTL,R1
                                           	
001bcf   0008     CRET
                   	CRET	
                                           func._FLASH_READ_FUN	.code
                                           _FLASH_READ_FUN	;Function start
                                           ;	.line	108; "../Flash.c"	void FLASH_READ_FUN(unsigned int address,unsigned char length)
                                           	BANKSEL	r0x1041
                                           	MOV	r0x1041, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x1042
                                           	MOV	r0x1042, R0
                                           	BANKSEL	STK01
                                           	MOVZ	R0, STK01
                                           	BANKSEL	r0x1043
                                           	MOV	r0x1043, R0
                                           ;	.line	112; "../Flash.c"	NVMADDRH=(unsigned char) (address>>8);
                                           	BANKSEL	r0x1041
                                           	MOVZ	R0, r0x1041
                                           	BANKSEL	_NVMADDRH
                                           	MOV	_NVMADDRH, R0
                                           ;	.line	113; "../Flash.c"	NVMADDRL=address;
                                           	BANKSEL	r0x1042
                                           	MOVZ	R0, r0x1042
                                           	BANKSEL	_NVMADDRL
                                           	MOV	_NVMADDRL, R0
                                           	;
                                           	BANKSEL _INTCTL
                                           	MOV R1,_INTCTL
                                           	;
                                           	CLR _INTCTL,_AIE
                                           	JNB _INTCTL,_AIE
                                           	JMP $-2
                                           	;
                                           	MOV R0,#0x30
                                           	MOV R2,_OSCCTL
                                           	MOV _OSCCTL,R0
                                           	;
                                           	MOV R3,#_FLASH_BUFFER
                                           	
                                           ;	.line	131; "../Flash.c"	while(length--)	// 仅使用R0，不改变R1
                                           	BANKSEL	r0x1043
                                           	MOVZ	R0, r0x1043
                                           	BANKSEL	r0x1042
                                           	MOV	r0x1042, R0
                                           _00003_DS_
                                           	BANKSEL	r0x1042
                                           	MOVZ	R0, r0x1042
                                           	BANKSEL	r0x1041
                                           	MOV	r0x1041, R0
                                           	BANKSEL	r0x1042
                                           	DEC	r0x1042
                                           	MOV	R0,# 0x00
                                           	BANKSEL	r0x1041
                                           	ORL	R0, r0x1041
                                           	JNB	PSW, 2
                                           	JMP	_00005_DS_
                                           	;
                                           	BANKSEL _NVMCTL0
                                           	MOV R5,#0x81
                                           	MOV _NVMCTL0,R5
                                           	NOPZ
                                           	NOPZ
                                           	NOPZ ;
                                           	NOPZ
                                           	;
                                           	BANKSEL _NVMDATAL
                                           	MOV R6,_NVMDATAL
                                           	MOV R7,_NVMDATAH
                                           	BANKSEL _FLASH_BUFFER
                                           	ST [R3],R6
                                           	INC R3
                                           	ST [R3],R7
                                           	INC R3
                                           	;
                                           	BANKSEL _NVMADDRL
                                           	INC _NVMADDRL
                                           	JNB _PSW,_Z
                                           	INC _NVMADDRH
                                           	
                                           	JMP	_00003_DS_
                                           _00005_DS_
                                           	;
                                           	BANKSEL _OSCCTL
                                           	MOV _OSCCTL,R2
                                           	AND R1,#0xC0 ;
                                           	ORL _INTCTL,R1
                                           	
                                           	CRET	
                                           func._FLASH_READ_ONE	.code
                                           _FLASH_READ_ONE	;Function start
                                           ;	.line	16; "../Flash.c"	unsigned int FLASH_READ_ONE(unsigned int address)
001db2   e100     MOVB	#0x00               	BANKSEL	r0x102F
001db3   51b7     MOV	0xb7, R0             	MOV	r0x102F, R0
                                           	BANKSEL	STK00
001db4   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x102E
001db5   51b8     MOV	0xb8, R0             	MOV	r0x102E, R0
                                           ;	.line	22; "../Flash.c"	NVMADDRH=(unsigned char)(address>>8);
                                           	BANKSEL	r0x102F
001db6   0eb7     MOVZ	R0, 0xb7            	MOVZ	R0, r0x102F
                                           	BANKSEL	_NVMADDRH
001db7   513a     MOV	0x3a, R0             	MOV	_NVMADDRH, R0
                                           ;	.line	23; "../Flash.c"	NVMADDRL=(unsigned char)address;
                                           	BANKSEL	r0x102E
001db8   0eb8     MOVZ	R0, 0xb8            	MOVZ	R0, r0x102E
                                           	BANKSEL	_NVMADDRL
001db9   513b     MOV	0x3b, R0             	MOV	_NVMADDRL, R0
                                           	;
                                           	BANKSEL _INTCTL
001dba   520b     MOV	R1, 0xb              	MOV R1,_INTCTL
                                           	;
001dbb   670b     CLR	0xb, 7               	CLR _INTCTL,_AIE
001dbc   770b     JNB	0xb, 7               	JNB _INTCTL,_AIE
001dbd   cdbb     JMP	#0xdbb               	JMP $-2
                                           	;
001dbe   9830     MOV	R0, #0x30            	MOV R0,#0x30
001dbf   542f     MOV	R2, 0x2f             	MOV R2,_OSCCTL
001dc0   512f     MOV	0x2f, R0             	MOV _OSCCTL,R0
                                           	;
                                           	BANKSEL _NVMCTL0
001dc1   9d81     MOV	R5, #0x81            	MOV R5,#0x81
001dc2   5b3c     MOV	0x3c, R5             	MOV _NVMCTL0,R5
001dc3   ffff     NOPZ                     	NOPZ
001dc4   ffff     NOPZ                     	NOPZ
001dc5   ffff     NOPZ                     	NOPZ
001dc6   ffff     NOPZ                     	NOPZ
                                           	;
001dc7   552f     MOV	0x2f, R2             	MOV _OSCCTL,R2
001dc8   89c0     AND	R1, #0xc0            	AND R1,#0xC0 ;
001dc9   330b     ORL	0xb, R1              	ORL INTCTL,R1
                                           	;
                                           	BANKSEL _NVMDATAL
001dca   5c39     MOV	R6, 0x39             	MOV R6,_NVMDATAL
001dcb   5e38     MOV	R7, 0x38             	MOV R7,_NVMDATAH
001dcc   e101     MOVB	#0x01               	BANKSEL _FLASH_READ_BUF
001dcd   5db9     MOV	0xb9, R6             	MOV (_FLASH_READ_BUF),R6
001dce   5fba     MOV	0xba, R7             	MOV (_FLASH_READ_BUF+1),R7
                                           	
                                           ;	.line	56; "../Flash.c"	return 	FLASH_READ_BUF;
                                           	BANKSEL	_FLASH_READ_BUF
001dcf   0eb9     MOVZ	R0, 0xb9            	MOVZ	R0, _FLASH_READ_BUF
                                           	BANKSEL	STK00
001dd0   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	_FLASH_READ_BUF
001dd1   0eba     MOVZ	R0, 0xba            	MOVZ	R0, (_FLASH_READ_BUF + 1)
001dd2   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           ID_Timer_0	.idata
                                           _count
                                           	.db	0x00, 0x00
                                           ID_Timer_1	.idata
                                           _H_Level_C
                                           	.db	0x00, 0x00
                                           ID_Timer_2	.idata
                                           _H_Level_T
                                           	.db	0x00, 0x00
                                           ID_Timer_3	.idata
                                           _L_Level_C
                                           	.db	0x00, 0x00
                                           ID_Timer_4	.idata
                                           _L_Level_T
                                           	.db	0x00, 0x00
                                           ID_Timer_5	.idata
                                           _sys_LED_Time
                                           	.db	0x00, 0x00
                                           ID_Timer_6	.idata
                                           _flag
                                           	.db	0x02
                                           ID_Timer_7	.idata
                                           _Pwm_duty
                                           	.db	0x00
                                           interrupt_0x04	.code	0x4
000004   f8c2     MOV	R2, R0               	MOV		R2,R0
000005   5617     MOV	R3, 0x17             	MOV		R3,BANK
000006   5003     MOV	R0, 0x3              	MOV		R0,PSW
000007   e101     MOVB	#0x01               	BANKSEL	I0PSW
000008   51d9     MOV	0xd9, R0             	MOV		I0PSW,R0
000009   500a     MOV	R0, 0xa              	MOV		R0,PCH
00000a   e101     MOVB	#0x01               	BANKSEL	I0PCH
00000b   51da     MOV	0xda, R0             	MOV		I0PCH,R0
00000c   53d7     MOV	0xd7, R1             	MOV		I0R1,R1
00000d   5fd8     MOV	0xd8, R7             	MOV		I0R7,R7
00000e   e01a     MOVP	#0x1A               	PAGESEL	interrupt_service_routine_0x04
00000f   caa8     JMP	#0xaa8               	JMP		interrupt_service_routine_0x04
                                           func._int_fun0	.code
                                           _int_fun0	;Function start
                                           interrupt_service_routine_0x04
                                           ;	.line	239; "../Timer.c"	if(T3IF)
001aa8   e100     MOVB	#0x00               	BANKSEL	_EIF2_bits
001aa9   7f0d     JB	0xd, 7                	JB	_EIF2_bits, 7
001aaa   caaf     JMP	#0xaaf               	JMP	_00031_DS_
                                           ;	.line	241; "../Timer.c"	T3IF = 0;
                                           	BANKSEL	_EIF2_bits
001aab   670d     CLR	0xd, 7               	CLR	_EIF2_bits, 7
                                           ;	.line	242; "../Timer.c"	Touch_Int_Flg = 1;
001aac   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
001aad   e101     MOVB	#0x01               	BANKSEL	_Touch_Int_Flg
001aae   51a4     MOV	0xa4, R0             	MOV	_Touch_Int_Flg, R0
                                           _00031_DS_
                                           ;	.line	245; "../Timer.c"	if(T0IF)   //T0中断
001aaf   e100     MOVB	#0x00               	BANKSEL	_INTCTL_bits
001ab0   7a0b     JB	0xb, 2                	JB	_INTCTL_bits, 2
001ab1   cabd     JMP	#0xabd               	JMP	_00033_DS_
                                           ;	.line	247; "../Timer.c"	T0IF = 0;
                                           	BANKSEL	_INTCTL_bits
001ab2   620b     CLR	0xb, 2               	CLR	_INTCTL_bits, 2
                                           ;	.line	248; "../Timer.c"	count++;
001ab3   e101     MOVB	#0x01               	BANKSEL	_count
001ab4   0bb7     INC	0xb7                 	INC	_count
001ab5   7a03     JB	0x3, 2                	JB	PSW, 2
001ab6   cab8     JMP	#0xab8               	JMP	_00058_DS_
                                           	BANKSEL	_count
001ab7   0bb8     INC	0xb8                 	INC	(_count + 1)
                                           _00058_DS_
                                           ;	.line	249; "../Timer.c"	sys_LED_Time++;
                                           	BANKSEL	_sys_LED_Time
001ab8   0bad     INC	0xad                 	INC	_sys_LED_Time
001ab9   7a03     JB	0x3, 2                	JB	PSW, 2
001aba   cabc     JMP	#0xabc               	JMP	_00059_DS_
                                           	BANKSEL	_sys_LED_Time
001abb   0bae     INC	0xae                 	INC	(_sys_LED_Time + 1)
                                           _00059_DS_
001abc   0064     CWDT                     	CWDT 
                                           _00033_DS_
                                           ;	.line	253; "../Timer.c"	if(P0IF)  //P0电平变化中断
001abd   e100     MOVB	#0x00               	BANKSEL	_INTCTL_bits
001abe   780b     JB	0xb, 0                	JB	_INTCTL_bits, 0
001abf   caf5     JMP	#0xaf5               	JMP	_00045_DS_
                                           	
                                           	BANKSEL P0 
001ac0   0f05     MOV	0x5                  	MOV P0 
                                           	
                                           ;	.line	256; "../Timer.c"	P0IF=0; //清零中断标志量
                                           	BANKSEL	_INTCTL_bits
001ac1   600b     CLR	0xb, 0               	CLR	_INTCTL_bits, 0
                                           ;	.line	258; "../Timer.c"	if(flag == 1)	//已获取高电平
                                           	BANKSEL	_flag
001ac2   0e9c     MOVZ	R0, 0x9c            	MOVZ	R0, _flag
001ac3   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
001ac4   7a03     JB	0x3, 2                	JB	PSW, 2
001ac5   cad2     JMP	#0xad2               	JMP	_00035_DS_
                                           ;	.line	260; "../Timer.c"	flag = 2; //2表示获取到下降沿，记录高电平值
001ac6   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_flag
001ac7   519c     MOV	0x9c, R0             	MOV	_flag, R0
                                           ;	.line	261; "../Timer.c"	H_Level_C = count;  //定时器圈数
001ac8   e101     MOVB	#0x01               	BANKSEL	_count
001ac9   0eb7     MOVZ	R0, 0xb7            	MOVZ	R0, _count
                                           	BANKSEL	_H_Level_C
001aca   51b5     MOV	0xb5, R0             	MOV	_H_Level_C, R0
                                           	BANKSEL	_count
001acb   0eb8     MOVZ	R0, 0xb8            	MOVZ	R0, (_count + 1)
                                           	BANKSEL	_H_Level_C
001acc   51b6     MOV	0xb6, R0             	MOV	(_H_Level_C + 1), R0
                                           ;	.line	262; "../Timer.c"	H_Level_T = T0;		//T0当前值
001acd   e100     MOVB	#0x00               	BANKSEL	_T0
001ace   0e01     MOVZ	R0, 0x1             	MOVZ	R0, _T0
001acf   e101     MOVB	#0x01               	BANKSEL	_H_Level_T
001ad0   51b3     MOV	0xb3, R0             	MOV	_H_Level_T, R0
                                           	BANKSEL	_H_Level_T
001ad1   03b4     CLR	0xb4                 	CLR	(_H_Level_T + 1)
                                           _00035_DS_
                                           ;	.line	265; "../Timer.c"	if(!P05)  //根据电路 输入高电平时 读为电平
001ad2   e100     MOVB	#0x00               	BANKSEL	_P0_bits
001ad3   7505     JNB	0x5, 5               	JNB	_P0_bits, 5
001ad4   caf5     JMP	#0xaf5               	JMP	_00045_DS_
                                           ;	.line	267; "../Timer.c"	if(flag == 0)   //初始等待状态
001ad5   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	_flag
001ad6   309c     ORL	R0, 0x9c             	ORL	R0, _flag
001ad7   7a03     JB	0x3, 2                	JB	PSW, 2
001ad8   cae0     JMP	#0xae0               	JMP	_00039_DS_
                                           ;	.line	269; "../Timer.c"	flag = 1; //1表示初次获取到上升沿，初始化
001ad9   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_flag
001ada   519c     MOV	0x9c, R0             	MOV	_flag, R0
                                           ;	.line	270; "../Timer.c"	T0 = 0;	//清零计数
                                           	BANKSEL	_T0
001adb   0301     CLR	0x1                  	CLR	_T0
                                           ;	.line	271; "../Timer.c"	count = 0;
001adc   e101     MOVB	#0x01               	BANKSEL	_count
001add   03b7     CLR	0xb7                 	CLR	_count
                                           	BANKSEL	_count
001ade   03b8     CLR	0xb8                 	CLR	(_count + 1)
001adf   caf5     JMP	#0xaf5               	JMP	_00045_DS_
                                           _00039_DS_
                                           ;	.line	274; "../Timer.c"	if(flag == 2)   //第二次获取上升沿 一个周期
                                           	BANKSEL	_flag
001ae0   0e9c     MOVZ	R0, 0x9c            	MOVZ	R0, _flag
001ae1   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
001ae2   7a03     JB	0x3, 2                	JB	PSW, 2
001ae3   caf5     JMP	#0xaf5               	JMP	_00045_DS_
                                           ;	.line	276; "../Timer.c"	L_Level_C = count;  //定时器圈数
001ae4   e101     MOVB	#0x01               	BANKSEL	_count
001ae5   0eb7     MOVZ	R0, 0xb7            	MOVZ	R0, _count
                                           	BANKSEL	_L_Level_C
001ae6   51b1     MOV	0xb1, R0             	MOV	_L_Level_C, R0
                                           	BANKSEL	_count
001ae7   0eb8     MOVZ	R0, 0xb8            	MOVZ	R0, (_count + 1)
                                           	BANKSEL	_L_Level_C
001ae8   51b2     MOV	0xb2, R0             	MOV	(_L_Level_C + 1), R0
                                           ;	.line	277; "../Timer.c"	L_Level_T = T0;		//T0当前值
001ae9   e100     MOVB	#0x00               	BANKSEL	_T0
001aea   0e01     MOVZ	R0, 0x1             	MOVZ	R0, _T0
001aeb   e101     MOVB	#0x01               	BANKSEL	_L_Level_T
001aec   51af     MOV	0xaf, R0             	MOV	_L_Level_T, R0
                                           	BANKSEL	_L_Level_T
001aed   03b0     CLR	0xb0                 	CLR	(_L_Level_T + 1)
                                           ;	.line	279; "../Timer.c"	flag = 1;       //标记下一个周期捕获到上升沿
001aee   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
001aef   e100     MOVB	#0x00               	BANKSEL	_flag
001af0   519c     MOV	0x9c, R0             	MOV	_flag, R0
                                           ;	.line	280; "../Timer.c"	T0 = 0;	//清零计数
                                           	BANKSEL	_T0
001af1   0301     CLR	0x1                  	CLR	_T0
                                           ;	.line	281; "../Timer.c"	count = 0;
001af2   e101     MOVB	#0x01               	BANKSEL	_count
001af3   03b7     CLR	0xb7                 	CLR	_count
                                           	BANKSEL	_count
001af4   03b8     CLR	0xb8                 	CLR	(_count + 1)
                                           _00045_DS_
001af5   e101     MOVB	#0x01               	BANKSEL	I0R1
001af6   52d7     MOV	R1, 0xd7             	MOV	R1, I0R1
                                           	BANKSEL	I0R7
001af7   5ed8     MOV	R7, 0xd8             	MOV	R7, I0R7
                                           	BANKSEL	I0PCH
001af8   50da     MOV	R0, 0xda             	MOV	R0, I0PCH
001af9   510a     MOV	0xa, R0              	MOV	PCH, R0
                                           	BANKSEL	I0PSW
001afa   50d9     MOV	R0, 0xd9             	MOV	R0, I0PSW
001afb   5103     MOV	0x3, R0              	MOV	PSW, R0
001afc   5717     MOV	0x17, R3             	MOV	BANK, R3
001afd   f8d0     MOV	R0, R2               	MOV	R0, R2
001afe   0009     IRET                     	IRET	
                                           func._int_fun1	.code
                                           _int_fun1	;Function start
                                           interrupt_service_routine_0x14
                                           _00054_DS_
                                           ;	.line	291; "../Timer.c"	}
                                           	IRET	
                                           func._Clock_ClearSysLEDTimeStatus	.code
                                           _Clock_ClearSysLEDTimeStatus	;Function start
                                           ;	.line	226; "../Timer.c"	sys_LED_Time = 0;
001f3e   e101     MOVB	#0x01               	BANKSEL	_sys_LED_Time
001f3f   03ad     CLR	0xad                 	CLR	_sys_LED_Time
                                           	BANKSEL	_sys_LED_Time
001f40   03ae     CLR	0xae                 	CLR	(_sys_LED_Time + 1)
001f41   0008     CRET
                   	CRET	
                                           func._Clock_GetSysLEDTimeStatus	.code
                                           _Clock_GetSysLEDTimeStatus	;Function start
                                           ;	.line	221; "../Timer.c"	return sys_LED_Time;  //
001f24   e101     MOVB	#0x01               	BANKSEL	_sys_LED_Time
001f25   0ead     MOVZ	R0, 0xad            	MOVZ	R0, _sys_LED_Time
                                           	BANKSEL	STK00
001f26   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	_sys_LED_Time
001f27   0eae     MOVZ	R0, 0xae            	MOVZ	R0, (_sys_LED_Time + 1)
001f28   0008     CRET
                   	CRET	
                                           func._pwm_deal	.code
                                           _pwm_deal	;Function start
                                           ;	.line	198; "../Timer.c"	if(count > 10)  //超时
0019e9   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
0019ea   e101     MOVB	#0x01               	BANKSEL	_count
0019eb   38b8     SUB	R0, 0xb8             	SUB	R0, (_count + 1)
0019ec   7a03     JB	0x3, 2                	JB	PSW, 2
0019ed   c9f0     JMP	#0x9f0               	JMP	_00025_DS_
0019ee   980b     MOV	R0, #0xb             	MOV	R0,# 0x0b
                                           	BANKSEL	_count
0019ef   38b7     SUB	R0, 0xb7             	SUB	R0, _count
                                           _00025_DS_
0019f0   7803     JB	0x3, 0                	JB	PSW, 0
0019f1   c9fa     JMP	#0x9fa               	JMP	_00019_DS_
                                           ;	.line	200; "../Timer.c"	if(P05)
0019f2   e100     MOVB	#0x00               	BANKSEL	_P0_bits
0019f3   7d05     JB	0x5, 5                	JB	_P0_bits, 5
0019f4   c9f7     JMP	#0x9f7               	JMP	_00016_DS_
                                           ;	.line	201; "../Timer.c"	Pwm_duty = 0;
                                           	BANKSEL	_Pwm_duty
0019f5   039b     CLR	0x9b                 	CLR	_Pwm_duty
0019f6   ca4f     JMP	#0xa4f               	JMP	_00021_DS_
                                           _00016_DS_
                                           ;	.line	203; "../Timer.c"	Pwm_duty = 100;
0019f7   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	_Pwm_duty
0019f8   519b     MOV	0x9b, R0             	MOV	_Pwm_duty, R0
0019f9   ca4f     JMP	#0xa4f               	JMP	_00021_DS_
                                           _00019_DS_
                                           ;	.line	209; "../Timer.c"	Pwm_duty =  ((H_Level_C * 255 + H_Level_T) * 100) / (L_Level_C * 255 + L_Level_T);
                                           	BANKSEL	_H_Level_C
0019fa   0eb5     MOVZ	R0, 0xb5            	MOVZ	R0, _H_Level_C
                                           	BANKSEL	STK02
0019fb   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	_H_Level_C
0019fc   0eb6     MOVZ	R0, 0xb6            	MOVZ	R0, (_H_Level_C + 1)
                                           	BANKSEL	STK01
0019fd   517d     MOV	0x7d, R0             	MOV	STK01, R0
0019fe   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	STK00
0019ff   517e     MOV	0x7e, R0             	MOV	STK00, R0
001a00   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001a01   e01e     MOVP	#0x1E               	PAGESEL	__mulint
001a02   de4a     CALL	#0xe4a              	CALL	__mulint
001a03   e01a     MOVP	#0x1A               	PAGESEL	$
001a04   e100     MOVB	#0x00               	BANKSEL	r0x100F
001a05   519f     MOV	0x9f, R0             	MOV	r0x100F, R0
                                           	BANKSEL	STK00
001a06   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1010
001a07   51a0     MOV	0xa0, R0             	MOV	r0x1010, R0
001a08   e101     MOVB	#0x01               	BANKSEL	_H_Level_T
001a09   50b3     MOV	R0, 0xb3             	MOV	R0, _H_Level_T
001a0a   e100     MOVB	#0x00               	BANKSEL	r0x1010
001a0b   21a0     ADD	0xa0, R0             	ADD	r0x1010, R0
001a0c   e101     MOVB	#0x01               	BANKSEL	_H_Level_T
001a0d   0eb4     MOVZ	R0, 0xb4            	MOVZ	R0, (_H_Level_T + 1)
001a0e   7003     JNB	0x3, 0               	JNB	PSW, 0
001a0f   ff10     INC	R0                   	INC	R0
001a10   7203     JNB	0x3, 2               	JNB	PSW, 2
001a11   ca14     JMP	#0xa14               	JMP	_00056_DS_
001a12   e100     MOVB	#0x00               	BANKSEL	r0x100F
001a13   219f     ADD	0x9f, R0             	ADD	r0x100F, R0
                                           _00056_DS_
001a14   e100     MOVB	#0x00               	BANKSEL	r0x1010
001a15   0ea0     MOVZ	R0, 0xa0            	MOVZ	R0, r0x1010
                                           	BANKSEL	STK02
001a16   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	r0x100F
001a17   0e9f     MOVZ	R0, 0x9f            	MOVZ	R0, r0x100F
                                           	BANKSEL	STK01
001a18   517d     MOV	0x7d, R0             	MOV	STK01, R0
001a19   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	STK00
001a1a   517e     MOV	0x7e, R0             	MOV	STK00, R0
001a1b   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001a1c   e01e     MOVP	#0x1E               	PAGESEL	__mulint
001a1d   de4a     CALL	#0xe4a              	CALL	__mulint
001a1e   e01a     MOVP	#0x1A               	PAGESEL	$
001a1f   e100     MOVB	#0x00               	BANKSEL	r0x100F
001a20   519f     MOV	0x9f, R0             	MOV	r0x100F, R0
                                           	BANKSEL	STK00
001a21   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1010
001a22   51a0     MOV	0xa0, R0             	MOV	r0x1010, R0
001a23   e101     MOVB	#0x01               	BANKSEL	_L_Level_C
001a24   0eb1     MOVZ	R0, 0xb1            	MOVZ	R0, _L_Level_C
                                           	BANKSEL	STK02
001a25   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	_L_Level_C
001a26   0eb2     MOVZ	R0, 0xb2            	MOVZ	R0, (_L_Level_C + 1)
                                           	BANKSEL	STK01
001a27   517d     MOV	0x7d, R0             	MOV	STK01, R0
001a28   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	STK00
001a29   517e     MOV	0x7e, R0             	MOV	STK00, R0
001a2a   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001a2b   e01e     MOVP	#0x1E               	PAGESEL	__mulint
001a2c   de4a     CALL	#0xe4a              	CALL	__mulint
001a2d   e01a     MOVP	#0x1A               	PAGESEL	$
001a2e   e100     MOVB	#0x00               	BANKSEL	r0x1011
001a2f   519d     MOV	0x9d, R0             	MOV	r0x1011, R0
                                           	BANKSEL	STK00
001a30   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1012
001a31   519e     MOV	0x9e, R0             	MOV	r0x1012, R0
001a32   e101     MOVB	#0x01               	BANKSEL	_L_Level_T
001a33   50af     MOV	R0, 0xaf             	MOV	R0, _L_Level_T
001a34   e100     MOVB	#0x00               	BANKSEL	r0x1012
001a35   219e     ADD	0x9e, R0             	ADD	r0x1012, R0
001a36   e101     MOVB	#0x01               	BANKSEL	_L_Level_T
001a37   0eb0     MOVZ	R0, 0xb0            	MOVZ	R0, (_L_Level_T + 1)
001a38   7003     JNB	0x3, 0               	JNB	PSW, 0
001a39   ff10     INC	R0                   	INC	R0
001a3a   7203     JNB	0x3, 2               	JNB	PSW, 2
001a3b   ca3e     JMP	#0xa3e               	JMP	_00057_DS_
001a3c   e100     MOVB	#0x00               	BANKSEL	r0x1011
001a3d   219d     ADD	0x9d, R0             	ADD	r0x1011, R0
                                           _00057_DS_
001a3e   e100     MOVB	#0x00               	BANKSEL	r0x1012
001a3f   0e9e     MOVZ	R0, 0x9e            	MOVZ	R0, r0x1012
                                           	BANKSEL	STK02
001a40   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	r0x1011
001a41   0e9d     MOVZ	R0, 0x9d            	MOVZ	R0, r0x1011
                                           	BANKSEL	STK01
001a42   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	r0x1010
001a43   0ea0     MOVZ	R0, 0xa0            	MOVZ	R0, r0x1010
                                           	BANKSEL	STK00
001a44   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x100F
001a45   0e9f     MOVZ	R0, 0x9f            	MOVZ	R0, r0x100F
001a46   e01c     MOVP	#0x1C               	PAGESEL	__divuint
001a47   dc09     CALL	#0xc09              	CALL	__divuint
001a48   e01a     MOVP	#0x1A               	PAGESEL	$
001a49   e100     MOVB	#0x00               	BANKSEL	r0x100F
001a4a   519f     MOV	0x9f, R0             	MOV	r0x100F, R0
                                           	BANKSEL	STK00
001a4b   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1010
001a4c   51a0     MOV	0xa0, R0             	MOV	r0x1010, R0
                                           	BANKSEL	r0x1010
001a4d   0ea0     MOVZ	R0, 0xa0            	MOVZ	R0, r0x1010
                                           	BANKSEL	_Pwm_duty
001a4e   519b     MOV	0x9b, R0             	MOV	_Pwm_duty, R0
                                           _00021_DS_
001a4f   0008     CRET
                   	CRET	
                                           func._get_pwmduty	.code
                                           _get_pwmduty	;Function start
                                           ;	.line	191; "../Timer.c"	pwm_deal();
001f18   e019     MOVP	#0x19               	PAGESEL	_pwm_deal
001f19   d9e9     CALL	#0x9e9              	CALL	_pwm_deal
001f1a   e01f     MOVP	#0x1F               	PAGESEL	$
                                           ;	.line	192; "../Timer.c"	return Pwm_duty;
001f1b   e100     MOVB	#0x00               	BANKSEL	_Pwm_duty
001f1c   0e9b     MOVZ	R0, 0x9b            	MOVZ	R0, _Pwm_duty
001f1d   0008     CRET
                   	CRET	
                                           func._P0_INT_init	.code
                                           _P0_INT_init	;Function start
                                           ;	.line	181; "../Timer.c"	P0IE = 1;
001f29   e100     MOVB	#0x00               	BANKSEL	_INTCTL_bits
001f2a   6b0b     SET	0xb, 3               	SET	_INTCTL_bits, 3
                                           ;	.line	182; "../Timer.c"	PP0 = 1; //高优先级
                                           	BANKSEL	_IP0_bits
001f2b   6822     SET	0x22, 0              	SET	_IP0_bits, 0
                                           ;	.line	183; "../Timer.c"	P0IF = 0;
                                           	BANKSEL	_INTCTL_bits
001f2c   600b     CLR	0xb, 0               	CLR	_INTCTL_bits, 0
001f2d   0008     CRET
                   	CRET	
                                           func._timer_init	.code
                                           _timer_init	;Function start
                                           ;	.line	171; "../Timer.c"	Timer1_Init(); //Timer1 CPP1 CPP2 PWM 初始化
001f11   e01e     MOVP	#0x1E               	PAGESEL	_Timer1_Init
001f12   de61     CALL	#0xe61              	CALL	_Timer1_Init
001f13   e01f     MOVP	#0x1F               	PAGESEL	$
                                           ;	.line	172; "../Timer.c"	Timer0_Init(); //Timer0 PWM计数定时器
001f14   e01e     MOVP	#0x1E               	PAGESEL	_Timer0_Init
001f15   dec2     CALL	#0xec2              	CALL	_Timer0_Init
001f16   e01f     MOVP	#0x1F               	PAGESEL	$
001f17   0008     CRET
                   	CRET	
                                           func._set_PWM2L	.code
                                           _set_PWM2L	;Function start
                                           ;	.line	163; "../Timer.c"	void set_PWM2L(uint8_t duty)
001c40   e100     MOVB	#0x00               	BANKSEL	r0x1013
001c41   51a4     MOV	0xa4, R0             	MOV	r0x1013, R0
                                           ;	.line	165; "../Timer.c"	PWM2L = 249 * duty * 0.01;
                                           	BANKSEL	r0x1013
001c42   0ea4     MOVZ	R0, 0xa4            	MOVZ	R0, r0x1013
001c43   e01f     MOVP	#0x1F               	PAGESEL	___uchar2fs
001c44   df09     CALL	#0xf09              	CALL	___uchar2fs
001c45   e01c     MOVP	#0x1C               	PAGESEL	$
001c46   e100     MOVB	#0x00               	BANKSEL	r0x1014
001c47   51a1     MOV	0xa1, R0             	MOV	r0x1014, R0
                                           	BANKSEL	STK00
001c48   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1015
001c49   51a2     MOV	0xa2, R0             	MOV	r0x1015, R0
                                           	BANKSEL	STK01
001c4a   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1016
001c4b   51a3     MOV	0xa3, R0             	MOV	r0x1016, R0
                                           	BANKSEL	STK02
001c4c   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x1013
001c4d   51a4     MOV	0xa4, R0             	MOV	r0x1013, R0
                                           	BANKSEL	r0x1013
001c4e   0ea4     MOVZ	R0, 0xa4            	MOVZ	R0, r0x1013
                                           	BANKSEL	STK06
001c4f   5178     MOV	0x78, R0             	MOV	STK06, R0
                                           	BANKSEL	r0x1016
001c50   0ea3     MOVZ	R0, 0xa3            	MOVZ	R0, r0x1016
                                           	BANKSEL	STK05
001c51   5179     MOV	0x79, R0             	MOV	STK05, R0
                                           	BANKSEL	r0x1015
001c52   0ea2     MOVZ	R0, 0xa2            	MOVZ	R0, r0x1015
                                           	BANKSEL	STK04
001c53   517a     MOV	0x7a, R0             	MOV	STK04, R0
                                           	BANKSEL	r0x1014
001c54   0ea1     MOVZ	R0, 0xa1            	MOVZ	R0, r0x1014
                                           	BANKSEL	STK03
001c55   517b     MOV	0x7b, R0             	MOV	STK03, R0
001c56   9829     MOV	R0, #0x29            	MOV	R0,# 0x29
                                           	BANKSEL	STK02
001c57   517c     MOV	0x7c, R0             	MOV	STK02, R0
001c58   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	STK01
001c59   517d     MOV	0x7d, R0             	MOV	STK01, R0
001c5a   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
                                           	BANKSEL	STK00
001c5b   517e     MOV	0x7e, R0             	MOV	STK00, R0
001c5c   9840     MOV	R0, #0x40            	MOV	R0,# 0x40
001c5d   e014     MOVP	#0x14               	PAGESEL	___fsmul
001c5e   d47e     CALL	#0x47e              	CALL	___fsmul
001c5f   e01c     MOVP	#0x1C               	PAGESEL	$
001c60   e100     MOVB	#0x00               	BANKSEL	r0x1014
001c61   51a1     MOV	0xa1, R0             	MOV	r0x1014, R0
                                           	BANKSEL	STK00
001c62   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1015
001c63   51a2     MOV	0xa2, R0             	MOV	r0x1015, R0
                                           	BANKSEL	STK01
001c64   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1016
001c65   51a3     MOV	0xa3, R0             	MOV	r0x1016, R0
                                           	BANKSEL	STK02
001c66   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x1013
001c67   51a4     MOV	0xa4, R0             	MOV	r0x1013, R0
                                           	BANKSEL	r0x1013
001c68   0ea4     MOVZ	R0, 0xa4            	MOVZ	R0, r0x1013
                                           	BANKSEL	STK02
001c69   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	r0x1016
001c6a   0ea3     MOVZ	R0, 0xa3            	MOVZ	R0, r0x1016
                                           	BANKSEL	STK01
001c6b   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	r0x1015
001c6c   0ea2     MOVZ	R0, 0xa2            	MOVZ	R0, r0x1015
                                           	BANKSEL	STK00
001c6d   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1014
001c6e   0ea1     MOVZ	R0, 0xa1            	MOVZ	R0, r0x1014
001c6f   e01e     MOVP	#0x1E               	PAGESEL	___fs2uchar
001c70   deeb     CALL	#0xeeb              	CALL	___fs2uchar
001c71   e01c     MOVP	#0x1C               	PAGESEL	$
001c72   e100     MOVB	#0x00               	BANKSEL	_PWM2L
001c73   5133     MOV	0x33, R0             	MOV	_PWM2L, R0
001c74   0008     CRET
                   	CRET	
                                           func._set_PWM1L	.code
                                           _set_PWM1L	;Function start
                                           ;	.line	158; "../Timer.c"	void set_PWM1L(uint8_t duty)
001c75   e100     MOVB	#0x00               	BANKSEL	r0x1017
001c76   51a8     MOV	0xa8, R0             	MOV	r0x1017, R0
                                           ;	.line	160; "../Timer.c"	PWM1L = 249 * duty * 0.01;
                                           	BANKSEL	r0x1017
001c77   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0, r0x1017
001c78   e01f     MOVP	#0x1F               	PAGESEL	___uchar2fs
001c79   df09     CALL	#0xf09              	CALL	___uchar2fs
001c7a   e01c     MOVP	#0x1C               	PAGESEL	$
001c7b   e100     MOVB	#0x00               	BANKSEL	r0x1018
001c7c   51a5     MOV	0xa5, R0             	MOV	r0x1018, R0
                                           	BANKSEL	STK00
001c7d   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1019
001c7e   51a6     MOV	0xa6, R0             	MOV	r0x1019, R0
                                           	BANKSEL	STK01
001c7f   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x101A
001c80   51a7     MOV	0xa7, R0             	MOV	r0x101A, R0
                                           	BANKSEL	STK02
001c81   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x1017
001c82   51a8     MOV	0xa8, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1017
001c83   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0, r0x1017
                                           	BANKSEL	STK06
001c84   5178     MOV	0x78, R0             	MOV	STK06, R0
                                           	BANKSEL	r0x101A
001c85   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0, r0x101A
                                           	BANKSEL	STK05
001c86   5179     MOV	0x79, R0             	MOV	STK05, R0
                                           	BANKSEL	r0x1019
001c87   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0, r0x1019
                                           	BANKSEL	STK04
001c88   517a     MOV	0x7a, R0             	MOV	STK04, R0
                                           	BANKSEL	r0x1018
001c89   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0, r0x1018
                                           	BANKSEL	STK03
001c8a   517b     MOV	0x7b, R0             	MOV	STK03, R0
001c8b   9829     MOV	R0, #0x29            	MOV	R0,# 0x29
                                           	BANKSEL	STK02
001c8c   517c     MOV	0x7c, R0             	MOV	STK02, R0
001c8d   985c     MOV	R0, #0x5c            	MOV	R0,# 0x5c
                                           	BANKSEL	STK01
001c8e   517d     MOV	0x7d, R0             	MOV	STK01, R0
001c8f   981f     MOV	R0, #0x1f            	MOV	R0,# 0x1f
                                           	BANKSEL	STK00
001c90   517e     MOV	0x7e, R0             	MOV	STK00, R0
001c91   9840     MOV	R0, #0x40            	MOV	R0,# 0x40
001c92   e014     MOVP	#0x14               	PAGESEL	___fsmul
001c93   d47e     CALL	#0x47e              	CALL	___fsmul
001c94   e01c     MOVP	#0x1C               	PAGESEL	$
001c95   e100     MOVB	#0x00               	BANKSEL	r0x1018
001c96   51a5     MOV	0xa5, R0             	MOV	r0x1018, R0
                                           	BANKSEL	STK00
001c97   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1019
001c98   51a6     MOV	0xa6, R0             	MOV	r0x1019, R0
                                           	BANKSEL	STK01
001c99   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x101A
001c9a   51a7     MOV	0xa7, R0             	MOV	r0x101A, R0
                                           	BANKSEL	STK02
001c9b   0e7c     MOVZ	R0, 0x7c            	MOVZ	R0, STK02
                                           	BANKSEL	r0x1017
001c9c   51a8     MOV	0xa8, R0             	MOV	r0x1017, R0
                                           	BANKSEL	r0x1017
001c9d   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0, r0x1017
                                           	BANKSEL	STK02
001c9e   517c     MOV	0x7c, R0             	MOV	STK02, R0
                                           	BANKSEL	r0x101A
001c9f   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0, r0x101A
                                           	BANKSEL	STK01
001ca0   517d     MOV	0x7d, R0             	MOV	STK01, R0
                                           	BANKSEL	r0x1019
001ca1   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0, r0x1019
                                           	BANKSEL	STK00
001ca2   517e     MOV	0x7e, R0             	MOV	STK00, R0
                                           	BANKSEL	r0x1018
001ca3   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0, r0x1018
001ca4   e01e     MOVP	#0x1E               	PAGESEL	___fs2uchar
001ca5   deeb     CALL	#0xeeb              	CALL	___fs2uchar
001ca6   e01c     MOVP	#0x1C               	PAGESEL	$
001ca7   e100     MOVB	#0x00               	BANKSEL	_PWM1L
001ca8   5113     MOV	0x13, R0             	MOV	_PWM1L, R0
001ca9   0008     CRET
                   	CRET	
                                           func._Timer1_Init	.code
                                           _Timer1_Init	;Function start
                                           ;	.line	92; "../Timer.c"	PWMS = 0; //PWM1 分配到P0.2 口，PWM2 分配到P1.0 口
001e61   e100     MOVB	#0x00               	BANKSEL	_T3CTL_bits
001e62   634e     CLR	0x4e, 3              	CLR	_T3CTL_bits, 3
                                           ;	.line	95; "../Timer.c"	PP2=249;		//50000
001e63   98f9     MOV	R0, #0xf9            	MOV	R0,# 0xf9
                                           	BANKSEL	_PP2
001e64   5132     MOV	0x32, R0             	MOV	_PP2, R0
                                           ;	.line	96; "../Timer.c"	PP1=249;
001e65   98f9     MOV	R0, #0xf9            	MOV	R0,# 0xf9
                                           	BANKSEL	_PP1
001e66   5116     MOV	0x16, R0             	MOV	_PP1, R0
                                           ;	.line	97; "../Timer.c"	PWM1L = 0;
                                           	BANKSEL	_PWM1L
001e67   0313     CLR	0x13                 	CLR	_PWM1L
                                           ;	.line	98; "../Timer.c"	PWM2L = 0;
                                           	BANKSEL	_PWM2L
001e68   0333     CLR	0x33                 	CLR	_PWM2L
                                           ;	.line	102; "../Timer.c"	T1CS = 0; //当前定时模式*计数模式
                                           	BANKSEL	_T1CTL_bits
001e69   6110     CLR	0x10, 1              	CLR	_T1CTL_bits, 1
                                           ;	.line	103; "../Timer.c"	T1OSCEN = 0; //计数模式 当T1OSCEN=0 时T1 时钟为T1CK
                                           	BANKSEL	_T1CTL_bits
001e6a   6310     CLR	0x10, 3              	CLR	_T1CTL_bits, 3
                                           ;	.line	104; "../Timer.c"	T1CLKEN = 0; //当T1CLKEN=1 时T1 时钟为内部高频振荡器时钟
                                           	BANKSEL	_INTEDGCTL_bits
001e6b   6067     CLR	0x67, 0              	CLR	_INTEDGCTL_bits, 0
                                           ;	.line	113; "../Timer.c"	T1CKS1 = 1;  //8分频
                                           	BANKSEL	_T1CTL_bits
001e6c   6d10     SET	0x10, 5              	SET	_T1CTL_bits, 5
                                           ;	.line	114; "../Timer.c"	T1CKS0 = 1;
                                           	BANKSEL	_T1CTL_bits
001e6d   6c10     SET	0x10, 4              	SET	_T1CTL_bits, 4
                                           ;	.line	115; "../Timer.c"	T1H=0;  //将T1L/H 清零
                                           	BANKSEL	_T1H
001e6e   030f     CLR	0xf                  	CLR	_T1H
                                           ;	.line	116; "../Timer.c"	T1L=0;
                                           	BANKSEL	_T1L
001e6f   030e     CLR	0xe                  	CLR	_T1L
                                           ;	.line	121; "../Timer.c"	T1ON = 1;  //启动T1
                                           	BANKSEL	_T1CTL_bits
001e70   6810     SET	0x10, 0              	SET	_T1CTL_bits, 0
                                           ;	.line	123; "../Timer.c"	PWM1ON = 1;
                                           	BANKSEL	_PWMCTL_bits
001e71   6815     SET	0x15, 0              	SET	_PWMCTL_bits, 0
                                           ;	.line	124; "../Timer.c"	PWM2ON = 1;
                                           	BANKSEL	_PWMCTL_bits
001e72   6c15     SET	0x15, 4              	SET	_PWMCTL_bits, 4
                                           ;	.line	126; "../Timer.c"	TR02 = 0; //将TR00 或TR01 清零使能引脚PWM1 /PWM2 的输出驱动
                                           	BANKSEL	_TR0_bits
001e73   6225     CLR	0x25, 2              	CLR	_TR0_bits, 2
                                           ;	.line	127; "../Timer.c"	TR10 = 0;
                                           	BANKSEL	_TR1_bits
001e74   6027     CLR	0x27, 0              	CLR	_TR1_bits, 0
001e75   0008     CRET
                   	CRET	
                                           func._Timer0_Init	.code
                                           _Timer0_Init	;Function start
                                           ;	.line	35; "../Timer.c"	WDTPS = 0x07;
001ec2   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
001ec3   e101     MOVB	#0x01               	BANKSEL	_WDTPS
001ec4   512f     MOV	0x2f, R0             	MOV	_WDTPS, R0
001ec5   0064     CWDT                     	CWDT 
                                           ;	.line	60; "../Timer.c"	OPTR = 0xC4;	// INT0/P0.2 为上升沿触发
001ec6   98c4     MOV	R0, #0xc4            	MOV	R0,# 0xc4
001ec7   e100     MOVB	#0x00               	BANKSEL	_OPTR
001ec8   5121     MOV	0x21, R0             	MOV	_OPTR, R0
001ec9   0064     CWDT                     	CWDT 
                                           ;	.line	62; "../Timer.c"	T0 = 1;  //8 位计数器
001eca   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_T0
001ecb   5101     MOV	0x1, R0              	MOV	_T0, R0
                                           ;	.line	63; "../Timer.c"	T0IE = 1;  //暂不使能//使能T0中断
                                           	BANKSEL	_INTCTL_bits
001ecc   6d0b     SET	0xb, 5               	SET	_INTCTL_bits, 5
                                           ;	.line	64; "../Timer.c"	T0IF = 0;  //清除标记位
                                           	BANKSEL	_INTCTL_bits
001ecd   620b     CLR	0xb, 2               	CLR	_INTCTL_bits, 2
                                           ;	.line	65; "../Timer.c"	PT0 = 1;   //高优先级
                                           	BANKSEL	_IP0_bits
001ece   6a22     SET	0x22, 2              	SET	_IP0_bits, 2
001ecf   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           	__config 0x5fc
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           func._USART_Send_num	.code
                                           _USART_Send_num	;Function start
                                           ;	.line	201; "../init_mcu.c"	void USART_Send_num(uint32_t num)
                                           	BANKSEL	r0x100A
                                           	MOV	r0x100A, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x100B
                                           	MOV	r0x100B, R0
                                           ;	.line	205; "../init_mcu.c"	uint8_t count = 0;
                                           	BANKSEL	r0x100C
                                           	CLR	r0x100C
                                           ;	.line	206; "../init_mcu.c"	if (num > 0)
                                           	BANKSEL	r0x100B
                                           	MOVZ	R0, r0x100B
                                           	BANKSEL	r0x100A
                                           	ORL	R0, r0x100A
                                           	JNB	PSW, 2
                                           	JMP	_00047_DS_
                                           ;	.line	208; "../init_mcu.c"	while(num > 0){
                                           	BANKSEL	r0x100D
                                           	CLR	r0x100D
                                           _00043_DS_
                                           	BANKSEL	r0x100B
                                           	MOVZ	R0, r0x100B
                                           	BANKSEL	r0x100A
                                           	ORL	R0, r0x100A
                                           	JNB	PSW, 2
                                           	JMP	_00065_DS_
                                           ;	.line	209; "../init_mcu.c"	temp = num % 10;
                                           	MOV	R0,# 0x0a
                                           	BANKSEL	STK02
                                           	MOV	STK02, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x100B
                                           	MOVZ	R0, r0x100B
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x100A
                                           	MOVZ	R0, r0x100A
                                           	PAGESEL	__moduint
                                           	CALL	__moduint
                                           	PAGESEL	$
                                           	BANKSEL	r0x100E
                                           	MOV	r0x100E, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x100F
                                           	MOV	r0x100F, R0
                                           	BANKSEL	r0x100F
                                           	MOVZ	R0, r0x100F
                                           	BANKSEL	r0x1010
                                           	MOV	r0x1010, R0
                                           ;	.line	210; "../init_mcu.c"	s[count] = temp + 48;  //'0' ASCALL 48
                                           	BANKSEL	r0x100D
                                           	MOV	R0, r0x100D
                                           	ADD	R0,# (_USART_Send_num_s_1_1 + 0)
                                           	BANKSEL	r0x100F
                                           	MOV	r0x100F, R0
                                           	MOV	R0,# 0x30
                                           	BANKSEL	r0x1010
                                           	ADD	R0, r0x1010
                                           	BANKSEL	r0x1011
                                           	MOV	r0x1011, R0
                                           	BANKSEL	r0x1011
                                           	MOVZ	R0, r0x1011
                                           	BANKSEL	r0x100F
                                           	MOV	R1, r0x100F
                                           	BANKSEL	_USART_Send_num_s_1_1
                                           	ST	[R1], R0
                                           ;	.line	211; "../init_mcu.c"	num = num / 10;
                                           	MOV	R0,# 0x0a
                                           	BANKSEL	STK02
                                           	MOV	STK02, R0
                                           	MOV	R0,# 0x00
                                           	BANKSEL	STK01
                                           	MOV	STK01, R0
                                           	BANKSEL	r0x100B
                                           	MOVZ	R0, r0x100B
                                           	BANKSEL	STK00
                                           	MOV	STK00, R0
                                           	BANKSEL	r0x100A
                                           	MOVZ	R0, r0x100A
                                           	PAGESEL	__divuint
                                           	CALL	__divuint
                                           	PAGESEL	$
                                           	BANKSEL	r0x100A
                                           	MOV	r0x100A, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x100B
                                           	MOV	r0x100B, R0
                                           ;	.line	212; "../init_mcu.c"	count++;
                                           	BANKSEL	r0x100D
                                           	INC	r0x100D
                                           	BANKSEL	r0x100D
                                           	MOVZ	R0, r0x100D
                                           	BANKSEL	r0x100C
                                           	MOV	r0x100C, R0
                                           	JMP	_00043_DS_
                                           _00065_DS_
                                           	BANKSEL	r0x100D
                                           	MOVZ	R0, r0x100D
                                           	BANKSEL	r0x100C
                                           	MOV	r0x100C, R0
                                           ;	.line	215; "../init_mcu.c"	for(i = 0; i <= count/2 - 1; i++)
                                           	CLR	PSW, 0
                                           	BANKSEL	r0x100D
                                           	RRCR	r0x100D
                                           	BANKSEL	r0x100B
                                           	MOV	r0x100B, R0
                                           	BANKSEL	r0x100A
                                           	CLR	r0x100A
                                           _00049_DS_
                                           	BANKSEL	r0x100B
                                           	MOVZ	R0, r0x100B
                                           	BANKSEL	r0x100D
                                           	MOV	r0x100D, R0
                                           	BANKSEL	r0x100F
                                           	CLR	r0x100F
                                           	MOV	R0,# 0xff
                                           	BANKSEL	r0x100D
                                           	ADD	r0x100D, R0
                                           	JNB	PSW, 0
                                           	JMP	_00070_DS_
                                           	BANKSEL	r0x100F
                                           	DEC	r0x100F
                                           _00070_DS_
                                           	BANKSEL	r0x100A
                                           	MOVZ	R0, r0x100A
                                           	BANKSEL	r0x100E
                                           	MOV	r0x100E, R0
                                           	BANKSEL	r0x1011
                                           	CLR	r0x1011
                                           	BANKSEL	r0x100F
                                           	MOVZ	R0, r0x100F
                                           	ADD	R0,# 0x80
                                           	BANKSEL	r0x1012
                                           	MOV	r0x1012, R0
                                           	MOV	R0,# 0x00
                                           	ADD	R0,# 0x80
                                           	BANKSEL	r0x1012
                                           	SUB	R0, r0x1012
                                           	JB	PSW, 2
                                           	JMP	_00068_DS_
                                           	BANKSEL	r0x100E
                                           	MOVZ	R0, r0x100E
                                           	BANKSEL	r0x100D
                                           	SUB	R0, r0x100D
                                           _00068_DS_
                                           	JB	PSW, 0
                                           	JMP	_00052_DS_
                                           ;	.line	217; "../init_mcu.c"	temp = s[i];
                                           	BANKSEL	r0x100A
                                           	MOV	R0, r0x100A
                                           	ADD	R0,# (_USART_Send_num_s_1_1 + 0)
                                           	BANKSEL	r0x100D
                                           	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
                                           	MOV	R1, r0x100D
                                           	BANKSEL	_USART_Send_num_s_1_1
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x1010
                                           	MOV	r0x1010, R0
                                           ;	.line	218; "../init_mcu.c"	s[i] = s[count-i-1];
                                           	BANKSEL	r0x100A
                                           	MOV	R0, r0x100A
                                           	ADD	R0,# (_USART_Send_num_s_1_1 + 0)
                                           	BANKSEL	r0x100D
                                           	MOV	r0x100D, R0
                                           	BANKSEL	r0x100A
                                           	MOVZ	R0, r0x100A
                                           	BANKSEL	r0x100C
                                           	SUB	R0, r0x100C
                                           	BANKSEL	r0x100E
                                           	MOV	r0x100E, R0
                                           	BANKSEL	r0x100E
                                           	DEC	r0x100E
                                           	MOV	R0,# (_USART_Send_num_s_1_1 + 0)
                                           	BANKSEL	r0x100E
                                           	ADD	r0x100E, R0
                                           	BANKSEL	r0x100E
                                           	MOV	R1, r0x100E
                                           	BANKSEL	_USART_Send_num_s_1_1
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x1013
                                           	MOV	r0x1013, R0
                                           	BANKSEL	r0x1013
                                           	MOVZ	R0, r0x1013
                                           	BANKSEL	r0x100D
                                           	MOV	R1, r0x100D
                                           	BANKSEL	_USART_Send_num_s_1_1
                                           	ST	[R1], R0
                                           ;	.line	219; "../init_mcu.c"	s[count-i-1] = temp;
                                           	BANKSEL	r0x100A
                                           	MOVZ	R0, r0x100A
                                           	BANKSEL	r0x100C
                                           	SUB	R0, r0x100C
                                           	BANKSEL	r0x100D
                                           	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
                                           	DEC	r0x100D
                                           	MOV	R0,# (_USART_Send_num_s_1_1 + 0)
                                           	BANKSEL	r0x100D
                                           	ADD	r0x100D, R0
                                           	BANKSEL	r0x1010
                                           	MOVZ	R0, r0x1010
                                           	BANKSEL	r0x100D
                                           	MOV	R1, r0x100D
                                           	BANKSEL	_USART_Send_num_s_1_1
                                           	ST	[R1], R0
                                           ;	.line	215; "../init_mcu.c"	for(i = 0; i <= count/2 - 1; i++)
                                           	BANKSEL	r0x100A
                                           	INC	r0x100A
                                           	JMP	_00049_DS_
                                           _00052_DS_
                                           ;	.line	222; "../init_mcu.c"	for(i = 0; i < count; i++)
                                           	BANKSEL	r0x100B
                                           	CLR	r0x100B
                                           _00053_DS_
                                           	BANKSEL	r0x100C
                                           	MOVZ	R0, r0x100C
                                           	BANKSEL	r0x100B
                                           	SUB	R0, r0x100B
                                           	JNB	PSW, 0
                                           	JMP	_00056_DS_
                                           ;	.line	223; "../init_mcu.c"	UART_SendBuf(s[i]);
                                           	BANKSEL	r0x100B
                                           	MOV	R0, r0x100B
                                           	ADD	R0,# (_USART_Send_num_s_1_1 + 0)
                                           	BANKSEL	r0x100A
                                           	MOV	r0x100A, R0
                                           	BANKSEL	r0x100A
                                           	MOV	R1, r0x100A
                                           	BANKSEL	_USART_Send_num_s_1_1
                                           	LD	R0, [R1]
                                           	BANKSEL	r0x100F
                                           	MOV	r0x100F, R0
                                           	BANKSEL	r0x100F
                                           	MOVZ	R0, r0x100F
                                           	PAGESEL	_UART_SendBuf
                                           	CALL	_UART_SendBuf
                                           	PAGESEL	$
                                           ;	.line	222; "../init_mcu.c"	for(i = 0; i < count; i++)
                                           	BANKSEL	r0x100B
                                           	INC	r0x100B
                                           	JMP	_00053_DS_
                                           _00056_DS_
                                           ;	.line	224; "../init_mcu.c"	UART_SendBuf('\n');
                                           	MOV	R0,# 0x0a
                                           	PAGESEL	_UART_SendBuf
                                           	CALL	_UART_SendBuf
                                           	PAGESEL	$
                                           	JMP	_00057_DS_
                                           _00047_DS_
                                           ;	.line	230; "../init_mcu.c"	UART_SendBuf('0');
                                           	MOV	R0,# 0x30
                                           	PAGESEL	_UART_SendBuf
                                           	CALL	_UART_SendBuf
                                           	PAGESEL	$
                                           ;	.line	231; "../init_mcu.c"	UART_SendBuf('\n');
                                           	MOV	R0,# 0x0a
                                           	PAGESEL	_UART_SendBuf
                                           	CALL	_UART_SendBuf
                                           	PAGESEL	$
                                           _00057_DS_
                                           	CRET	
                                           func._UART_SendBuf	.code
                                           _UART_SendBuf	;Function start
                                           ;	.line	195; "../init_mcu.c"	void UART_SendBuf(unsigned char SendTemp)
                                           	BANKSEL	_TXSDR
                                           	MOV	_TXSDR, R0
                                           _00037_DS_
                                           ;	.line	198; "../init_mcu.c"	while(TXSRS == 0);
                                           	BANKSEL	_TSCTL_bits
                                           	JB	_TSCTL_bits, 1
                                           	JMP	_00037_DS_
                                           	CRET	
                                           func._Init_Usart	.code
                                           _Init_Usart	;Function start
                                           ;	.line	176; "../init_mcu.c"	BRCTL = 0x40;	// 	接收空闲  使用8位计数器，不考虑唤醒是使能和自动波特率检测
                                           	MOV	R0,# 0x40
                                           	BANKSEL	_BRCTL
                                           	MOV	_BRCTL, R0
                                           ;	.line	182; "../init_mcu.c"	EUBRGH = 0x00;	// 波特率公式=SCLK/(m*y+1),其中SCLK系统时钟，如这里8M，m为倍频数，见手册，y为8位或16位波特率计数值
                                           	BANKSEL	_EUBRGH
                                           	CLR	_EUBRGH
                                           ;	.line	184; "../init_mcu.c"	EUBRGL = 0x08; 	// SYNC=0(全双工异步模式),BRG16=0(使用8位波特率发生器),HBRG=1(高速)
                                           	MOV	R0,# 0x08
                                           	BANKSEL	_EUBRGL
                                           	MOV	_EUBRGL, R0
                                           ;	.line	185; "../init_mcu.c"	TSCTL = 0x26;  	// 8位 发送，使能发送，全双工异步模式SYNC=0，低速模式HBRG=1，发送移位空,不发送同步间隔符
                                           	MOV	R0,# 0x26
                                           	BANKSEL	_TSCTL
                                           	MOV	_TSCTL, R0
                                           ;	.line	186; "../init_mcu.c"	RSCTL = 0x90;  	// 串口使能（配置引脚为串行口引脚），8位接收，接收使能，无帧错误，溢出错误，不考虑地址识别和第9位
                                           	MOV	R0,# 0x90
                                           	BANKSEL	_RSCTL
                                           	MOV	_RSCTL, R0
                                           	CRET	
                                           func._Init_I2C_S	.code
                                           _Init_I2C_S	;Function start
                                           ;	.line	151; "../init_mcu.c"	SSCIPIN = 0;			//SDA = P00, SCL =P01
                                           	BANKSEL	_ANSEH_bits
                                           	CLR	_ANSEH_bits, 7
                                           ;	.line	152; "../init_mcu.c"	TR00 = 1;				//P00 SDA,设置为输入态
                                           	BANKSEL	_TR0_bits
                                           	SET	_TR0_bits, 0
                                           ;	.line	153; "../init_mcu.c"	TR01 = 1;				//P01 SCL,设置为输入态
                                           	BANKSEL	_TR0_bits
                                           	SET	_TR0_bits, 1
                                           ;	.line	156; "../init_mcu.c"	SSCICTL0 = 0x36;		//使能IIC端口，使能时钟，IIC从动模式，7位地址
                                           	MOV	R0,# 0x36
                                           	BANKSEL	_SSCICTL0
                                           	MOV	_SSCICTL0, R0
                                           ;	.line	157; "../init_mcu.c"	SSCICTL1 = 0x00;		//禁止广播呼叫地址匹配中断
                                           	BANKSEL	_SSCICTL1
                                           	CLR	_SSCICTL1
                                           ;	.line	158; "../init_mcu.c"	SSCIADD = I2C_SLAVE_ADDR;//芯片地址设定
                                           	MOV	R0,# 0x10
                                           	BANKSEL	_SSCIADD
                                           	MOV	_SSCIADD, R0
                                           ;	.line	159; "../init_mcu.c"	SSCISTA = 0x00;
                                           	BANKSEL	_SSCISTA
                                           	CLR	_SSCISTA
                                           ;	.line	160; "../init_mcu.c"	SSCIIF  =0;
                                           	BANKSEL	_EIF2_bits
                                           	CLR	_EIF2_bits, 0
                                           ;	.line	161; "../init_mcu.c"	PSSCI = 0;	            // 低优先级
                                           	BANKSEL	_IP2_bits
                                           	CLR	_IP2_bits, 0
                                           ;	.line	162; "../init_mcu.c"	SSCIIF = 0;	            // 清除标志位
                                           	BANKSEL	_EIF2_bits
                                           	CLR	_EIF2_bits, 0
                                           ;	.line	163; "../init_mcu.c"	SSCIIE = 1;             // 使能I2C中断
                                           	BANKSEL	_EIE2_bits
                                           	SET	_EIE2_bits, 0
                                           	CRET	
                                           func._Init_MCU	.code
                                           _Init_MCU	;Function start
                                           ;	.line	116; "../init_mcu.c"	OSCCTL = 0x70;
001e76   9870     MOV	R0, #0x70            	MOV	R0,# 0x70
001e77   e100     MOVB	#0x00               	BANKSEL	_OSCCTL
001e78   512f     MOV	0x2f, R0             	MOV	_OSCCTL, R0
                                           ;	.line	118; "../init_mcu.c"	Init_Touch_GPIO();  //IO口初始化  P0中断使能
001e79   e01f     MOVP	#0x1F               	PAGESEL	_Init_Touch_GPIO
001e7a   df00     CALL	#0xf00              	CALL	_Init_Touch_GPIO
001e7b   e01e     MOVP	#0x1E               	PAGESEL	$
                                           ;	.line	123; "../init_mcu.c"	IPEN = 1;  //使能中断优先级功能
001e7c   e100     MOVB	#0x00               	BANKSEL	_PCTL_bits
001e7d   6b2e     SET	0x2e, 3              	SET	_PCTL_bits, 3
                                           ;	.line	131; "../init_mcu.c"	Init_Touch();
001e7e   e01e     MOVP	#0x1E               	PAGESEL	_Init_Touch
001e7f   dede     CALL	#0xede              	CALL	_Init_Touch
001e80   e01e     MOVP	#0x1E               	PAGESEL	$
                                           ;	.line	133; "../init_mcu.c"	AIEH = 1; //使能高优先级中断--触摸中断--对应Interrupt 0
001e81   e100     MOVB	#0x00               	BANKSEL	_INTCTL_bits
001e82   6f0b     SET	0xb, 7               	SET	_INTCTL_bits, 7
                                           ;	.line	134; "../init_mcu.c"	AIEL = 1; //使能低优先级中断--I2C中断 --对应Interrupt  1
                                           	BANKSEL	_INTCTL_bits
001e83   6e0b     SET	0xb, 6               	SET	_INTCTL_bits, 6
                                           ;	.line	138; "../init_mcu.c"	delay_ms(10);
001e84   980a     MOV	R0, #0xa             	MOV	R0,# 0x0a
                                           	BANKSEL	STK00
001e85   517e     MOV	0x7e, R0             	MOV	STK00, R0
001e86   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001e87   e01d     MOVP	#0x1D               	PAGESEL	_delay_ms
001e88   dd69     CALL	#0xd69              	CALL	_delay_ms
001e89   e01e     MOVP	#0x1E               	PAGESEL	$
001e8a   0008     CRET
                   	CRET	
                                           func._Init_Touch_GPIO	.code
                                           _Init_Touch_GPIO	;Function start
                                           ;	.line	96; "../init_mcu.c"	TR0 = 0b00110100;
001f00   9834     MOV	R0, #0x34            	MOV	R0,# 0x34
001f01   e100     MOVB	#0x00               	BANKSEL	_TR0
001f02   5125     MOV	0x25, R0             	MOV	_TR0, R0
                                           ;	.line	97; "../init_mcu.c"	TR1 = 0b01100111;
001f03   9867     MOV	R0, #0x67            	MOV	R0,# 0x67
                                           	BANKSEL	_TR1
001f04   5127     MOV	0x27, R0             	MOV	_TR1, R0
                                           ;	.line	98; "../init_mcu.c"	TR2 = 0b00000000;
                                           	BANKSEL	_TR2
001f05   0326     CLR	0x26                 	CLR	_TR2
                                           ;	.line	100; "../init_mcu.c"	TR04 = 1;  //P04（Cx电容引脚）
                                           	BANKSEL	_TR0_bits
001f06   6c25     SET	0x25, 4              	SET	_TR0_bits, 4
                                           ;	.line	103; "../init_mcu.c"	IOCL5 = 1; //IOCL5 P05口 使能引脚变化中断
                                           	BANKSEL	_IOCL_bits
001f07   6d36     SET	0x36, 5              	SET	_IOCL_bits, 5
001f08   0008     CRET
                   	CRET	
                                           func._Init_Touch	.code
                                           _Init_Touch	;Function start
                                           ;	.line	65; "../init_mcu.c"	CTCTL1 	= 0x01;
001ede   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
001edf   e100     MOVB	#0x00               	BANKSEL	_CTCTL1
001ee0   5164     MOV	0x64, R0             	MOV	_CTCTL1, R0
                                           ;	.line	66; "../init_mcu.c"	VRECTL	=0x92;
001ee1   9892     MOV	R0, #0x92            	MOV	R0,# 0x92
                                           	BANKSEL	_VRECTL
001ee2   512b     MOV	0x2b, R0             	MOV	_VRECTL, R0
                                           	;;VDACS=0x40;
                                           	MOVB #0x00
001ee3   9840     MOV	R0, #0x40            	MOV R0,#0x40
001ee4   311a     ORL	0x1a, R0             	ORL 0x1A,R0
                                           	
                                           ;	.line	73; "../init_mcu.c"	VDAC=0xC0;
001ee5   98c0     MOV	R0, #0xc0            	MOV	R0,# 0xc0
001ee6   e101     MOVB	#0x01               	BANKSEL	_VDAC
001ee7   5112     MOV	0x12, R0             	MOV	_VDAC, R0
                                           ;	.line	75; "../init_mcu.c"	PT3 = 1;   //T3的触摸中断优先级为高
001ee8   e100     MOVB	#0x00               	BANKSEL	_IP2_bits
001ee9   6f24     SET	0x24, 7              	SET	_IP2_bits, 7
001eea   0008     CRET
                   	CRET	
                                           func._delay_us	.code
                                           _delay_us	;Function start
                                           ;	.line	37; "../init_mcu.c"	void delay_us(unsigned int us_data)
                                           	BANKSEL	r0x101A
                                           	MOV	r0x101A, R0
                                           	BANKSEL	STK00
                                           	MOVZ	R0, STK00
                                           	BANKSEL	r0x101B
                                           	MOV	r0x101B, R0
                                           _00017_DS_
                                           ;	.line	40; "../init_mcu.c"	while(us_data--)
                                           	BANKSEL	r0x101B
                                           	MOVZ	R0, r0x101B
                                           	BANKSEL	r0x101C
                                           	MOV	r0x101C, R0
                                           	BANKSEL	r0x101A
                                           	MOVZ	R0, r0x101A
                                           	BANKSEL	r0x101D
                                           	MOV	r0x101D, R0
                                           	MOV	R0,# 0xff
                                           	BANKSEL	r0x101B
                                           	ADD	r0x101B, R0
                                           	JNB	PSW, 0
                                           	JMP	_00071_DS_
                                           	BANKSEL	r0x101A
                                           	DEC	r0x101A
                                           _00071_DS_
                                           	BANKSEL	r0x101C
                                           	MOVZ	R0, r0x101C
                                           	BANKSEL	r0x101D
                                           	ORL	R0, r0x101D
                                           	JNB	PSW, 2
                                           	JMP	_00020_DS_
                                           	CWDT 
                                           ;	.line	44; "../init_mcu.c"	while(j--)
                                           	MOV	R0,# 0x01
                                           	BANKSEL	r0x101C
                                           	MOV	r0x101C, R0
                                           	BANKSEL	r0x101D
                                           	CLR	r0x101D
                                           _00014_DS_
                                           	BANKSEL	r0x101C
                                           	MOVZ	R0, r0x101C
                                           	BANKSEL	r0x101E
                                           	MOV	r0x101E, R0
                                           	BANKSEL	r0x101D
                                           	MOVZ	R0, r0x101D
                                           	BANKSEL	r0x101F
                                           	MOV	r0x101F, R0
                                           	MOV	R0,# 0xff
                                           	BANKSEL	r0x101C
                                           	ADD	r0x101C, R0
                                           	JNB	PSW, 0
                                           	JMP	_00072_DS_
                                           	BANKSEL	r0x101D
                                           	DEC	r0x101D
                                           _00072_DS_
                                           	BANKSEL	r0x101E
                                           	MOVZ	R0, r0x101E
                                           	BANKSEL	r0x101F
                                           	ORL	R0, r0x101F
                                           	JNB	PSW, 2
                                           	JMP	_00017_DS_
                                           	CWDT 
                                           	JMP	_00014_DS_
                                           _00020_DS_
                                           	CRET	
                                           func._delay_ms	.code
                                           _delay_ms	;Function start
                                           ;	.line	16; "../init_mcu.c"	void delay_ms(unsigned int ms_data)
001d69   e100     MOVB	#0x00               	BANKSEL	r0x1014
001d6a   5199     MOV	0x99, R0             	MOV	r0x1014, R0
                                           	BANKSEL	STK00
001d6b   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1015
001d6c   519a     MOV	0x9a, R0             	MOV	r0x1015, R0
                                           _00004_DS_
                                           ;	.line	19; "../init_mcu.c"	while(ms_data--)
                                           	BANKSEL	r0x1015
001d6d   0e9a     MOVZ	R0, 0x9a            	MOVZ	R0, r0x1015
                                           	BANKSEL	r0x1016
001d6e   5198     MOV	0x98, R0             	MOV	r0x1016, R0
                                           	BANKSEL	r0x1014
001d6f   0e99     MOVZ	R0, 0x99            	MOVZ	R0, r0x1014
                                           	BANKSEL	r0x1017
001d70   5197     MOV	0x97, R0             	MOV	r0x1017, R0
001d71   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1015
001d72   219a     ADD	0x9a, R0             	ADD	r0x1015, R0
001d73   7003     JNB	0x3, 0               	JNB	PSW, 0
001d74   cd76     JMP	#0xd76               	JMP	_00073_DS_
                                           	BANKSEL	r0x1014
001d75   0799     DEC	0x99                 	DEC	r0x1014
                                           _00073_DS_
                                           	BANKSEL	r0x1016
001d76   0e98     MOVZ	R0, 0x98            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1017
001d77   3097     ORL	R0, 0x97             	ORL	R0, r0x1017
001d78   7203     JNB	0x3, 2               	JNB	PSW, 2
001d79   cd8d     JMP	#0xd8d               	JMP	_00007_DS_
001d7a   0064     CWDT                     	CWDT 
                                           ;	.line	23; "../init_mcu.c"	while(j--)
001d7b   98c8     MOV	R0, #0xc8            	MOV	R0,# 0xc8
                                           	BANKSEL	r0x1016
001d7c   5198     MOV	0x98, R0             	MOV	r0x1016, R0
                                           	BANKSEL	r0x1017
001d7d   0397     CLR	0x97                 	CLR	r0x1017
                                           _00001_DS_
                                           	BANKSEL	r0x1016
001d7e   0e98     MOVZ	R0, 0x98            	MOVZ	R0, r0x1016
                                           	BANKSEL	r0x1018
001d7f   5196     MOV	0x96, R0             	MOV	r0x1018, R0
                                           	BANKSEL	r0x1017
001d80   0e97     MOVZ	R0, 0x97            	MOVZ	R0, r0x1017
                                           	BANKSEL	r0x1019
001d81   5195     MOV	0x95, R0             	MOV	r0x1019, R0
001d82   98ff     MOV	R0, #0xff            	MOV	R0,# 0xff
                                           	BANKSEL	r0x1016
001d83   2198     ADD	0x98, R0             	ADD	r0x1016, R0
001d84   7003     JNB	0x3, 0               	JNB	PSW, 0
001d85   cd87     JMP	#0xd87               	JMP	_00074_DS_
                                           	BANKSEL	r0x1017
001d86   0797     DEC	0x97                 	DEC	r0x1017
                                           _00074_DS_
                                           	BANKSEL	r0x1018
001d87   0e96     MOVZ	R0, 0x96            	MOVZ	R0, r0x1018
                                           	BANKSEL	r0x1019
001d88   3095     ORL	R0, 0x95             	ORL	R0, r0x1019
001d89   7203     JNB	0x3, 2               	JNB	PSW, 2
001d8a   cd6d     JMP	#0xd6d               	JMP	_00004_DS_
001d8b   0064     CWDT                     	CWDT 
001d8c   cd7e     JMP	#0xd7e               	JMP	_00001_DS_
                                           _00007_DS_
001d8d   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           ID_key_0	.idata
                                           _key_status
                                           	.db	0x00
                                           ID_key_1	.idata
                                           _key_status2
                                           	.db	0x00
                                           ID_key_2	.idata
                                           _Key_Code
                                           	.db	0x00, 0x00
                                           ID_key_3	.idata
                                           _Key_Error_Code
                                           	.db	0x00
                                           func._key_deal	.code
                                           _key_deal	;Function start
                                           ;	.line	102; "../key.c"	key_read();
000f90   e019     MOVP	#0x19               	PAGESEL	_key_read
000f91   d97b     CALL	#0x97b              	CALL	_key_read
000f92   e00f     MOVP	#0x0F               	PAGESEL	$
                                           ;	.line	104; "../key.c"	if((Door_StatusGet() != PWM_40) && (Door_StatusGet() >= PWM_20))
000f93   e01f     MOVP	#0x1F               	PAGESEL	_Door_StatusGet
000f94   df51     CALL	#0xf51              	CALL	_Door_StatusGet
000f95   e00f     MOVP	#0x0F               	PAGESEL	$
000f96   e100     MOVB	#0x00               	BANKSEL	r0x100D
000f97   518f     MOV	0x8f, R0             	MOV	r0x100D, R0
                                           	BANKSEL	r0x100D
000f98   0e8f     MOVZ	R0, 0x8f            	MOVZ	R0, r0x100D
000f99   a806     XOR	R0, #0x6             	XOR	R0,# 0x06
000f9a   7203     JNB	0x3, 2               	JNB	PSW, 2
000f9b   cffe     JMP	#0xffe               	JMP	_00056_DS_
000f9c   e01f     MOVP	#0x1F               	PAGESEL	_Door_StatusGet
000f9d   df51     CALL	#0xf51              	CALL	_Door_StatusGet
000f9e   e00f     MOVP	#0x0F               	PAGESEL	$
000f9f   e100     MOVB	#0x00               	BANKSEL	r0x100D
000fa0   518f     MOV	0x8f, R0             	MOV	r0x100D, R0
000fa1   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x100D
000fa2   388f     SUB	R0, 0x8f             	SUB	R0, r0x100D
000fa3   7803     JB	0x3, 0                	JB	PSW, 0
000fa4   cffe     JMP	#0xffe               	JMP	_00056_DS_
                                           ;	.line	107; "../key.c"	if (key_state == UnPressed2Pressed)
                                           	BANKSEL	_key_state
000fa5   0e94     MOVZ	R0, 0x94            	MOVZ	R0, _key_state
000fa6   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000fa7   7a03     JB	0x3, 2                	JB	PSW, 2
000fa8   cfd1     JMP	#0xfd1               	JMP	_00047_DS_
                                           ;	.line	109; "../key.c"	if(key_status == Key_Off)
000fa9   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	_key_status
000faa   308e     ORL	R0, 0x8e             	ORL	R0, _key_status
000fab   7a03     JB	0x3, 2                	JB	PSW, 2
000fac   cfc0     JMP	#0xfc0               	JMP	_00044_DS_
                                           ;	.line	111; "../key.c"	key_status = Key_On;
000fad   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_key_status
000fae   518e     MOV	0x8e, R0             	MOV	_key_status, R0
                                           ;	.line	112; "../key.c"	set_led(1,LeftReadLightSW,Ind_On);
000faf   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000fb0   517d     MOV	0x7d, R0             	MOV	STK01, R0
000fb1   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
000fb2   517e     MOV	0x7e, R0             	MOV	STK00, R0
000fb3   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000fb4   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000fb5   de11     CALL	#0xe11              	CALL	_set_led
000fb6   e00f     MOVP	#0x0F               	PAGESEL	$
                                           ;	.line	113; "../key.c"	Flash_data_set(1,LeftReadLightSW,Ind_On);
000fb7   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000fb8   517d     MOV	0x7d, R0             	MOV	STK01, R0
000fb9   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
000fba   517e     MOV	0x7e, R0             	MOV	STK00, R0
000fbb   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000fbc   e017     MOVP	#0x17               	PAGESEL	_Flash_data_set
000fbd   d7ff     CALL	#0x7ff              	CALL	_Flash_data_set
000fbe   e00f     MOVP	#0x0F               	PAGESEL	$
000fbf   cfd1     JMP	#0xfd1               	JMP	_00047_DS_
                                           _00044_DS_
                                           ;	.line	117; "../key.c"	key_status = Key_Off;
                                           	BANKSEL	_key_status
000fc0   038e     CLR	0x8e                 	CLR	_key_status
                                           ;	.line	118; "../key.c"	set_led(1,LeftReadLightSW,Ind_Off);
000fc1   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000fc2   517d     MOV	0x7d, R0             	MOV	STK01, R0
000fc3   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
000fc4   517e     MOV	0x7e, R0             	MOV	STK00, R0
000fc5   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000fc6   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000fc7   de11     CALL	#0xe11              	CALL	_set_led
000fc8   e00f     MOVP	#0x0F               	PAGESEL	$
                                           ;	.line	119; "../key.c"	Flash_data_set(1,LeftReadLightSW,Ind_Off);
000fc9   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000fca   517d     MOV	0x7d, R0             	MOV	STK01, R0
000fcb   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK00
000fcc   517e     MOV	0x7e, R0             	MOV	STK00, R0
000fcd   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000fce   e017     MOVP	#0x17               	PAGESEL	_Flash_data_set
000fcf   d7ff     CALL	#0x7ff              	CALL	_Flash_data_set
000fd0   e00f     MOVP	#0x0F               	PAGESEL	$
                                           _00047_DS_
                                           ;	.line	124; "../key.c"	if (key_state2 == UnPressed2Pressed)
000fd1   e100     MOVB	#0x00               	BANKSEL	_key_state2
000fd2   0e93     MOVZ	R0, 0x93            	MOVZ	R0, _key_state2
000fd3   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000fd4   7a03     JB	0x3, 2                	JB	PSW, 2
000fd5   cffe     JMP	#0xffe               	JMP	_00056_DS_
                                           ;	.line	126; "../key.c"	if(key_status2 == Key_Off)
000fd6   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	_key_status2
000fd7   308d     ORL	R0, 0x8d             	ORL	R0, _key_status2
000fd8   7a03     JB	0x3, 2                	JB	PSW, 2
000fd9   cfed     JMP	#0xfed               	JMP	_00049_DS_
                                           ;	.line	128; "../key.c"	key_status2 = Key_On;
000fda   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_key_status2
000fdb   518d     MOV	0x8d, R0             	MOV	_key_status2, R0
                                           ;	.line	129; "../key.c"	set_led(2,RightReadLightSW,Ind_On);
000fdc   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000fdd   517d     MOV	0x7d, R0             	MOV	STK01, R0
000fde   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK00
000fdf   517e     MOV	0x7e, R0             	MOV	STK00, R0
000fe0   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000fe1   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000fe2   de11     CALL	#0xe11              	CALL	_set_led
000fe3   e00f     MOVP	#0x0F               	PAGESEL	$
                                           ;	.line	130; "../key.c"	Flash_data_set(2,RightReadLightSW,Ind_On);
000fe4   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000fe5   517d     MOV	0x7d, R0             	MOV	STK01, R0
000fe6   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK00
000fe7   517e     MOV	0x7e, R0             	MOV	STK00, R0
000fe8   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000fe9   e017     MOVP	#0x17               	PAGESEL	_Flash_data_set
000fea   d7ff     CALL	#0x7ff              	CALL	_Flash_data_set
000feb   e00f     MOVP	#0x0F               	PAGESEL	$
000fec   cffe     JMP	#0xffe               	JMP	_00056_DS_
                                           _00049_DS_
                                           ;	.line	134; "../key.c"	key_status2 = Key_Off;
                                           	BANKSEL	_key_status2
000fed   038d     CLR	0x8d                 	CLR	_key_status2
                                           ;	.line	135; "../key.c"	set_led(2,RightReadLightSW,Ind_Off);
000fee   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000fef   517d     MOV	0x7d, R0             	MOV	STK01, R0
000ff0   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK00
000ff1   517e     MOV	0x7e, R0             	MOV	STK00, R0
000ff2   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000ff3   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000ff4   de11     CALL	#0xe11              	CALL	_set_led
000ff5   e00f     MOVP	#0x0F               	PAGESEL	$
                                           ;	.line	136; "../key.c"	Flash_data_set(2,RightReadLightSW,Ind_Off);
000ff6   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000ff7   517d     MOV	0x7d, R0             	MOV	STK01, R0
000ff8   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK00
000ff9   517e     MOV	0x7e, R0             	MOV	STK00, R0
000ffa   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000ffb   e017     MOVP	#0x17               	PAGESEL	_Flash_data_set
000ffc   d7ff     CALL	#0x7ff              	CALL	_Flash_data_set
000ffd   e00f     MOVP	#0x0F               	PAGESEL	$
                                           _00056_DS_
000ffe   0008     CRET
                   	CRET	
                                           func._key_state_set	.code
                                           _key_state_set	;Function start
                                           ;	.line	89; "../key.c"	void key_state_set(uint8_t ch,Key_Status_t status)
001eb1   e100     MOVB	#0x00               	BANKSEL	r0x100E
001eb2   5191     MOV	0x91, R0             	MOV	r0x100E, R0
                                           	BANKSEL	STK00
001eb3   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x100F
001eb4   5190     MOV	0x90, R0             	MOV	r0x100F, R0
                                           ;	.line	91; "../key.c"	if(ch == 1)
                                           	BANKSEL	r0x100E
001eb5   0e91     MOVZ	R0, 0x91            	MOVZ	R0, r0x100E
001eb6   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
001eb7   7a03     JB	0x3, 2                	JB	PSW, 2
001eb8   cebb     JMP	#0xebb               	JMP	_00036_DS_
                                           ;	.line	92; "../key.c"	key_status = status;
                                           	BANKSEL	r0x100F
001eb9   0e90     MOVZ	R0, 0x90            	MOVZ	R0, r0x100F
                                           	BANKSEL	_key_status
001eba   518e     MOV	0x8e, R0             	MOV	_key_status, R0
                                           _00036_DS_
                                           ;	.line	93; "../key.c"	if(ch == 2)
                                           	BANKSEL	r0x100E
001ebb   0e91     MOVZ	R0, 0x91            	MOVZ	R0, r0x100E
001ebc   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
001ebd   7a03     JB	0x3, 2                	JB	PSW, 2
001ebe   cec1     JMP	#0xec1               	JMP	_00039_DS_
                                           ;	.line	94; "../key.c"	key_status2 = status;
                                           	BANKSEL	r0x100F
001ebf   0e90     MOVZ	R0, 0x90            	MOVZ	R0, r0x100F
                                           	BANKSEL	_key_status2
001ec0   518d     MOV	0x8d, R0             	MOV	_key_status2, R0
                                           _00039_DS_
001ec1   0008     CRET
                   	CRET	
                                           func._key_read	.code
                                           _key_read	;Function start
                                           ;	.line	37; "../key.c"	Key_Error_Code = _CTouch_Scan_Process_();  //错误代码
00197b   e000     MOVP	#0x00               	PAGESEL	__CTouch_Scan_Process_
00197c   d010     CALL	#0x10               	CALL	__CTouch_Scan_Process_
00197d   e019     MOVP	#0x19               	PAGESEL	$
00197e   e100     MOVB	#0x00               	BANKSEL	_Key_Error_Code
00197f   518c     MOV	0x8c, R0             	MOV	_Key_Error_Code, R0
                                           ;	.line	39; "../key.c"	key_value = Channel_Press_str;
001980   e101     MOVB	#0x01               	BANKSEL	_Channel_Press_str
001981   0ec9     MOVZ	R0, 0xc9            	MOVZ	R0, _Channel_Press_str
                                           	BANKSEL	_key_value
001982   51ab     MOV	0xab, R0             	MOV	_key_value, R0
                                           	BANKSEL	_Channel_Press_str
001983   0eca     MOVZ	R0, 0xca            	MOVZ	R0, (_Channel_Press_str + 1)
                                           	BANKSEL	_key_value
001984   51ac     MOV	0xac, R0             	MOV	(_key_value + 1), R0
                                           ;	.line	40; "../key.c"	Key_Code = key_value & 0x01;  //获取按键状态
001985   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	_key_value
001986   28ab     AND	R0, 0xab             	AND	R0, _key_value
                                           	BANKSEL	_Key_Code
001987   51a9     MOV	0xa9, R0             	MOV	_Key_Code, R0
                                           	BANKSEL	_Key_Code
001988   03aa     CLR	0xaa                 	CLR	(_Key_Code + 1)
                                           ;	.line	42; "../key.c"	switch(key_state)  //状态标记
001989   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
00198a   e100     MOVB	#0x00               	BANKSEL	_key_state
00198b   3894     SUB	R0, 0x94             	SUB	R0, _key_state
00198c   7003     JNB	0x3, 0               	JNB	PSW, 0
00198d   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
00198e   9819     MOV	R0, #0x19            	MOV	R0,#high _00032_DS_
00198f   510a     MOV	0xa, R0              	MOV	PCH, R0
001990   9895     MOV	R0, #0x95            	MOV	R0,#_00032_DS_
                                           	BANKSEL	_key_state
001991   2094     ADD	R0, 0x94             	ADD	R0, _key_state
001992   7003     JNB	0x3, 0               	JNB	PSW, 0
001993   0b0a     INC	0xa                  	INC	PCH
001994   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00032_DS_
001995   c999     JMP	#0x999               	JMP	_00003_DS_
001996   c9a6     JMP	#0x9a6               	JMP	_00006_DS_
001997   c9a9     JMP	#0x9a9               	JMP	_00007_DS_
001998   c9b2     JMP	#0x9b2               	JMP	_00010_DS_
                                           _00003_DS_
                                           ;	.line	45; "../key.c"	if(Key_Code == 1)
001999   e101     MOVB	#0x01               	BANKSEL	_Key_Code
00199a   0ea9     MOVZ	R0, 0xa9            	MOVZ	R0, _Key_Code
00199b   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
00199c   7a03     JB	0x3, 2                	JB	PSW, 2
00199d   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
                                           	BANKSEL	_Key_Code
00199e   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, (_Key_Code + 1)
00199f   a800     XOR	R0, #0x0             	XOR	R0,# 0x00
0019a0   7a03     JB	0x3, 2                	JB	PSW, 2
0019a1   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
                                           ;	.line	46; "../key.c"	key_state = UnPressed2Pressed;
0019a2   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
0019a3   e100     MOVB	#0x00               	BANKSEL	_key_state
0019a4   5194     MOV	0x94, R0             	MOV	_key_state, R0
                                           ;	.line	47; "../key.c"	break;
0019a5   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
                                           _00006_DS_
                                           ;	.line	49; "../key.c"	key_state = Pressed;
0019a6   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_key_state
0019a7   5194     MOV	0x94, R0             	MOV	_key_state, R0
                                           ;	.line	50; "../key.c"	break;
0019a8   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
                                           _00007_DS_
                                           ;	.line	52; "../key.c"	if(Key_Code == 0)
0019a9   e101     MOVB	#0x01               	BANKSEL	_Key_Code
0019aa   0ea9     MOVZ	R0, 0xa9            	MOVZ	R0, _Key_Code
                                           	BANKSEL	_Key_Code
0019ab   30aa     ORL	R0, 0xaa             	ORL	R0, (_Key_Code + 1)
0019ac   7a03     JB	0x3, 2                	JB	PSW, 2
0019ad   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
                                           ;	.line	53; "../key.c"	key_state = Pressed2UnPressed;
0019ae   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
0019af   e100     MOVB	#0x00               	BANKSEL	_key_state
0019b0   5194     MOV	0x94, R0             	MOV	_key_state, R0
                                           ;	.line	54; "../key.c"	break;
0019b1   c9b3     JMP	#0x9b3               	JMP	_00012_DS_
                                           _00010_DS_
                                           ;	.line	56; "../key.c"	key_state = UnPressed;
                                           	BANKSEL	_key_state
0019b2   0394     CLR	0x94                 	CLR	_key_state
                                           _00012_DS_
                                           ;	.line	63; "../key.c"	Key_Code = key_value >> 1 & 0x01;  //获取按键状态
0019b3   6003     CLR	0x3, 0               	CLR	PSW, 0
0019b4   e101     MOVB	#0x01               	BANKSEL	_key_value
0019b5   10ac     RRCR	0xac                	RRCR	(_key_value + 1)
                                           	BANKSEL	_key_value
0019b6   10ab     RRCR	0xab                	RRCR	_key_value
0019b7   e100     MOVB	#0x00               	BANKSEL	r0x100C
0019b8   5192     MOV	0x92, R0             	MOV	r0x100C, R0
0019b9   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	r0x100C
0019ba   2892     AND	R0, 0x92             	AND	R0, r0x100C
0019bb   e101     MOVB	#0x01               	BANKSEL	_Key_Code
0019bc   51a9     MOV	0xa9, R0             	MOV	_Key_Code, R0
                                           	BANKSEL	_Key_Code
0019bd   03aa     CLR	0xaa                 	CLR	(_Key_Code + 1)
                                           ;	.line	65; "../key.c"	switch(key_state2)  //状态标记
0019be   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
0019bf   e100     MOVB	#0x00               	BANKSEL	_key_state2
0019c0   3893     SUB	R0, 0x93             	SUB	R0, _key_state2
0019c1   7003     JNB	0x3, 0               	JNB	PSW, 0
0019c2   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
0019c3   9819     MOV	R0, #0x19            	MOV	R0,#high _00034_DS_
0019c4   510a     MOV	0xa, R0              	MOV	PCH, R0
0019c5   98ca     MOV	R0, #0xca            	MOV	R0,#_00034_DS_
                                           	BANKSEL	_key_state2
0019c6   2093     ADD	R0, 0x93             	ADD	R0, _key_state2
0019c7   7003     JNB	0x3, 0               	JNB	PSW, 0
0019c8   0b0a     INC	0xa                  	INC	PCH
0019c9   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00034_DS_
0019ca   c9ce     JMP	#0x9ce               	JMP	_00013_DS_
0019cb   c9db     JMP	#0x9db               	JMP	_00016_DS_
0019cc   c9de     JMP	#0x9de               	JMP	_00017_DS_
0019cd   c9e7     JMP	#0x9e7               	JMP	_00020_DS_
                                           _00013_DS_
                                           ;	.line	68; "../key.c"	if(Key_Code == 1)
0019ce   e101     MOVB	#0x01               	BANKSEL	_Key_Code
0019cf   0ea9     MOVZ	R0, 0xa9            	MOVZ	R0, _Key_Code
0019d0   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
0019d1   7a03     JB	0x3, 2                	JB	PSW, 2
0019d2   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
                                           	BANKSEL	_Key_Code
0019d3   0eaa     MOVZ	R0, 0xaa            	MOVZ	R0, (_Key_Code + 1)
0019d4   a800     XOR	R0, #0x0             	XOR	R0,# 0x00
0019d5   7a03     JB	0x3, 2                	JB	PSW, 2
0019d6   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
                                           ;	.line	69; "../key.c"	key_state2 = UnPressed2Pressed;
0019d7   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
0019d8   e100     MOVB	#0x00               	BANKSEL	_key_state2
0019d9   5193     MOV	0x93, R0             	MOV	_key_state2, R0
                                           ;	.line	70; "../key.c"	break;
0019da   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
                                           _00016_DS_
                                           ;	.line	72; "../key.c"	key_state2 = Pressed;
0019db   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	_key_state2
0019dc   5193     MOV	0x93, R0             	MOV	_key_state2, R0
                                           ;	.line	73; "../key.c"	break;
0019dd   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
                                           _00017_DS_
                                           ;	.line	75; "../key.c"	if(Key_Code == 0)
0019de   e101     MOVB	#0x01               	BANKSEL	_Key_Code
0019df   0ea9     MOVZ	R0, 0xa9            	MOVZ	R0, _Key_Code
                                           	BANKSEL	_Key_Code
0019e0   30aa     ORL	R0, 0xaa             	ORL	R0, (_Key_Code + 1)
0019e1   7a03     JB	0x3, 2                	JB	PSW, 2
0019e2   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
                                           ;	.line	76; "../key.c"	key_state2 = Pressed2UnPressed;
0019e3   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
0019e4   e100     MOVB	#0x00               	BANKSEL	_key_state2
0019e5   5193     MOV	0x93, R0             	MOV	_key_state2, R0
                                           ;	.line	77; "../key.c"	break;
0019e6   c9e8     JMP	#0x9e8               	JMP	_00023_DS_
                                           _00020_DS_
                                           ;	.line	79; "../key.c"	key_state2 = UnPressed;
                                           	BANKSEL	_key_state2
0019e7   0393     CLR	0x93                 	CLR	_key_state2
                                           _00023_DS_
                                           ;	.line	83; "../key.c"	}
0019e8   0008     CRET
                   	CRET	
                                           func._key_init	.code
                                           _key_init	;Function start
                                           ;	.line	28; "../key.c"	key_state = UnPressed;
001f42   e100     MOVB	#0x00               	BANKSEL	_key_state
001f43   0394     CLR	0x94                 	CLR	_key_state
                                           ;	.line	29; "../key.c"	key_state2 = UnPressed;
                                           	BANKSEL	_key_state2
001f44   0393     CLR	0x93                 	CLR	_key_state2
001f45   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           ID_led_0	.idata
                                           _pointer
                                           	.db	0x00
                                           func._led_deal	.code
                                           _led_deal	;Function start
                                           ;	.line	42; "../led.c"	switch(Door_StatusGet())
000a10   e01f     MOVP	#0x1F               	PAGESEL	_Door_StatusGet
000a11   df51     CALL	#0xf51              	CALL	_Door_StatusGet
000a12   e00a     MOVP	#0x0A               	PAGESEL	$
000a13   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a14   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a15   980a     MOV	R0, #0xa             	MOV	R0,# 0x0a
                                           	BANKSEL	r0x1008
000a16   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
000a17   7803     JB	0x3, 0                	JB	PSW, 0
000a18   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
000a19   9817     MOV	R0, #0x17            	MOV	R0,# 0x17
                                           	BANKSEL	r0x1008
000a1a   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
000a1b   7003     JNB	0x3, 0               	JNB	PSW, 0
000a1c   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
000a1d   98f6     MOV	R0, #0xf6            	MOV	R0,# 0xf6
                                           	BANKSEL	r0x1008
000a1e   2188     ADD	0x88, R0             	ADD	r0x1008, R0
000a1f   980a     MOV	R0, #0xa             	MOV	R0,#high _00176_DS_
000a20   510a     MOV	0xa, R0              	MOV	PCH, R0
000a21   9826     MOV	R0, #0x26            	MOV	R0,#_00176_DS_
                                           	BANKSEL	r0x1008
000a22   2088     ADD	R0, 0x88             	ADD	R0, r0x1008
000a23   7003     JNB	0x3, 0               	JNB	PSW, 0
000a24   0b0a     INC	0xa                  	INC	PCH
000a25   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00176_DS_
000a26   ca7f     JMP	#0xa7f               	JMP	_00019_DS_
000a27   ca54     JMP	#0xa54               	JMP	_00014_DS_
000a28   ca33     JMP	#0xa33               	JMP	_00009_DS_
000a29   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
000a2a   cad1     JMP	#0xad1               	JMP	_00033_DS_
000a2b   caa0     JMP	#0xaa0               	JMP	_00024_DS_
000a2c   cb30     JMP	#0xb30               	JMP	_00048_DS_
000a2d   cb0f     JMP	#0xb0f               	JMP	_00043_DS_
000a2e   cb0e     JMP	#0xb0e               	JMP	_00042_DS_
000a2f   cbad     JMP	#0xbad               	JMP	_00067_DS_
000a30   cb8c     JMP	#0xb8c               	JMP	_00062_DS_
000a31   cb5b     JMP	#0xb5b               	JMP	_00053_DS_
000a32   cbfa     JMP	#0xbfa               	JMP	_00078_DS_
                                           _00009_DS_
                                           ;	.line	62; "../led.c"	if(led.status == Ind_Off)
000a33   e101     MOVB	#0x01               	BANKSEL	_led
000a34   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000a35   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a36   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a37   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000a38   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000a39   7a03     JB	0x3, 2                	JB	PSW, 2
000a3a   ca43     JMP	#0xa43               	JMP	_00011_DS_
                                           ;	.line	64; "../led.c"	set_led(1,DoorSW,Ind_On);
000a3b   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000a3c   517d     MOV	0x7d, R0             	MOV	STK01, R0
000a3d   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000a3e   517e     MOV	0x7e, R0             	MOV	STK00, R0
000a3f   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000a40   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000a41   de11     CALL	#0xe11              	CALL	_set_led
000a42   e00a     MOVP	#0x0A               	PAGESEL	$
                                           _00011_DS_
                                           ;	.line	67; "../led.c"	if(led2.status == Ind_Off)
000a43   e101     MOVB	#0x01               	BANKSEL	_led2
000a44   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000a45   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a46   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a47   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000a48   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000a49   7a03     JB	0x3, 2                	JB	PSW, 2
000a4a   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	69; "../led.c"	set_led(2,DoorSW,Ind_On);
000a4b   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000a4c   517d     MOV	0x7d, R0             	MOV	STK01, R0
000a4d   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000a4e   517e     MOV	0x7e, R0             	MOV	STK00, R0
000a4f   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000a50   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000a51   de11     CALL	#0xe11              	CALL	_set_led
000a52   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	72; "../led.c"	break;
000a53   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00014_DS_
                                           ;	.line	74; "../led.c"	if(led.status == Ind_Off)
000a54   e101     MOVB	#0x01               	BANKSEL	_led
000a55   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000a56   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a57   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a58   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000a59   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000a5a   7a03     JB	0x3, 2                	JB	PSW, 2
000a5b   ca69     JMP	#0xa69               	JMP	_00016_DS_
                                           ;	.line	76; "../led.c"	set_led(1,DoorSW,Ind_up);
000a5c   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK01
000a5d   517d     MOV	0x7d, R0             	MOV	STK01, R0
000a5e   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000a5f   517e     MOV	0x7e, R0             	MOV	STK00, R0
000a60   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000a61   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000a62   de11     CALL	#0xe11              	CALL	_set_led
000a63   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	77; "../led.c"	pointer = 0;   //占空比从0 -> 100
000a64   e100     MOVB	#0x00               	BANKSEL	_pointer
000a65   0386     CLR	0x86                 	CLR	_pointer
                                           ;	.line	78; "../led.c"	Clock_ClearSysLEDTimeStatus();  //清除定时器 待完善
000a66   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000a67   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000a68   e00a     MOVP	#0x0A               	PAGESEL	$
                                           _00016_DS_
                                           ;	.line	81; "../led.c"	if(led2.status == Ind_Off)
000a69   e101     MOVB	#0x01               	BANKSEL	_led2
000a6a   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000a6b   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a6c   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a6d   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000a6e   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000a6f   7a03     JB	0x3, 2                	JB	PSW, 2
000a70   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	83; "../led.c"	set_led(2,DoorSW,Ind_up);
000a71   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK01
000a72   517d     MOV	0x7d, R0             	MOV	STK01, R0
000a73   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000a74   517e     MOV	0x7e, R0             	MOV	STK00, R0
000a75   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000a76   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000a77   de11     CALL	#0xe11              	CALL	_set_led
000a78   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	84; "../led.c"	pointer = 0;   //占空比从0 -> 100
000a79   e100     MOVB	#0x00               	BANKSEL	_pointer
000a7a   0386     CLR	0x86                 	CLR	_pointer
                                           ;	.line	85; "../led.c"	Clock_ClearSysLEDTimeStatus();  //清除定时器 待完善
000a7b   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000a7c   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000a7d   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	88; "../led.c"	break;
000a7e   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00019_DS_
                                           ;	.line	90; "../led.c"	if(led.status == Ind_Off)
000a7f   e101     MOVB	#0x01               	BANKSEL	_led
000a80   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000a81   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a82   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a83   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000a84   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000a85   7a03     JB	0x3, 2                	JB	PSW, 2
000a86   ca8f     JMP	#0xa8f               	JMP	_00021_DS_
                                           ;	.line	92; "../led.c"	set_led(1,DoorSW,Ind_On);
000a87   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000a88   517d     MOV	0x7d, R0             	MOV	STK01, R0
000a89   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000a8a   517e     MOV	0x7e, R0             	MOV	STK00, R0
000a8b   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000a8c   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000a8d   de11     CALL	#0xe11              	CALL	_set_led
000a8e   e00a     MOVP	#0x0A               	PAGESEL	$
                                           _00021_DS_
                                           ;	.line	96; "../led.c"	if(led2.status == Ind_Off)
000a8f   e101     MOVB	#0x01               	BANKSEL	_led2
000a90   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000a91   e100     MOVB	#0x00               	BANKSEL	r0x1008
000a92   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000a93   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000a94   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000a95   7a03     JB	0x3, 2                	JB	PSW, 2
000a96   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	98; "../led.c"	set_led(2,DoorSW,Ind_On);
000a97   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000a98   517d     MOV	0x7d, R0             	MOV	STK01, R0
000a99   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000a9a   517e     MOV	0x7e, R0             	MOV	STK00, R0
000a9b   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000a9c   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000a9d   de11     CALL	#0xe11              	CALL	_set_led
000a9e   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	101; "../led.c"	break;
000a9f   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00024_DS_
                                           ;	.line	104; "../led.c"	if(led.status == Ind_On)
000aa0   e101     MOVB	#0x01               	BANKSEL	_led
000aa1   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000aa2   e100     MOVB	#0x00               	BANKSEL	r0x1008
000aa3   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000aa4   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000aa5   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000aa6   7a03     JB	0x3, 2                	JB	PSW, 2
000aa7   cab8     JMP	#0xab8               	JMP	_00028_DS_
                                           ;	.line	106; "../led.c"	if(led.key != LeftReadLightSW)
000aa8   e101     MOVB	#0x01               	BANKSEL	_led
000aa9   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0,  (_led + 0)
000aaa   e100     MOVB	#0x00               	BANKSEL	r0x1008
000aab   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000aac   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	108; "../led.c"	set_led(1,DoorSW,Ind_Off);
000aad   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000aae   7203     JNB	0x3, 2               	JNB	PSW, 2
000aaf   cab8     JMP	#0xab8               	JMP	_00028_DS_
000ab0   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000ab1   517d     MOV	0x7d, R0             	MOV	STK01, R0
000ab2   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000ab3   517e     MOV	0x7e, R0             	MOV	STK00, R0
000ab4   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000ab5   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000ab6   de11     CALL	#0xe11              	CALL	_set_led
000ab7   e00a     MOVP	#0x0A               	PAGESEL	$
                                           _00028_DS_
                                           ;	.line	114; "../led.c"	if(led2.status == Ind_On)
000ab8   e101     MOVB	#0x01               	BANKSEL	_led2
000ab9   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000aba   e100     MOVB	#0x00               	BANKSEL	r0x1008
000abb   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000abc   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000abd   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000abe   7a03     JB	0x3, 2                	JB	PSW, 2
000abf   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	116; "../led.c"	if(led2.key != RightReadLightSW)
000ac0   e101     MOVB	#0x01               	BANKSEL	_led2
000ac1   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0,  (_led2 + 0)
000ac2   e100     MOVB	#0x00               	BANKSEL	r0x1008
000ac3   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000ac4   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000ac5   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000ac6   7203     JNB	0x3, 2               	JNB	PSW, 2
000ac7   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	119; "../led.c"	set_led(2,DoorSW,Ind_Off);
000ac8   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000ac9   517d     MOV	0x7d, R0             	MOV	STK01, R0
000aca   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000acb   517e     MOV	0x7e, R0             	MOV	STK00, R0
000acc   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000acd   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000ace   de11     CALL	#0xe11              	CALL	_set_led
000acf   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	124; "../led.c"	break;
000ad0   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00033_DS_
                                           ;	.line	128; "../led.c"	if(led.status == Ind_On)
000ad1   e101     MOVB	#0x01               	BANKSEL	_led
000ad2   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000ad3   e100     MOVB	#0x00               	BANKSEL	r0x1008
000ad4   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000ad5   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000ad6   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000ad7   7a03     JB	0x3, 2                	JB	PSW, 2
000ad8   caef     JMP	#0xaef               	JMP	_00037_DS_
                                           ;	.line	130; "../led.c"	if(led.key != LeftReadLightSW)
000ad9   e101     MOVB	#0x01               	BANKSEL	_led
000ada   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0,  (_led + 0)
000adb   e100     MOVB	#0x00               	BANKSEL	r0x1008
000adc   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000add   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	132; "../led.c"	set_led(1,DoorSW,Ind_down);
000ade   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000adf   7203     JNB	0x3, 2               	JNB	PSW, 2
000ae0   caef     JMP	#0xaef               	JMP	_00037_DS_
000ae1   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK01
000ae2   517d     MOV	0x7d, R0             	MOV	STK01, R0
000ae3   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000ae4   517e     MOV	0x7e, R0             	MOV	STK00, R0
000ae5   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000ae6   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000ae7   de11     CALL	#0xe11              	CALL	_set_led
000ae8   e00a     MOVP	#0x0A               	PAGESEL	$
                                           ;	.line	134; "../led.c"	pointer = 80;
000ae9   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000aea   e100     MOVB	#0x00               	BANKSEL	_pointer
000aeb   5186     MOV	0x86, R0             	MOV	_pointer, R0
                                           ;	.line	135; "../led.c"	Clock_ClearSysLEDTimeStatus();
000aec   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000aed   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000aee   e00a     MOVP	#0x0A               	PAGESEL	$
                                           _00037_DS_
                                           ;	.line	140; "../led.c"	if(led2.status == Ind_On)
000aef   e101     MOVB	#0x01               	BANKSEL	_led2
000af0   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000af1   e100     MOVB	#0x00               	BANKSEL	r0x1008
000af2   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000af3   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000af4   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000af5   7a03     JB	0x3, 2                	JB	PSW, 2
000af6   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	142; "../led.c"	if(led2.key != RightReadLightSW)
000af7   e101     MOVB	#0x01               	BANKSEL	_led2
000af8   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0,  (_led2 + 0)
000af9   e100     MOVB	#0x00               	BANKSEL	r0x1008
000afa   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000afb   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000afc   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000afd   7203     JNB	0x3, 2               	JNB	PSW, 2
000afe   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	144; "../led.c"	set_led(2,DoorSW,Ind_down);
000aff   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK01
000b00   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b01   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b02   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b03   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000b04   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b05   de11     CALL	#0xe11              	CALL	_set_led
000b06   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	146; "../led.c"	pointer = 80;
000b07   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000b08   e100     MOVB	#0x00               	BANKSEL	_pointer
000b09   5186     MOV	0x86, R0             	MOV	_pointer, R0
                                           ;	.line	147; "../led.c"	Clock_ClearSysLEDTimeStatus();
000b0a   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000b0b   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000b0c   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	151; "../led.c"	break;
000b0d   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00042_DS_
                                           ;	.line	155; "../led.c"	break;
000b0e   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00043_DS_
                                           ;	.line	158; "../led.c"	if(led.status == Ind_Off)
000b0f   e101     MOVB	#0x01               	BANKSEL	_led
000b10   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000b11   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b12   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000b13   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000b14   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000b15   7a03     JB	0x3, 2                	JB	PSW, 2
000b16   cb1f     JMP	#0xb1f               	JMP	_00045_DS_
                                           ;	.line	160; "../led.c"	set_led(1,DoorSW,Ind_On);
000b17   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000b18   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b19   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b1a   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b1b   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000b1c   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b1d   de11     CALL	#0xe11              	CALL	_set_led
000b1e   e00b     MOVP	#0x0B               	PAGESEL	$
                                           _00045_DS_
                                           ;	.line	163; "../led.c"	if(led2.status == Ind_Off)
000b1f   e101     MOVB	#0x01               	BANKSEL	_led2
000b20   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000b21   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b22   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000b23   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000b24   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000b25   7a03     JB	0x3, 2                	JB	PSW, 2
000b26   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	165; "../led.c"	set_led(2,DoorSW,Ind_On);
000b27   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000b28   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b29   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b2a   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b2b   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000b2c   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b2d   de11     CALL	#0xe11              	CALL	_set_led
000b2e   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	167; "../led.c"	break;
000b2f   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00048_DS_
                                           ;	.line	169; "../led.c"	if(led.status == Ind_Off)
000b30   e101     MOVB	#0x01               	BANKSEL	_led
000b31   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000b32   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b33   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000b34   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000b35   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000b36   7a03     JB	0x3, 2                	JB	PSW, 2
000b37   cb45     JMP	#0xb45               	JMP	_00050_DS_
                                           ;	.line	171; "../led.c"	set_led(1,DoorSW,Ind_up);
000b38   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK01
000b39   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b3a   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b3b   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b3c   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000b3d   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b3e   de11     CALL	#0xe11              	CALL	_set_led
000b3f   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	172; "../led.c"	pointer = 0;
000b40   e100     MOVB	#0x00               	BANKSEL	_pointer
000b41   0386     CLR	0x86                 	CLR	_pointer
                                           ;	.line	173; "../led.c"	Clock_ClearSysLEDTimeStatus();
000b42   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000b43   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000b44   e00b     MOVP	#0x0B               	PAGESEL	$
                                           _00050_DS_
                                           ;	.line	176; "../led.c"	if(led2.status == Ind_Off)
000b45   e101     MOVB	#0x01               	BANKSEL	_led2
000b46   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000b47   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b48   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000b49   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000b4a   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000b4b   7a03     JB	0x3, 2                	JB	PSW, 2
000b4c   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	178; "../led.c"	set_led(2,DoorSW,Ind_up);
000b4d   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
                                           	BANKSEL	STK01
000b4e   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b4f   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b50   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b51   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000b52   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b53   de11     CALL	#0xe11              	CALL	_set_led
000b54   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	179; "../led.c"	pointer = 0;
000b55   e100     MOVB	#0x00               	BANKSEL	_pointer
000b56   0386     CLR	0x86                 	CLR	_pointer
                                           ;	.line	180; "../led.c"	Clock_ClearSysLEDTimeStatus();
000b57   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000b58   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000b59   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	183; "../led.c"	break;
000b5a   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00053_DS_
                                           ;	.line	185; "../led.c"	if(led.status == Ind_On)
000b5b   e101     MOVB	#0x01               	BANKSEL	_led
000b5c   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000b5d   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b5e   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000b5f   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000b60   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000b61   7a03     JB	0x3, 2                	JB	PSW, 2
000b62   cb73     JMP	#0xb73               	JMP	_00057_DS_
                                           ;	.line	187; "../led.c"	if(led.key != LeftReadLightSW)//if(indInfo[LeftReadLight].key == DoorSW)
000b63   e101     MOVB	#0x01               	BANKSEL	_led
000b64   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0,  (_led + 0)
000b65   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b66   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000b67   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	189; "../led.c"	set_led(1,DoorSW,Ind_Off);
000b68   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000b69   7203     JNB	0x3, 2               	JNB	PSW, 2
000b6a   cb73     JMP	#0xb73               	JMP	_00057_DS_
000b6b   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000b6c   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b6d   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b6e   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b6f   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000b70   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b71   de11     CALL	#0xe11              	CALL	_set_led
000b72   e00b     MOVP	#0x0B               	PAGESEL	$
                                           _00057_DS_
                                           ;	.line	193; "../led.c"	if(led2.status == Ind_On)
000b73   e101     MOVB	#0x01               	BANKSEL	_led2
000b74   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000b75   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b76   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000b77   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000b78   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000b79   7a03     JB	0x3, 2                	JB	PSW, 2
000b7a   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	195; "../led.c"	if(led2.key != RightReadLightSW)
000b7b   e101     MOVB	#0x01               	BANKSEL	_led2
000b7c   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0,  (_led2 + 0)
000b7d   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b7e   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000b7f   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000b80   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000b81   7203     JNB	0x3, 2               	JNB	PSW, 2
000b82   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	197; "../led.c"	set_led(2,DoorSW,Ind_Off);
000b83   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000b84   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b85   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b86   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b87   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000b88   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b89   de11     CALL	#0xe11              	CALL	_set_led
000b8a   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	201; "../led.c"	break;
000b8b   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00062_DS_
                                           ;	.line	204; "../led.c"	if(led.status == Ind_Off)
000b8c   e101     MOVB	#0x01               	BANKSEL	_led
000b8d   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000b8e   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b8f   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000b90   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000b91   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000b92   7a03     JB	0x3, 2                	JB	PSW, 2
000b93   cb9c     JMP	#0xb9c               	JMP	_00064_DS_
                                           ;	.line	207; "../led.c"	set_led(1,DoorSW,Ind_On);
000b94   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000b95   517d     MOV	0x7d, R0             	MOV	STK01, R0
000b96   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000b97   517e     MOV	0x7e, R0             	MOV	STK00, R0
000b98   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000b99   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000b9a   de11     CALL	#0xe11              	CALL	_set_led
000b9b   e00b     MOVP	#0x0B               	PAGESEL	$
                                           _00064_DS_
                                           ;	.line	211; "../led.c"	if(led2.status == Ind_Off)
000b9c   e101     MOVB	#0x01               	BANKSEL	_led2
000b9d   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000b9e   e100     MOVB	#0x00               	BANKSEL	r0x1008
000b9f   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000ba0   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000ba1   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000ba2   7a03     JB	0x3, 2                	JB	PSW, 2
000ba3   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	214; "../led.c"	set_led(2,DoorSW,Ind_On);
000ba4   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000ba5   517d     MOV	0x7d, R0             	MOV	STK01, R0
000ba6   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000ba7   517e     MOV	0x7e, R0             	MOV	STK00, R0
000ba8   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000ba9   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000baa   de11     CALL	#0xe11              	CALL	_set_led
000bab   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	218; "../led.c"	break;
000bac   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00067_DS_
                                           ;	.line	221; "../led.c"	if(led.status == Ind_On || led.status == Ind_up)
000bad   e101     MOVB	#0x01               	BANKSEL	_led
000bae   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000baf   e100     MOVB	#0x00               	BANKSEL	r0x1008
000bb0   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000bb1   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000bb2   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000bb3   7203     JNB	0x3, 2               	JNB	PSW, 2
000bb4   cbbd     JMP	#0xbbd               	JMP	_00070_DS_
000bb5   e101     MOVB	#0x01               	BANKSEL	_led
000bb6   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000bb7   e100     MOVB	#0x00               	BANKSEL	r0x1008
000bb8   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000bb9   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000bba   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
000bbb   7a03     JB	0x3, 2                	JB	PSW, 2
000bbc   cbd3     JMP	#0xbd3               	JMP	_00071_DS_
                                           _00070_DS_
                                           ;	.line	223; "../led.c"	if(led.key != LeftReadLightSW)//if(indInfo[LeftReadLight].key == DoorSW)
000bbd   e101     MOVB	#0x01               	BANKSEL	_led
000bbe   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0,  (_led + 0)
000bbf   e100     MOVB	#0x00               	BANKSEL	r0x1008
000bc0   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000bc1   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	225; "../led.c"	set_led(1,DoorSW,Ind_down);
000bc2   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000bc3   7203     JNB	0x3, 2               	JNB	PSW, 2
000bc4   cbd3     JMP	#0xbd3               	JMP	_00071_DS_
000bc5   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK01
000bc6   517d     MOV	0x7d, R0             	MOV	STK01, R0
000bc7   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000bc8   517e     MOV	0x7e, R0             	MOV	STK00, R0
000bc9   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000bca   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000bcb   de11     CALL	#0xe11              	CALL	_set_led
000bcc   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	228; "../led.c"	pointer = 80;
000bcd   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000bce   e100     MOVB	#0x00               	BANKSEL	_pointer
000bcf   5186     MOV	0x86, R0             	MOV	_pointer, R0
                                           ;	.line	229; "../led.c"	Clock_ClearSysLEDTimeStatus();
000bd0   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000bd1   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000bd2   e00b     MOVP	#0x0B               	PAGESEL	$
                                           _00071_DS_
                                           ;	.line	233; "../led.c"	if(led2.status == Ind_On || led2.status == Ind_up)
000bd3   e101     MOVB	#0x01               	BANKSEL	_led2
000bd4   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000bd5   e100     MOVB	#0x00               	BANKSEL	r0x1008
000bd6   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000bd7   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000bd8   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000bd9   7203     JNB	0x3, 2               	JNB	PSW, 2
000bda   cbe3     JMP	#0xbe3               	JMP	_00075_DS_
000bdb   e101     MOVB	#0x01               	BANKSEL	_led2
000bdc   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000bdd   e100     MOVB	#0x00               	BANKSEL	r0x1008
000bde   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000bdf   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000be0   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
000be1   7a03     JB	0x3, 2                	JB	PSW, 2
000be2   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00075_DS_
                                           ;	.line	235; "../led.c"	if(led2.key != RightReadLightSW)//if(indInfo[LeftReadLight].key == DoorSW)
000be3   e101     MOVB	#0x01               	BANKSEL	_led2
000be4   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0,  (_led2 + 0)
000be5   e100     MOVB	#0x00               	BANKSEL	r0x1008
000be6   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000be7   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000be8   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000be9   7203     JNB	0x3, 2               	JNB	PSW, 2
000bea   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	237; "../led.c"	set_led(2,DoorSW,Ind_down);
000beb   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK01
000bec   517d     MOV	0x7d, R0             	MOV	STK01, R0
000bed   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000bee   517e     MOV	0x7e, R0             	MOV	STK00, R0
000bef   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000bf0   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000bf1   de11     CALL	#0xe11              	CALL	_set_led
000bf2   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	240; "../led.c"	pointer = 80;
000bf3   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000bf4   e100     MOVB	#0x00               	BANKSEL	_pointer
000bf5   5186     MOV	0x86, R0             	MOV	_pointer, R0
                                           ;	.line	241; "../led.c"	Clock_ClearSysLEDTimeStatus();
000bf6   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000bf7   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000bf8   e00b     MOVP	#0x0B               	PAGESEL	$
                                           ;	.line	245; "../led.c"	break;
000bf9   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00078_DS_
                                           ;	.line	247; "../led.c"	if(led.status == Ind_On)
000bfa   e101     MOVB	#0x01               	BANKSEL	_led
000bfb   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000bfc   e100     MOVB	#0x00               	BANKSEL	r0x1008
000bfd   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000bfe   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000bff   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000c00   7a03     JB	0x3, 2                	JB	PSW, 2
000c01   cc12     JMP	#0xc12               	JMP	_00082_DS_
                                           ;	.line	249; "../led.c"	if(led.key != LeftReadLightSW)//if(indInfo[LeftReadLight].key == DoorSW)
000c02   e101     MOVB	#0x01               	BANKSEL	_led
000c03   0ea7     MOVZ	R0, 0xa7            	MOVZ	R0,  (_led + 0)
000c04   e100     MOVB	#0x00               	BANKSEL	r0x1008
000c05   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000c06   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	251; "../led.c"	set_led(1,DoorSW,Ind_Off);
000c07   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000c08   7203     JNB	0x3, 2               	JNB	PSW, 2
000c09   cc12     JMP	#0xc12               	JMP	_00082_DS_
000c0a   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000c0b   517d     MOV	0x7d, R0             	MOV	STK01, R0
000c0c   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000c0d   517e     MOV	0x7e, R0             	MOV	STK00, R0
000c0e   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000c0f   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000c10   de11     CALL	#0xe11              	CALL	_set_led
000c11   e00c     MOVP	#0x0C               	PAGESEL	$
                                           _00082_DS_
                                           ;	.line	257; "../led.c"	if(led2.status == Ind_On)
000c12   e101     MOVB	#0x01               	BANKSEL	_led2
000c13   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000c14   e100     MOVB	#0x00               	BANKSEL	r0x1008
000c15   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000c16   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
000c17   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
000c18   7a03     JB	0x3, 2                	JB	PSW, 2
000c19   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	259; "../led.c"	if(led2.key != RightReadLightSW)
000c1a   e101     MOVB	#0x01               	BANKSEL	_led2
000c1b   0ea5     MOVZ	R0, 0xa5            	MOVZ	R0,  (_led2 + 0)
000c1c   e100     MOVB	#0x00               	BANKSEL	r0x1008
000c1d   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000c1e   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1008
000c1f   3088     ORL	R0, 0x88             	ORL	R0, r0x1008
000c20   7203     JNB	0x3, 2               	JNB	PSW, 2
000c21   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           ;	.line	261; "../led.c"	set_led(2,DoorSW,Ind_Off);
000c22   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000c23   517d     MOV	0x7d, R0             	MOV	STK01, R0
000c24   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000c25   517e     MOV	0x7e, R0             	MOV	STK00, R0
000c26   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000c27   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000c28   de11     CALL	#0xe11              	CALL	_set_led
000c29   e00c     MOVP	#0x0C               	PAGESEL	$
                                           ;	.line	267; "../led.c"	break;
000c2a   cc2b     JMP	#0xc2b               	JMP	_00088_DS_
                                           _00088_DS_
                                           ;	.line	273; "../led.c"	switch(led.status)
000c2b   e101     MOVB	#0x01               	BANKSEL	_led
000c2c   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000c2d   e100     MOVB	#0x00               	BANKSEL	r0x1008
000c2e   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000c2f   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1008
000c30   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
000c31   7003     JNB	0x3, 0               	JNB	PSW, 0
000c32   cc9a     JMP	#0xc9a               	JMP	_00105_DS_
000c33   980c     MOV	R0, #0xc             	MOV	R0,#high _00185_DS_
000c34   510a     MOV	0xa, R0              	MOV	PCH, R0
000c35   983a     MOV	R0, #0x3a            	MOV	R0,#_00185_DS_
                                           	BANKSEL	r0x1008
000c36   2088     ADD	R0, 0x88             	ADD	R0, r0x1008
000c37   7003     JNB	0x3, 0               	JNB	PSW, 0
000c38   0b0a     INC	0xa                  	INC	PCH
000c39   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00185_DS_
000c3a   cc96     JMP	#0xc96               	JMP	_00103_DS_
000c3b   cc91     JMP	#0xc91               	JMP	_00102_DS_
000c3c   cc3e     JMP	#0xc3e               	JMP	_00089_DS_
000c3d   cc6a     JMP	#0xc6a               	JMP	_00096_DS_
                                           _00089_DS_
                                           ;	.line	276; "../led.c"	if(Clock_GetSysLEDTimeStatus()>3)   //0.00204s * 343 ≈ 0.7S
000c3e   e01f     MOVP	#0x1F               	PAGESEL	_Clock_GetSysLEDTimeStatus
000c3f   df24     CALL	#0xf24              	CALL	_Clock_GetSysLEDTimeStatus
000c40   e00c     MOVP	#0x0C               	PAGESEL	$
000c41   e100     MOVB	#0x00               	BANKSEL	r0x1009
000c42   5187     MOV	0x87, R0             	MOV	r0x1009, R0
                                           	BANKSEL	STK00
000c43   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1008
000c44   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000c45   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1009
000c46   3887     SUB	R0, 0x87             	SUB	R0, r0x1009
000c47   7a03     JB	0x3, 2                	JB	PSW, 2
000c48   cc4b     JMP	#0xc4b               	JMP	_00186_DS_
000c49   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1008
000c4a   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
                                           _00186_DS_
000c4b   7803     JB	0x3, 0                	JB	PSW, 0
000c4c   cc51     JMP	#0xc51               	JMP	_00091_DS_
                                           ;	.line	278; "../led.c"	pointer++;
                                           	BANKSEL	_pointer
000c4d   0b86     INC	0x86                 	INC	_pointer
                                           ;	.line	279; "../led.c"	Clock_ClearSysLEDTimeStatus();
000c4e   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000c4f   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000c50   e00c     MOVP	#0x0C               	PAGESEL	$
                                           _00091_DS_
                                           ;	.line	282; "../led.c"	if(pointer < 80 || pointer == 80)
000c51   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000c52   e100     MOVB	#0x00               	BANKSEL	_pointer
000c53   3886     SUB	R0, 0x86             	SUB	R0, _pointer
000c54   7803     JB	0x3, 0                	JB	PSW, 0
000c55   cc5a     JMP	#0xc5a               	JMP	_00092_DS_
                                           	BANKSEL	_pointer
000c56   0e86     MOVZ	R0, 0x86            	MOVZ	R0, _pointer
000c57   a850     XOR	R0, #0x50            	XOR	R0,# 0x50
000c58   7a03     JB	0x3, 2                	JB	PSW, 2
000c59   cc5f     JMP	#0xc5f               	JMP	_00093_DS_
                                           _00092_DS_
                                           ;	.line	284; "../led.c"	set_PWM1L(pointer);
                                           	BANKSEL	_pointer
000c5a   0e86     MOVZ	R0, 0x86            	MOVZ	R0, _pointer
000c5b   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM1L
000c5c   dc75     CALL	#0xc75              	CALL	_set_PWM1L
000c5d   e00c     MOVP	#0x0C               	PAGESEL	$
000c5e   cc9a     JMP	#0xc9a               	JMP	_00105_DS_
                                           _00093_DS_
                                           ;	.line	288; "../led.c"	pointer = 80;
000c5f   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
                                           	BANKSEL	_pointer
000c60   5186     MOV	0x86, R0             	MOV	_pointer, R0
                                           ;	.line	289; "../led.c"	set_led(1,DoorSW,Ind_On);
000c61   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000c62   517d     MOV	0x7d, R0             	MOV	STK01, R0
000c63   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000c64   517e     MOV	0x7e, R0             	MOV	STK00, R0
000c65   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000c66   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000c67   de11     CALL	#0xe11              	CALL	_set_led
000c68   e00c     MOVP	#0x0C               	PAGESEL	$
                                           ;	.line	291; "../led.c"	break;
000c69   cc9a     JMP	#0xc9a               	JMP	_00105_DS_
                                           _00096_DS_
                                           ;	.line	294; "../led.c"	if(Clock_GetSysLEDTimeStatus()>6)   //0.00204s * 686 ≈ 1.4S
000c6a   e01f     MOVP	#0x1F               	PAGESEL	_Clock_GetSysLEDTimeStatus
000c6b   df24     CALL	#0xf24              	CALL	_Clock_GetSysLEDTimeStatus
000c6c   e00c     MOVP	#0x0C               	PAGESEL	$
000c6d   e100     MOVB	#0x00               	BANKSEL	r0x1009
000c6e   5187     MOV	0x87, R0             	MOV	r0x1009, R0
                                           	BANKSEL	STK00
000c6f   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1008
000c70   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000c71   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1009
000c72   3887     SUB	R0, 0x87             	SUB	R0, r0x1009
000c73   7a03     JB	0x3, 2                	JB	PSW, 2
000c74   cc77     JMP	#0xc77               	JMP	_00188_DS_
000c75   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1008
000c76   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
                                           _00188_DS_
000c77   7803     JB	0x3, 0                	JB	PSW, 0
000c78   cc7d     JMP	#0xc7d               	JMP	_00098_DS_
                                           ;	.line	296; "../led.c"	pointer--;
                                           	BANKSEL	_pointer
000c79   0786     DEC	0x86                 	DEC	_pointer
                                           ;	.line	297; "../led.c"	Clock_ClearSysLEDTimeStatus();
000c7a   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000c7b   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000c7c   e00c     MOVP	#0x0C               	PAGESEL	$
                                           _00098_DS_
                                           ;	.line	300; "../led.c"	if(pointer > 0)
000c7d   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
000c7e   e100     MOVB	#0x00               	BANKSEL	_pointer
000c7f   3086     ORL	R0, 0x86             	ORL	R0, _pointer
000c80   7203     JNB	0x3, 2               	JNB	PSW, 2
000c81   cc87     JMP	#0xc87               	JMP	_00100_DS_
                                           ;	.line	302; "../led.c"	set_PWM1L(pointer);
                                           	BANKSEL	_pointer
000c82   0e86     MOVZ	R0, 0x86            	MOVZ	R0, _pointer
000c83   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM1L
000c84   dc75     CALL	#0xc75              	CALL	_set_PWM1L
000c85   e00c     MOVP	#0x0C               	PAGESEL	$
000c86   cc9a     JMP	#0xc9a               	JMP	_00105_DS_
                                           _00100_DS_
                                           ;	.line	306; "../led.c"	pointer = 0;
                                           	BANKSEL	_pointer
000c87   0386     CLR	0x86                 	CLR	_pointer
                                           ;	.line	307; "../led.c"	set_led(1,DoorSW,Ind_Off);
000c88   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000c89   517d     MOV	0x7d, R0             	MOV	STK01, R0
000c8a   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000c8b   517e     MOV	0x7e, R0             	MOV	STK00, R0
000c8c   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
000c8d   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000c8e   de11     CALL	#0xe11              	CALL	_set_led
000c8f   e00c     MOVP	#0x0C               	PAGESEL	$
                                           ;	.line	309; "../led.c"	break;
000c90   cc9a     JMP	#0xc9a               	JMP	_00105_DS_
                                           _00102_DS_
                                           ;	.line	311; "../led.c"	set_PWM1L(80);
000c91   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000c92   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM1L
000c93   dc75     CALL	#0xc75              	CALL	_set_PWM1L
000c94   e00c     MOVP	#0x0C               	PAGESEL	$
                                           ;	.line	312; "../led.c"	break;
000c95   cc9a     JMP	#0xc9a               	JMP	_00105_DS_
                                           _00103_DS_
                                           ;	.line	314; "../led.c"	set_PWM1L(0);
000c96   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
000c97   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM1L
000c98   dc75     CALL	#0xc75              	CALL	_set_PWM1L
000c99   e00c     MOVP	#0x0C               	PAGESEL	$
                                           _00105_DS_
                                           ;	.line	325; "../led.c"	switch(led2.status)
000c9a   e101     MOVB	#0x01               	BANKSEL	_led2
000c9b   0ea6     MOVZ	R0, 0xa6            	MOVZ	R0,  (_led2 + 1)
000c9c   e100     MOVB	#0x00               	BANKSEL	r0x1008
000c9d   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000c9e   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1008
000c9f   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
000ca0   7003     JNB	0x3, 0               	JNB	PSW, 0
000ca1   cd15     JMP	#0xd15               	JMP	_00126_DS_
000ca2   980c     MOV	R0, #0xc             	MOV	R0,#high _00190_DS_
000ca3   510a     MOV	0xa, R0              	MOV	PCH, R0
000ca4   98a9     MOV	R0, #0xa9            	MOV	R0,#_00190_DS_
                                           	BANKSEL	r0x1008
000ca5   2088     ADD	R0, 0x88             	ADD	R0, r0x1008
000ca6   7003     JNB	0x3, 0               	JNB	PSW, 0
000ca7   0b0a     INC	0xa                  	INC	PCH
000ca8   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00190_DS_
000ca9   cd11     JMP	#0xd11               	JMP	_00123_DS_
000caa   cd0c     JMP	#0xd0c               	JMP	_00122_DS_
000cab   ccad     JMP	#0xcad               	JMP	_00106_DS_
000cac   ccdd     JMP	#0xcdd               	JMP	_00114_DS_
                                           _00106_DS_
                                           ;	.line	330; "../led.c"	if(led.status != Ind_up)  //如果同时渐亮 不操作
000cad   e101     MOVB	#0x01               	BANKSEL	_led
000cae   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000caf   e100     MOVB	#0x00               	BANKSEL	r0x1008
000cb0   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000cb1   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	332; "../led.c"	if(Clock_GetSysLEDTimeStatus()>3)
000cb2   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
000cb3   7203     JNB	0x3, 2               	JNB	PSW, 2
000cb4   ccc8     JMP	#0xcc8               	JMP	_00110_DS_
000cb5   e01f     MOVP	#0x1F               	PAGESEL	_Clock_GetSysLEDTimeStatus
000cb6   df24     CALL	#0xf24              	CALL	_Clock_GetSysLEDTimeStatus
000cb7   e00c     MOVP	#0x0C               	PAGESEL	$
000cb8   e100     MOVB	#0x00               	BANKSEL	r0x1009
000cb9   5187     MOV	0x87, R0             	MOV	r0x1009, R0
                                           	BANKSEL	STK00
000cba   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1008
000cbb   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000cbc   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1009
000cbd   3887     SUB	R0, 0x87             	SUB	R0, r0x1009
000cbe   7a03     JB	0x3, 2                	JB	PSW, 2
000cbf   ccc2     JMP	#0xcc2               	JMP	_00192_DS_
000cc0   9804     MOV	R0, #0x4             	MOV	R0,# 0x04
                                           	BANKSEL	r0x1008
000cc1   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
                                           _00192_DS_
000cc2   7803     JB	0x3, 0                	JB	PSW, 0
000cc3   ccc8     JMP	#0xcc8               	JMP	_00110_DS_
                                           ;	.line	334; "../led.c"	pointer++;
                                           	BANKSEL	_pointer
000cc4   0b86     INC	0x86                 	INC	_pointer
                                           ;	.line	335; "../led.c"	Clock_ClearSysLEDTimeStatus();
000cc5   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000cc6   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000cc7   e00c     MOVP	#0x0C               	PAGESEL	$
                                           _00110_DS_
                                           ;	.line	339; "../led.c"	if(pointer < 80)
000cc8   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000cc9   e100     MOVB	#0x00               	BANKSEL	_pointer
000cca   3886     SUB	R0, 0x86             	SUB	R0, _pointer
000ccb   7003     JNB	0x3, 0               	JNB	PSW, 0
000ccc   ccd2     JMP	#0xcd2               	JMP	_00112_DS_
                                           ;	.line	341; "../led.c"	set_PWM2L(pointer);
                                           	BANKSEL	_pointer
000ccd   0e86     MOVZ	R0, 0x86            	MOVZ	R0, _pointer
000cce   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM2L
000ccf   dc40     CALL	#0xc40              	CALL	_set_PWM2L
000cd0   e00c     MOVP	#0x0C               	PAGESEL	$
000cd1   cd15     JMP	#0xd15               	JMP	_00126_DS_
                                           _00112_DS_
                                           ;	.line	345; "../led.c"	pointer = 80;
000cd2   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
                                           	BANKSEL	_pointer
000cd3   5186     MOV	0x86, R0             	MOV	_pointer, R0
                                           ;	.line	347; "../led.c"	set_led(2,DoorSW,Ind_On);
000cd4   9801     MOV	R0, #0x1             	MOV	R0,# 0x01
                                           	BANKSEL	STK01
000cd5   517d     MOV	0x7d, R0             	MOV	STK01, R0
000cd6   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000cd7   517e     MOV	0x7e, R0             	MOV	STK00, R0
000cd8   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000cd9   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000cda   de11     CALL	#0xe11              	CALL	_set_led
000cdb   e00c     MOVP	#0x0C               	PAGESEL	$
                                           ;	.line	349; "../led.c"	break;
000cdc   cd15     JMP	#0xd15               	JMP	_00126_DS_
                                           _00114_DS_
                                           ;	.line	352; "../led.c"	if(led.status != Ind_down)  //如果同时渐亮 不操作
000cdd   e101     MOVB	#0x01               	BANKSEL	_led
000cde   0ea8     MOVZ	R0, 0xa8            	MOVZ	R0,  (_led + 1)
000cdf   e100     MOVB	#0x00               	BANKSEL	r0x1008
000ce0   5188     MOV	0x88, R0             	MOV	r0x1008, R0
                                           	BANKSEL	r0x1008
000ce1   0e88     MOVZ	R0, 0x88            	MOVZ	R0, r0x1008
                                           ;	.line	354; "../led.c"	if(Clock_GetSysLEDTimeStatus()>6)
000ce2   a803     XOR	R0, #0x3             	XOR	R0,# 0x03
000ce3   7203     JNB	0x3, 2               	JNB	PSW, 2
000ce4   ccf8     JMP	#0xcf8               	JMP	_00118_DS_
000ce5   e01f     MOVP	#0x1F               	PAGESEL	_Clock_GetSysLEDTimeStatus
000ce6   df24     CALL	#0xf24              	CALL	_Clock_GetSysLEDTimeStatus
000ce7   e00c     MOVP	#0x0C               	PAGESEL	$
000ce8   e100     MOVB	#0x00               	BANKSEL	r0x1009
000ce9   5187     MOV	0x87, R0             	MOV	r0x1009, R0
                                           	BANKSEL	STK00
000cea   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1008
000ceb   5188     MOV	0x88, R0             	MOV	r0x1008, R0
000cec   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1009
000ced   3887     SUB	R0, 0x87             	SUB	R0, r0x1009
000cee   7a03     JB	0x3, 2                	JB	PSW, 2
000cef   ccf2     JMP	#0xcf2               	JMP	_00195_DS_
000cf0   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	r0x1008
000cf1   3888     SUB	R0, 0x88             	SUB	R0, r0x1008
                                           _00195_DS_
000cf2   7803     JB	0x3, 0                	JB	PSW, 0
000cf3   ccf8     JMP	#0xcf8               	JMP	_00118_DS_
                                           ;	.line	356; "../led.c"	pointer--;
                                           	BANKSEL	_pointer
000cf4   0786     DEC	0x86                 	DEC	_pointer
                                           ;	.line	357; "../led.c"	Clock_ClearSysLEDTimeStatus();
000cf5   e01f     MOVP	#0x1F               	PAGESEL	_Clock_ClearSysLEDTimeStatus
000cf6   df3e     CALL	#0xf3e              	CALL	_Clock_ClearSysLEDTimeStatus
000cf7   e00c     MOVP	#0x0C               	PAGESEL	$
                                           _00118_DS_
                                           ;	.line	361; "../led.c"	if(pointer > 0)
000cf8   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
000cf9   e100     MOVB	#0x00               	BANKSEL	_pointer
000cfa   3086     ORL	R0, 0x86             	ORL	R0, _pointer
000cfb   7203     JNB	0x3, 2               	JNB	PSW, 2
000cfc   cd02     JMP	#0xd02               	JMP	_00120_DS_
                                           ;	.line	363; "../led.c"	set_PWM2L(pointer);
                                           	BANKSEL	_pointer
000cfd   0e86     MOVZ	R0, 0x86            	MOVZ	R0, _pointer
000cfe   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM2L
000cff   dc40     CALL	#0xc40              	CALL	_set_PWM2L
000d00   e00d     MOVP	#0x0D               	PAGESEL	$
000d01   cd15     JMP	#0xd15               	JMP	_00126_DS_
                                           _00120_DS_
                                           ;	.line	367; "../led.c"	pointer = 0;
                                           	BANKSEL	_pointer
000d02   0386     CLR	0x86                 	CLR	_pointer
                                           ;	.line	369; "../led.c"	set_led(2,DoorSW,Ind_Off);
000d03   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	STK01
000d04   517d     MOV	0x7d, R0             	MOV	STK01, R0
000d05   9803     MOV	R0, #0x3             	MOV	R0,# 0x03
                                           	BANKSEL	STK00
000d06   517e     MOV	0x7e, R0             	MOV	STK00, R0
000d07   9802     MOV	R0, #0x2             	MOV	R0,# 0x02
000d08   e01e     MOVP	#0x1E               	PAGESEL	_set_led
000d09   de11     CALL	#0xe11              	CALL	_set_led
000d0a   e00d     MOVP	#0x0D               	PAGESEL	$
                                           ;	.line	371; "../led.c"	break;
000d0b   cd15     JMP	#0xd15               	JMP	_00126_DS_
                                           _00122_DS_
                                           ;	.line	373; "../led.c"	set_PWM2L(80);
000d0c   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
000d0d   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM2L
000d0e   dc40     CALL	#0xc40              	CALL	_set_PWM2L
000d0f   e00d     MOVP	#0x0D               	PAGESEL	$
                                           ;	.line	374; "../led.c"	break;
000d10   cd15     JMP	#0xd15               	JMP	_00126_DS_
                                           _00123_DS_
                                           ;	.line	376; "../led.c"	set_PWM2L(0);
000d11   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
000d12   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM2L
000d13   dc40     CALL	#0xc40              	CALL	_set_PWM2L
000d14   e00d     MOVP	#0x0D               	PAGESEL	$
                                           _00126_DS_
                                           ;	.line	380; "../led.c"	}
000d15   0008     CRET
                   	CRET	
                                           func._set_led	.code
                                           _set_led	;Function start
                                           ;	.line	20; "../led.c"	void set_led(uint8_t ch,uint8_t sw,uint8_t led_status)
001e11   e100     MOVB	#0x00               	BANKSEL	r0x1005
001e12   518b     MOV	0x8b, R0             	MOV	r0x1005, R0
                                           	BANKSEL	STK00
001e13   0e7e     MOVZ	R0, 0x7e            	MOVZ	R0, STK00
                                           	BANKSEL	r0x1006
001e14   518a     MOV	0x8a, R0             	MOV	r0x1006, R0
                                           	BANKSEL	STK01
001e15   0e7d     MOVZ	R0, 0x7d            	MOVZ	R0, STK01
                                           	BANKSEL	r0x1007
001e16   5189     MOV	0x89, R0             	MOV	r0x1007, R0
                                           ;	.line	22; "../led.c"	if(ch == 1) //LED1
                                           	BANKSEL	r0x1005
001e17   0e8b     MOVZ	R0, 0x8b            	MOVZ	R0, r0x1005
001e18   a801     XOR	R0, #0x1             	XOR	R0,# 0x01
001e19   7a03     JB	0x3, 2                	JB	PSW, 2
001e1a   ce22     JMP	#0xe22               	JMP	_00002_DS_
                                           ;	.line	24; "../led.c"	led.key = sw;
                                           	BANKSEL	r0x1006
001e1b   0e8a     MOVZ	R0, 0x8a            	MOVZ	R0, r0x1006
001e1c   e101     MOVB	#0x01               	BANKSEL	_led
001e1d   51a7     MOV	0xa7, R0             	MOV	 (_led + 0), R0
                                           ;	.line	25; "../led.c"	led.status = led_status;
001e1e   e100     MOVB	#0x00               	BANKSEL	r0x1007
001e1f   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x1007
001e20   e101     MOVB	#0x01               	BANKSEL	_led
001e21   51a8     MOV	0xa8, R0             	MOV	 (_led + 1), R0
                                           _00002_DS_
                                           ;	.line	28; "../led.c"	if(ch == 2)
001e22   e100     MOVB	#0x00               	BANKSEL	r0x1005
001e23   0e8b     MOVZ	R0, 0x8b            	MOVZ	R0, r0x1005
001e24   a802     XOR	R0, #0x2             	XOR	R0,# 0x02
001e25   7a03     JB	0x3, 2                	JB	PSW, 2
001e26   ce2e     JMP	#0xe2e               	JMP	_00005_DS_
                                           ;	.line	30; "../led.c"	led2.key = sw;
                                           	BANKSEL	r0x1006
001e27   0e8a     MOVZ	R0, 0x8a            	MOVZ	R0, r0x1006
001e28   e101     MOVB	#0x01               	BANKSEL	_led2
001e29   51a5     MOV	0xa5, R0             	MOV	 (_led2 + 0), R0
                                           ;	.line	31; "../led.c"	led2.status = led_status;
001e2a   e100     MOVB	#0x00               	BANKSEL	r0x1007
001e2b   0e89     MOVZ	R0, 0x89            	MOVZ	R0, r0x1007
001e2c   e101     MOVB	#0x01               	BANKSEL	_led2
001e2d   51a6     MOV	0xa6, R0             	MOV	 (_led2 + 1), R0
                                           _00005_DS_
001e2e   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           	.type STK12, 108
                                           	.type STK11, 108
                                           	.type STK10, 108
                                           	.type STK09, 108
                                           	.type STK08, 108
                                           	.type STK07, 108
                                           	.type STK06, 108
                                           	.type STK05, 108
                                           	.type STK04, 108
                                           	.type STK03, 108
                                           	.type STK02, 108
                                           	.type STK01, 108
                                           	.type STK00, 108
                                           STARTUP	.code 0x0000
000000   0000     NOP                      	NOP
000001   e01f     MOVP	#0x1F               	PAGESEL	init_imp
000002   cf1e     JMP	#0xf1e               	JMP		init_imp
                                           INIT_IMP	.code
                                           init_imp
001f1e   e01d     MOVP	#0x1D               	PAGESEL	_startup
001f1f   dd8e     CALL	#0xd8e              	CALL	_startup
001f20   e01f     MOVP	#0x1F               	PAGESEL	__gsinit_startup
001f21   df4a     CALL	#0xf4a              	CALL	__gsinit_startup
001f22   e01b     MOVP	#0x1B               	PAGESEL	_main
001f23   cbd0     JMP	#0xbd0               	JMP		_main
                                           func._main	.code
                                           _main	;Function start
                                           ;	.line	76; "../main.c"	Init_MCU();		//系统初始化  IO口初始化 触摸初始化
001bd0   e01e     MOVP	#0x1E               	PAGESEL	_Init_MCU
001bd1   de76     CALL	#0xe76              	CALL	_Init_MCU
001bd2   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	78; "../main.c"	_CTouch_Key_Init_();	//采样去初始化基准线
001bd3   e010     MOVP	#0x10               	PAGESEL	__CTouch_Key_Init_
001bd4   d000     CALL	#0x0                	CALL	__CTouch_Key_Init_
001bd5   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	79; "../main.c"	P0_INT_init();  //初始化使能P0.5电平变化中断
001bd6   e01f     MOVP	#0x1F               	PAGESEL	_P0_INT_init
001bd7   df29     CALL	#0xf29              	CALL	_P0_INT_init
001bd8   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	80; "../main.c"	timer_init(); 	//定时器初始化
001bd9   e01f     MOVP	#0x1F               	PAGESEL	_timer_init
001bda   df11     CALL	#0xf11              	CALL	_timer_init
001bdb   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	81; "../main.c"	key_init();		//按键初始化
001bdc   e01f     MOVP	#0x1F               	PAGESEL	_key_init
001bdd   df42     CALL	#0xf42              	CALL	_key_init
001bde   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	82; "../main.c"	ADC_Init();		//ADC采样初始化
001bdf   e01e     MOVP	#0x1E               	PAGESEL	_ADC_Init
001be0   def6     CALL	#0xef6              	CALL	_ADC_Init
001be1   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	83; "../main.c"	DoorState_Init();
001be2   e01f     MOVP	#0x1F               	PAGESEL	_DoorState_Init
001be3   df46     CALL	#0xf46              	CALL	_DoorState_Init
001be4   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	84; "../main.c"	FLASH_Init();	//Flash初始化 数据读取
001be5   e017     MOVP	#0x17               	PAGESEL	_FLASH_Init
001be6   d73b     CALL	#0x73b              	CALL	_FLASH_Init
001be7   e01b     MOVP	#0x1B               	PAGESEL	$
                                           _00007_DS_
001be8   0064     CWDT                     	CWDT 
                                           ;	.line	91; "../main.c"	if(BAT_StateGet())		//ADC采样 工作电压范围内返回1
001be9   e01e     MOVP	#0x1E               	PAGESEL	_BAT_StateGet
001bea   de2f     CALL	#0xe2f              	CALL	_BAT_StateGet
001beb   e01b     MOVP	#0x1B               	PAGESEL	$
001bec   e100     MOVB	#0x00               	BANKSEL	r0x1000
001bed   5185     MOV	0x85, R0             	MOV	r0x1000, R0
001bee   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1000
001bef   3085     ORL	R0, 0x85             	ORL	R0, r0x1000
001bf0   7203     JNB	0x3, 2               	JNB	PSW, 2
001bf1   cbff     JMP	#0xbff               	JMP	_00004_DS_
                                           ;	.line	95; "../main.c"	DoorState_Deal(); //门控输入
001bf2   e016     MOVP	#0x16               	PAGESEL	_DoorState_Deal
001bf3   d656     CALL	#0x656              	CALL	_DoorState_Deal
001bf4   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	96; "../main.c"	key_deal();		//按键状态处理
001bf5   e00f     MOVP	#0x0F               	PAGESEL	_key_deal
001bf6   df90     CALL	#0xf90              	CALL	_key_deal
001bf7   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	97; "../main.c"	led_deal();		//LED灯状态处理
001bf8   e00a     MOVP	#0x0A               	PAGESEL	_led_deal
001bf9   da10     CALL	#0xa10              	CALL	_led_deal
001bfa   e01b     MOVP	#0x1B               	PAGESEL	$
                                           ;	.line	98; "../main.c"	FLASH_Deal();		//FLASH储存
001bfb   e01e     MOVP	#0x1E               	PAGESEL	_FLASH_Deal
001bfc   de9f     CALL	#0xe9f              	CALL	_FLASH_Deal
001bfd   e01b     MOVP	#0x1B               	PAGESEL	$
001bfe   cbe8     JMP	#0xbe8               	JMP	_00007_DS_
                                           _00004_DS_
                                           ;	.line	104; "../main.c"	set_PWM1L(0);
001bff   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001c00   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM1L
001c01   dc75     CALL	#0xc75              	CALL	_set_PWM1L
001c02   e01c     MOVP	#0x1C               	PAGESEL	$
                                           ;	.line	105; "../main.c"	set_PWM2L(0);
001c03   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
001c04   e01c     MOVP	#0x1C               	PAGESEL	_set_PWM2L
001c05   dc40     CALL	#0xc40              	CALL	_set_PWM2L
001c06   e01c     MOVP	#0x1C               	PAGESEL	$
001c07   cbe8     JMP	#0xbe8               	JMP	_00007_DS_
001c08   0008     CRET
                   	CRET	
                                           func._startup	.code
                                           _startup	;Function start
001d8e   e01f     MOVP	#0x1F               	MOVP #0x1F
001d8f   e100     MOVB	#0x00               	MOVB #0x00
001d90   dfff     CALL	#0xfff              	CALL #0xfff
001d91   5130     MOV	0x30, R0             	MOV 0x30, R0
001d92   ffff     NOPZ                     	NOPZ
001d93   ffff     NOPZ                     	NOPZ
001d94   dffe     CALL	#0xffe              	CALL #0xffe
001d95   5137     MOV	0x37, R0             	MOV 0x37, R0
001d96   ffff     NOPZ                     	NOPZ
001d97   ffff     NOPZ                     	NOPZ
001d98   dffd     CALL	#0xffd              	CALL #0xffd
001d99   514c     MOV	0x4c, R0             	MOV 0x4c, R0
001d9a   ffff     NOPZ                     	NOPZ
001d9b   ffff     NOPZ                     	NOPZ
001d9c   dffc     CALL	#0xffc              	CALL #0xffc
001d9d   514d     MOV	0x4d, R0             	MOV 0x4d, R0
001d9e   ffff     NOPZ                     	NOPZ
001d9f   ffff     NOPZ                     	NOPZ
001da0   dffb     CALL	#0xffb              	CALL #0xffb
001da1   512a     MOV	0x2a, R0             	MOV 0x2a, R0
001da2   ffff     NOPZ                     	NOPZ
001da3   e101     MOVB	#0x01               	MOVB #0x01
001da4   dffa     CALL	#0xffa              	CALL #0xffa
001da5   5159     MOV	0x59, R0             	MOV 0x59, R0
001da6   ffff     NOPZ                     	NOPZ
001da7   dff9     CALL	#0xff9              	CALL #0xff9
001da8   515a     MOV	0x5a, R0             	MOV 0x5a, R0
001da9   ffff     NOPZ                     	NOPZ
001daa   dff8     CALL	#0xff8              	CALL #0xff8
001dab   5165     MOV	0x65, R0             	MOV 0x65, R0
001dac   ffff     NOPZ                     	NOPZ
001dad   ffff     NOPZ                     	NOPZ
                                           	;CRET
                                           ;	.line	63; "../main.c"	OSCCTL = 0x70;
001dae   9870     MOV	R0, #0x70            	MOV	R0,# 0x70
001daf   e100     MOVB	#0x00               	BANKSEL	_OSCCTL
001db0   512f     MOV	0x2f, R0             	MOV	_OSCCTL, R0
001db1   0008     CRET
                   	CRET	
                                           	.end
                                           	.radix dec
                                           	.include "kf8a100eng.inc"
                                           func._Door_StatusGet	.code
                                           _Door_StatusGet	;Function start
                                           ;	.line	158; "../pwm.c"	return doorStatus;
001f51   e100     MOVB	#0x00               	BANKSEL	_doorStatus
001f52   0e84     MOVZ	R0, 0x84            	MOVZ	R0, _doorStatus
001f53   0008     CRET
                   	CRET	
                                           func._DoorState_Deal	.code
                                           _DoorState_Deal	;Function start
                                           ;	.line	24; "../pwm.c"	duty_get = get_pwmduty();
001656   e01f     MOVP	#0x1F               	PAGESEL	_get_pwmduty
001657   df18     CALL	#0xf18              	CALL	_get_pwmduty
001658   e016     MOVP	#0x16               	PAGESEL	$
001659   e100     MOVB	#0x00               	BANKSEL	r0x1001
00165a   5183     MOV	0x83, R0             	MOV	r0x1001, R0
                                           ;	.line	25; "../pwm.c"	for (i = 0; i < 5; i++)
00165b   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1002
00165c   5182     MOV	0x82, R0             	MOV	r0x1002, R0
                                           	BANKSEL	r0x1003
00165d   0381     CLR	0x81                 	CLR	r0x1003
                                           _00075_DS_
                                           ;	.line	27; "../pwm.c"	if(get_pwmduty() == duty_get)
00165e   e01f     MOVP	#0x1F               	PAGESEL	_get_pwmduty
00165f   df18     CALL	#0xf18              	CALL	_get_pwmduty
001660   e016     MOVP	#0x16               	PAGESEL	$
001661   e100     MOVB	#0x00               	BANKSEL	r0x1004
001662   5180     MOV	0x80, R0             	MOV	r0x1004, R0
                                           	BANKSEL	r0x1001
001663   0e83     MOVZ	R0, 0x83            	MOVZ	R0, r0x1001
                                           ;	.line	28; "../pwm.c"	flag++;
                                           	BANKSEL	r0x1004
001664   1880     XOR	R0, 0x80             	XOR	R0, r0x1004
001665   7a03     JB	0x3, 2                	JB	PSW, 2
001666   c668     JMP	#0x668               	JMP	_00112_DS_
                                           	BANKSEL	r0x1003
001667   0b81     INC	0x81                 	INC	r0x1003
                                           _00112_DS_
                                           	BANKSEL	r0x1002
001668   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
                                           	BANKSEL	r0x1004
001669   5180     MOV	0x80, R0             	MOV	r0x1004, R0
                                           	BANKSEL	r0x1004
00166a   0780     DEC	0x80                 	DEC	r0x1004
                                           	BANKSEL	r0x1004
00166b   0e80     MOVZ	R0, 0x80            	MOVZ	R0, r0x1004
                                           	BANKSEL	r0x1002
00166c   5182     MOV	0x82, R0             	MOV	r0x1002, R0
                                           ;	.line	25; "../pwm.c"	for (i = 0; i < 5; i++)
00166d   9800     MOV	R0, #0x0             	MOV	R0,# 0x00
                                           	BANKSEL	r0x1002
00166e   3082     ORL	R0, 0x82             	ORL	R0, r0x1002
00166f   7a03     JB	0x3, 2                	JB	PSW, 2
001670   c65e     JMP	#0x65e               	JMP	_00075_DS_
                                           ;	.line	31; "../pwm.c"	if(flag >= 5) //6次获取同样值
001671   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	r0x1003
001672   3881     SUB	R0, 0x81             	SUB	R0, r0x1003
001673   7803     JB	0x3, 0                	JB	PSW, 0
001674   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           ;	.line	33; "../pwm.c"	if(duty_get >= 95)
001675   985f     MOV	R0, #0x5f            	MOV	R0,# 0x5f
                                           	BANKSEL	r0x1001
001676   3883     SUB	R0, 0x83             	SUB	R0, r0x1001
001677   7803     JB	0x3, 0                	JB	PSW, 0
001678   c67c     JMP	#0x67c               	JMP	_00015_DS_
                                           ;	.line	34; "../pwm.c"	duty = 100;
001679   9864     MOV	R0, #0x64            	MOV	R0,# 0x64
                                           	BANKSEL	r0x1002
00167a   5182     MOV	0x82, R0             	MOV	r0x1002, R0
00167b   c693     JMP	#0x693               	JMP	_00016_DS_
                                           _00015_DS_
                                           ;	.line	36; "../pwm.c"	if(duty_get >= 80)
00167c   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
                                           	BANKSEL	r0x1001
00167d   3883     SUB	R0, 0x83             	SUB	R0, r0x1001
00167e   7803     JB	0x3, 0                	JB	PSW, 0
00167f   c683     JMP	#0x683               	JMP	_00012_DS_
                                           ;	.line	37; "../pwm.c"	duty = 80;
001680   9850     MOV	R0, #0x50            	MOV	R0,# 0x50
                                           	BANKSEL	r0x1002
001681   5182     MOV	0x82, R0             	MOV	r0x1002, R0
001682   c693     JMP	#0x693               	JMP	_00016_DS_
                                           _00012_DS_
                                           ;	.line	39; "../pwm.c"	if(duty_get >= 60)
001683   983c     MOV	R0, #0x3c            	MOV	R0,# 0x3c
                                           	BANKSEL	r0x1001
001684   3883     SUB	R0, 0x83             	SUB	R0, r0x1001
001685   7803     JB	0x3, 0                	JB	PSW, 0
001686   c68a     JMP	#0x68a               	JMP	_00009_DS_
                                           ;	.line	40; "../pwm.c"	duty = 60;
001687   983c     MOV	R0, #0x3c            	MOV	R0,# 0x3c
                                           	BANKSEL	r0x1002
001688   5182     MOV	0x82, R0             	MOV	r0x1002, R0
001689   c693     JMP	#0x693               	JMP	_00016_DS_
                                           _00009_DS_
                                           ;	.line	42; "../pwm.c"	if(duty_get >= 40)
00168a   9828     MOV	R0, #0x28            	MOV	R0,# 0x28
                                           	BANKSEL	r0x1001
00168b   3883     SUB	R0, 0x83             	SUB	R0, r0x1001
00168c   7803     JB	0x3, 0                	JB	PSW, 0
00168d   c691     JMP	#0x691               	JMP	_00006_DS_
                                           ;	.line	43; "../pwm.c"	duty = 40;
00168e   9828     MOV	R0, #0x28            	MOV	R0,# 0x28
                                           	BANKSEL	r0x1002
00168f   5182     MOV	0x82, R0             	MOV	r0x1002, R0
001690   c693     JMP	#0x693               	JMP	_00016_DS_
                                           _00006_DS_
                                           ;	.line	45; "../pwm.c"	duty = 20;
001691   9814     MOV	R0, #0x14            	MOV	R0,# 0x14
                                           	BANKSEL	r0x1002
001692   5182     MOV	0x82, R0             	MOV	r0x1002, R0
                                           _00016_DS_
                                           ;	.line	47; "../pwm.c"	switch(doorStatus)
001693   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_doorStatus
001694   3884     SUB	R0, 0x84             	SUB	R0, _doorStatus
001695   7803     JB	0x3, 0                	JB	PSW, 0
001696   c73a     JMP	#0x73a               	JMP	_00076_DS_
001697   9818     MOV	R0, #0x18            	MOV	R0,# 0x18
                                           	BANKSEL	_doorStatus
001698   3884     SUB	R0, 0x84             	SUB	R0, _doorStatus
001699   7003     JNB	0x3, 0               	JNB	PSW, 0
00169a   c73a     JMP	#0x73a               	JMP	_00076_DS_
00169b   98fb     MOV	R0, #0xfb            	MOV	R0,# 0xfb
                                           	BANKSEL	_doorStatus
00169c   2084     ADD	R0, 0x84             	ADD	R0, _doorStatus
                                           	BANKSEL	r0x1001
00169d   5183     MOV	0x83, R0             	MOV	r0x1001, R0
00169e   9816     MOV	R0, #0x16            	MOV	R0,#high _00109_DS_
00169f   510a     MOV	0xa, R0              	MOV	PCH, R0
0016a0   98a5     MOV	R0, #0xa5            	MOV	R0,#_00109_DS_
                                           	BANKSEL	r0x1001
0016a1   2083     ADD	R0, 0x83             	ADD	R0, r0x1001
0016a2   7003     JNB	0x3, 0               	JNB	PSW, 0
0016a3   0b0a     INC	0xa                  	INC	PCH
0016a4   5102     MOV	0x2, R0              	MOV	PCL, R0
                                           _00109_DS_
0016a5   c6b8     JMP	#0x6b8               	JMP	_00017_DS_
0016a6   c6cd     JMP	#0x6cd               	JMP	_00026_DS_
0016a7   c6e2     JMP	#0x6e2               	JMP	_00035_DS_
0016a8   c6f7     JMP	#0x6f7               	JMP	_00044_DS_
0016a9   c705     JMP	#0x705               	JMP	_00050_DS_
0016aa   c713     JMP	#0x713               	JMP	_00056_DS_
0016ab   c716     JMP	#0x716               	JMP	_00057_DS_
0016ac   c719     JMP	#0x719               	JMP	_00058_DS_
0016ad   c722     JMP	#0x722               	JMP	_00061_DS_
0016ae   c71f     JMP	#0x71f               	JMP	_00060_DS_
0016af   c71c     JMP	#0x71c               	JMP	_00059_DS_
0016b0   c72b     JMP	#0x72b               	JMP	_00064_DS_
0016b1   c728     JMP	#0x728               	JMP	_00063_DS_
0016b2   c725     JMP	#0x725               	JMP	_00062_DS_
0016b3   c731     JMP	#0x731               	JMP	_00066_DS_
0016b4   c73a     JMP	#0x73a               	JMP	_00076_DS_
0016b5   c72e     JMP	#0x72e               	JMP	_00065_DS_
0016b6   c734     JMP	#0x734               	JMP	_00067_DS_
0016b7   c737     JMP	#0x737               	JMP	_00068_DS_
                                           _00017_DS_
                                           ;	.line	50; "../pwm.c"	if(duty == 40)
                                           	BANKSEL	r0x1002
0016b8   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016b9   a828     XOR	R0, #0x28            	XOR	R0,# 0x28
0016ba   7a03     JB	0x3, 2                	JB	PSW, 2
0016bb   c6bf     JMP	#0x6bf               	JMP	_00024_DS_
                                           ;	.line	52; "../pwm.c"	doorStatus = PWM_20_2_40;
0016bc   980a     MOV	R0, #0xa             	MOV	R0,# 0x0a
                                           	BANKSEL	_doorStatus
0016bd   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016be   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00024_DS_
                                           ;	.line	54; "../pwm.c"	else if(duty == 80)
                                           	BANKSEL	r0x1002
0016bf   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016c0   a850     XOR	R0, #0x50            	XOR	R0,# 0x50
0016c1   7a03     JB	0x3, 2                	JB	PSW, 2
0016c2   c6c6     JMP	#0x6c6               	JMP	_00021_DS_
                                           ;	.line	56; "../pwm.c"	doorStatus = PWM_20_2_80;
0016c3   980b     MOV	R0, #0xb             	MOV	R0,# 0x0b
                                           	BANKSEL	_doorStatus
0016c4   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016c5   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00021_DS_
                                           ;	.line	58; "../pwm.c"	else if(duty == 100)
                                           	BANKSEL	r0x1002
0016c6   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016c7   a864     XOR	R0, #0x64            	XOR	R0,# 0x64
0016c8   7a03     JB	0x3, 2                	JB	PSW, 2
0016c9   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           ;	.line	60; "../pwm.c"	doorStatus = PWM_20_2_100;
0016ca   980c     MOV	R0, #0xc             	MOV	R0,# 0x0c
                                           	BANKSEL	_doorStatus
0016cb   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	62; "../pwm.c"	break;
0016cc   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00026_DS_
                                           ;	.line	64; "../pwm.c"	if(duty == 20)
                                           	BANKSEL	r0x1002
0016cd   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016ce   a814     XOR	R0, #0x14            	XOR	R0,# 0x14
0016cf   7a03     JB	0x3, 2                	JB	PSW, 2
0016d0   c6d4     JMP	#0x6d4               	JMP	_00033_DS_
                                           ;	.line	66; "../pwm.c"	doorStatus = PWM_40_2_20;
0016d1   980f     MOV	R0, #0xf             	MOV	R0,# 0x0f
                                           	BANKSEL	_doorStatus
0016d2   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016d3   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00033_DS_
                                           ;	.line	68; "../pwm.c"	else if(duty == 60)
                                           	BANKSEL	r0x1002
0016d4   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016d5   a83c     XOR	R0, #0x3c            	XOR	R0,# 0x3c
0016d6   7a03     JB	0x3, 2                	JB	PSW, 2
0016d7   c6db     JMP	#0x6db               	JMP	_00030_DS_
                                           ;	.line	70; "../pwm.c"	doorStatus = PWM_40_2_60;
0016d8   980e     MOV	R0, #0xe             	MOV	R0,# 0x0e
                                           	BANKSEL	_doorStatus
0016d9   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016da   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00030_DS_
                                           ;	.line	72; "../pwm.c"	else if(duty == 100)
                                           	BANKSEL	r0x1002
0016db   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016dc   a864     XOR	R0, #0x64            	XOR	R0,# 0x64
0016dd   7a03     JB	0x3, 2                	JB	PSW, 2
0016de   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           ;	.line	74; "../pwm.c"	doorStatus = PWM_40_2_100;
0016df   980d     MOV	R0, #0xd             	MOV	R0,# 0x0d
                                           	BANKSEL	_doorStatus
0016e0   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	76; "../pwm.c"	break;
0016e1   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00035_DS_
                                           ;	.line	78; "../pwm.c"	if(duty == 20)
                                           	BANKSEL	r0x1002
0016e2   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016e3   a814     XOR	R0, #0x14            	XOR	R0,# 0x14
0016e4   7a03     JB	0x3, 2                	JB	PSW, 2
0016e5   c6e9     JMP	#0x6e9               	JMP	_00042_DS_
                                           ;	.line	80; "../pwm.c"	doorStatus = PWM_60_2_20;
0016e6   9812     MOV	R0, #0x12            	MOV	R0,# 0x12
                                           	BANKSEL	_doorStatus
0016e7   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016e8   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00042_DS_
                                           ;	.line	82; "../pwm.c"	else if(duty == 40)
                                           	BANKSEL	r0x1002
0016e9   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016ea   a828     XOR	R0, #0x28            	XOR	R0,# 0x28
0016eb   7a03     JB	0x3, 2                	JB	PSW, 2
0016ec   c6f0     JMP	#0x6f0               	JMP	_00039_DS_
                                           ;	.line	84; "../pwm.c"	doorStatus = PWM_60_2_40;
0016ed   9811     MOV	R0, #0x11            	MOV	R0,# 0x11
                                           	BANKSEL	_doorStatus
0016ee   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016ef   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00039_DS_
                                           ;	.line	86; "../pwm.c"	else if(duty == 80)
                                           	BANKSEL	r0x1002
0016f0   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016f1   a850     XOR	R0, #0x50            	XOR	R0,# 0x50
0016f2   7a03     JB	0x3, 2                	JB	PSW, 2
0016f3   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           ;	.line	88; "../pwm.c"	doorStatus = PWM_60_2_80;
0016f4   9810     MOV	R0, #0x10            	MOV	R0,# 0x10
                                           	BANKSEL	_doorStatus
0016f5   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	90; "../pwm.c"	break;
0016f6   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00044_DS_
                                           ;	.line	92; "../pwm.c"	if(duty == 20)
                                           	BANKSEL	r0x1002
0016f7   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016f8   a814     XOR	R0, #0x14            	XOR	R0,# 0x14
0016f9   7a03     JB	0x3, 2                	JB	PSW, 2
0016fa   c6fe     JMP	#0x6fe               	JMP	_00048_DS_
                                           ;	.line	94; "../pwm.c"	doorStatus = PWM_80_2_20;
0016fb   9815     MOV	R0, #0x15            	MOV	R0,# 0x15
                                           	BANKSEL	_doorStatus
0016fc   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
0016fd   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00048_DS_
                                           ;	.line	96; "../pwm.c"	else if(duty == 60)
                                           	BANKSEL	r0x1002
0016fe   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
0016ff   a83c     XOR	R0, #0x3c            	XOR	R0,# 0x3c
001700   7a03     JB	0x3, 2                	JB	PSW, 2
001701   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           ;	.line	98; "../pwm.c"	doorStatus = PWM_80_2_60;
001702   9813     MOV	R0, #0x13            	MOV	R0,# 0x13
                                           	BANKSEL	_doorStatus
001703   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	100; "../pwm.c"	break;
001704   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00050_DS_
                                           ;	.line	102; "../pwm.c"	if(duty == 20)
                                           	BANKSEL	r0x1002
001705   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
001706   a814     XOR	R0, #0x14            	XOR	R0,# 0x14
001707   7a03     JB	0x3, 2                	JB	PSW, 2
001708   c70c     JMP	#0x70c               	JMP	_00054_DS_
                                           ;	.line	104; "../pwm.c"	doorStatus = PWM_100_2_20;
001709   9816     MOV	R0, #0x16            	MOV	R0,# 0x16
                                           	BANKSEL	_doorStatus
00170a   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
00170b   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00054_DS_
                                           ;	.line	106; "../pwm.c"	else if(duty == 40)
                                           	BANKSEL	r0x1002
00170c   0e82     MOVZ	R0, 0x82            	MOVZ	R0, r0x1002
00170d   a828     XOR	R0, #0x28            	XOR	R0,# 0x28
00170e   7a03     JB	0x3, 2                	JB	PSW, 2
00170f   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           ;	.line	108; "../pwm.c"	doorStatus = PWM_100_2_40;
001710   9817     MOV	R0, #0x17            	MOV	R0,# 0x17
                                           	BANKSEL	_doorStatus
001711   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	110; "../pwm.c"	break;
001712   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00056_DS_
                                           ;	.line	112; "../pwm.c"	doorStatus = PWM_40;
001713   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	_doorStatus
001714   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	113; "../pwm.c"	break;
001715   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00057_DS_
                                           ;	.line	115; "../pwm.c"	doorStatus = PWM_80;
001716   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	_doorStatus
001717   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	116; "../pwm.c"	break;
001718   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00058_DS_
                                           ;	.line	118; "../pwm.c"	doorStatus = PWM_100;
001719   9809     MOV	R0, #0x9             	MOV	R0,# 0x09
                                           	BANKSEL	_doorStatus
00171a   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	119; "../pwm.c"	break;
00171b   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00059_DS_
                                           ;	.line	121; "../pwm.c"	doorStatus = PWM_20;
00171c   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_doorStatus
00171d   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	122; "../pwm.c"	break;
00171e   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00060_DS_
                                           ;	.line	124; "../pwm.c"	doorStatus = PWM_60;
00171f   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	_doorStatus
001720   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	125; "../pwm.c"	break;
001721   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00061_DS_
                                           ;	.line	127; "../pwm.c"	doorStatus = PWM_100;
001722   9809     MOV	R0, #0x9             	MOV	R0,# 0x09
                                           	BANKSEL	_doorStatus
001723   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	128; "../pwm.c"	break;
001724   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00062_DS_
                                           ;	.line	130; "../pwm.c"	doorStatus = PWM_20;
001725   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_doorStatus
001726   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	131; "../pwm.c"	break;
001727   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00063_DS_
                                           ;	.line	133; "../pwm.c"	doorStatus = PWM_40;
001728   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	_doorStatus
001729   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	134; "../pwm.c"	break;
00172a   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00064_DS_
                                           ;	.line	136; "../pwm.c"	doorStatus = PWM_80;
00172b   9808     MOV	R0, #0x8             	MOV	R0,# 0x08
                                           	BANKSEL	_doorStatus
00172c   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	137; "../pwm.c"	break;
00172d   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00065_DS_
                                           ;	.line	139; "../pwm.c"	doorStatus = PWM_20;
00172e   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_doorStatus
00172f   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	140; "../pwm.c"	break;
001730   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00066_DS_
                                           ;	.line	142; "../pwm.c"	doorStatus = PWM_60;
001731   9807     MOV	R0, #0x7             	MOV	R0,# 0x07
                                           	BANKSEL	_doorStatus
001732   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	143; "../pwm.c"	break;
001733   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00067_DS_
                                           ;	.line	145; "../pwm.c"	doorStatus = PWM_20;
001734   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
                                           	BANKSEL	_doorStatus
001735   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	146; "../pwm.c"	break;
001736   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00068_DS_
                                           ;	.line	148; "../pwm.c"	doorStatus = PWM_40;
001737   9806     MOV	R0, #0x6             	MOV	R0,# 0x06
                                           	BANKSEL	_doorStatus
001738   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
                                           ;	.line	149; "../pwm.c"	break;
001739   c73a     JMP	#0x73a               	JMP	_00076_DS_
                                           _00076_DS_
                                           ;	.line	152; "../pwm.c"	}
00173a   0008     CRET
                   	CRET	
                                           func._DoorState_Init	.code
                                           _DoorState_Init	;Function start
                                           ;	.line	14; "../pwm.c"	doorStatus = PWM_20;
001f46   9805     MOV	R0, #0x5             	MOV	R0,# 0x05
001f47   e100     MOVB	#0x00               	BANKSEL	_doorStatus
001f48   5184     MOV	0x84, R0             	MOV	_doorStatus, R0
001f49   0008     CRET
                   	CRET	
                                           	.end
                                           func.__SCS_Prees_On_Mode_UpdateBaselines
001239   e100     MOVB	#0x00              
00123a   51d3     MOV	0xd3, R0            
00123b   6003     CLR	0x3, 0              
00123c   12d3     RLCR	0xd3               
00123d   51d2     MOV	0xd2, R0            
00123e   98f7     MOV	R0, #0xf7           
00123f   21d2     ADD	0xd2, R0            
001240   52d2     MOV	R1, 0xd2            
001241   e101     MOVB	#0x01              
001242   f708     LD	R0, [R1]             
001243   e100     MOVB	#0x00              
001244   51d0     MOV	0xd0, R0            
001245   ff11     INC	R1                  
001246   e101     MOVB	#0x01              
001247   f708     LD	R0, [R1]             
001248   e100     MOVB	#0x00              
001249   51cf     MOV	0xcf, R0            
00124a   e101     MOVB	#0x01              
00124b   0ebe     MOVZ	R0, 0xbe           
00124c   e100     MOVB	#0x00              
00124d   38cf     SUB	R0, 0xcf            
00124e   7a03     JB	0x3, 2               
00124f   c254     JMP	#0x254              
001250   e101     MOVB	#0x01              
001251   0ebd     MOVZ	R0, 0xbd           
001252   e100     MOVB	#0x00              
001253   38d0     SUB	R0, 0xd0            
001254   7803     JB	0x3, 0               
001255   c29f     JMP	#0x29f              
001256   6003     CLR	0x3, 0              
001257   12d3     RLCR	0xd3               
001258   51d2     MOV	0xd2, R0            
001259   98e7     MOV	R0, #0xe7           
00125a   21d2     ADD	0xd2, R0            
00125b   9805     MOV	R0, #0x5            
00125c   52d2     MOV	R1, 0xd2            
00125d   e101     MOVB	#0x01              
00125e   f741     ST	[R1], R0             
00125f   ff11     INC	R1                  
001260   9800     MOV	R0, #0x0            
001261   f741     ST	[R1], R0             
001262   6003     CLR	0x3, 0              
001263   e100     MOVB	#0x00              
001264   12d3     RLCR	0xd3               
001265   51d2     MOV	0xd2, R0            
001266   98b0     MOV	R0, #0xb0           
001267   21d2     ADD	0xd2, R0            
001268   6003     CLR	0x3, 0              
001269   12d3     RLCR	0xd3               
00126a   51d0     MOV	0xd0, R0            
00126b   98a0     MOV	R0, #0xa0           
00126c   21d0     ADD	0xd0, R0            
00126d   52d0     MOV	R1, 0xd0            
00126e   e102     MOVB	#0x02              
00126f   f708     LD	R0, [R1]             
001270   e100     MOVB	#0x00              
001271   51ce     MOV	0xce, R0            
001272   ff11     INC	R1                  
001273   e102     MOVB	#0x02              
001274   f708     LD	R0, [R1]             
001275   e100     MOVB	#0x00              
001276   51cd     MOV	0xcd, R0            
001277   0ece     MOVZ	R0, 0xce           
001278   52d2     MOV	R1, 0xd2            
001279   e102     MOVB	#0x02              
00127a   f741     ST	[R1], R0             
00127b   ff11     INC	R1                  
00127c   e100     MOVB	#0x00              
00127d   0ecd     MOVZ	R0, 0xcd           
00127e   e102     MOVB	#0x02              
00127f   f741     ST	[R1], R0             
001280   6003     CLR	0x3, 0              
001281   e100     MOVB	#0x00              
001282   12d3     RLCR	0xd3               
001283   51d2     MOV	0xd2, R0            
001284   98ef     MOV	R0, #0xef           
001285   21d2     ADD	0xd2, R0            
001286   6003     CLR	0x3, 0              
001287   12d3     RLCR	0xd3               
001288   51d0     MOV	0xd0, R0            
001289   98a0     MOV	R0, #0xa0           
00128a   21d0     ADD	0xd0, R0            
00128b   52d0     MOV	R1, 0xd0            
00128c   e102     MOVB	#0x02              
00128d   f708     LD	R0, [R1]             
00128e   e100     MOVB	#0x00              
00128f   51ce     MOV	0xce, R0            
001290   ff11     INC	R1                  
001291   e102     MOVB	#0x02              
001292   f708     LD	R0, [R1]             
001293   e100     MOVB	#0x00              
001294   51cd     MOV	0xcd, R0            
001295   0ece     MOVZ	R0, 0xce           
001296   52d2     MOV	R1, 0xd2            
001297   e101     MOVB	#0x01              
001298   f741     ST	[R1], R0             
001299   ff11     INC	R1                  
00129a   e100     MOVB	#0x00              
00129b   0ecd     MOVZ	R0, 0xcd           
00129c   e101     MOVB	#0x01              
00129d   f741     ST	[R1], R0             
00129e   c360     JMP	#0x360              
00129f   6003     CLR	0x3, 0              
0012a0   12d3     RLCR	0xd3               
0012a1   51d2     MOV	0xd2, R0            
0012a2   98a0     MOV	R0, #0xa0           
0012a3   21d2     ADD	0xd2, R0            
0012a4   52d2     MOV	R1, 0xd2            
0012a5   e102     MOVB	#0x02              
0012a6   f708     LD	R0, [R1]             
0012a7   e100     MOVB	#0x00              
0012a8   51d0     MOV	0xd0, R0            
0012a9   ff11     INC	R1                  
0012aa   e102     MOVB	#0x02              
0012ab   f708     LD	R0, [R1]             
0012ac   e100     MOVB	#0x00              
0012ad   51cf     MOV	0xcf, R0            
0012ae   6003     CLR	0x3, 0              
0012af   12d3     RLCR	0xd3               
0012b0   51d2     MOV	0xd2, R0            
0012b1   98b0     MOV	R0, #0xb0           
0012b2   21d2     ADD	0xd2, R0            
0012b3   52d2     MOV	R1, 0xd2            
0012b4   e102     MOVB	#0x02              
0012b5   f708     LD	R0, [R1]             
0012b6   e100     MOVB	#0x00              
0012b7   51ce     MOV	0xce, R0            
0012b8   ff11     INC	R1                  
0012b9   e102     MOVB	#0x02              
0012ba   f708     LD	R0, [R1]             
0012bb   e100     MOVB	#0x00              
0012bc   51cd     MOV	0xcd, R0            
0012bd   0ecf     MOVZ	R0, 0xcf           
0012be   38cd     SUB	R0, 0xcd            
0012bf   7a03     JB	0x3, 2               
0012c0   c2c3     JMP	#0x2c3              
0012c1   0ed0     MOVZ	R0, 0xd0           
0012c2   38ce     SUB	R0, 0xce            
0012c3   7003     JNB	0x3, 0              
0012c4   c2fe     JMP	#0x2fe              
0012c5   9801     MOV	R0, #0x1            
0012c6   51d2     MOV	0xd2, R0            
0012c7   9800     MOV	R0, #0x0            
0012c8   51d1     MOV	0xd1, R0            
0012c9   0ed3     MOVZ	R0, 0xd3           
0012ca   ff10     INC	R0                  
0012cb   c2d0     JMP	#0x2d0              
0012cc   6003     CLR	0x3, 0              
0012cd   e100     MOVB	#0x00              
0012ce   13d2     RLC	0xd2                
0012cf   13d1     RLC	0xd1                
0012d0   ff58     DECJZ	R0                
0012d1   c2cc     JMP	#0x2cc              
0012d2   0ed2     MOVZ	R0, 0xd2           
0012d3   51d0     MOV	0xd0, R0            
0012d4   e101     MOVB	#0x01              
0012d5   28c9     AND	R0, 0xc9            
0012d6   e100     MOVB	#0x00              
0012d7   51d2     MOV	0xd2, R0            
0012d8   0ed1     MOVZ	R0, 0xd1           
0012d9   51cf     MOV	0xcf, R0            
0012da   e101     MOVB	#0x01              
0012db   28ca     AND	R0, 0xca            
0012dc   e100     MOVB	#0x00              
0012dd   51d1     MOV	0xd1, R0            
0012de   0ed2     MOVZ	R0, 0xd2           
0012df   30d1     ORL	R0, 0xd1            
0012e0   7a03     JB	0x3, 2               
0012e1   c2fe     JMP	#0x2fe              
0012e2   6003     CLR	0x3, 0              
0012e3   12d3     RLCR	0xd3               
0012e4   51d2     MOV	0xd2, R0            
0012e5   98b0     MOV	R0, #0xb0           
0012e6   21d2     ADD	0xd2, R0            
0012e7   52d2     MOV	R1, 0xd2            
0012e8   e102     MOVB	#0x02              
0012e9   f708     LD	R0, [R1]             
0012ea   e100     MOVB	#0x00              
0012eb   51d0     MOV	0xd0, R0            
0012ec   ff11     INC	R1                  
0012ed   e102     MOVB	#0x02              
0012ee   f708     LD	R0, [R1]             
0012ef   e100     MOVB	#0x00              
0012f0   51cf     MOV	0xcf, R0            
0012f1   0bd0     INC	0xd0                
0012f2   7a03     JB	0x3, 2               
0012f3   c2f5     JMP	#0x2f5              
0012f4   0bcf     INC	0xcf                
0012f5   0ed0     MOVZ	R0, 0xd0           
0012f6   52d2     MOV	R1, 0xd2            
0012f7   e102     MOVB	#0x02              
0012f8   f741     ST	[R1], R0             
0012f9   ff11     INC	R1                  
0012fa   e100     MOVB	#0x00              
0012fb   0ecf     MOVZ	R0, 0xcf           
0012fc   e102     MOVB	#0x02              
0012fd   f741     ST	[R1], R0             
0012fe   6003     CLR	0x3, 0              
0012ff   e100     MOVB	#0x00              
001300   12d3     RLCR	0xd3               
001301   51d2     MOV	0xd2, R0            
001302   98a0     MOV	R0, #0xa0           
001303   21d2     ADD	0xd2, R0            
001304   52d2     MOV	R1, 0xd2            
001305   e102     MOVB	#0x02              
001306   f708     LD	R0, [R1]             
001307   e100     MOVB	#0x00              
001308   51d0     MOV	0xd0, R0            
001309   ff11     INC	R1                  
00130a   e102     MOVB	#0x02              
00130b   f708     LD	R0, [R1]             
00130c   e100     MOVB	#0x00              
00130d   51cf     MOV	0xcf, R0            
00130e   6003     CLR	0x3, 0              
00130f   12d3     RLCR	0xd3               
001310   51d2     MOV	0xd2, R0            
001311   98b0     MOV	R0, #0xb0           
001312   21d2     ADD	0xd2, R0            
001313   52d2     MOV	R1, 0xd2            
001314   e102     MOVB	#0x02              
001315   f708     LD	R0, [R1]             
001316   e100     MOVB	#0x00              
001317   51ce     MOV	0xce, R0            
001318   ff11     INC	R1                  
001319   e102     MOVB	#0x02              
00131a   f708     LD	R0, [R1]             
00131b   e100     MOVB	#0x00              
00131c   51cd     MOV	0xcd, R0            
00131d   0ecd     MOVZ	R0, 0xcd           
00131e   38cf     SUB	R0, 0xcf            
00131f   7a03     JB	0x3, 2               
001320   c323     JMP	#0x323              
001321   0ece     MOVZ	R0, 0xce           
001322   38d0     SUB	R0, 0xd0            
001323   7003     JNB	0x3, 0              
001324   c360     JMP	#0x360              
001325   9801     MOV	R0, #0x1            
001326   51d2     MOV	0xd2, R0            
001327   9800     MOV	R0, #0x0            
001328   51d1     MOV	0xd1, R0            
001329   0ed3     MOVZ	R0, 0xd3           
00132a   ff10     INC	R0                  
00132b   c330     JMP	#0x330              
00132c   6003     CLR	0x3, 0              
00132d   e100     MOVB	#0x00              
00132e   13d2     RLC	0xd2                
00132f   13d1     RLC	0xd1                
001330   ff58     DECJZ	R0                
001331   c32c     JMP	#0x32c              
001332   0ed2     MOVZ	R0, 0xd2           
001333   51d0     MOV	0xd0, R0            
001334   e101     MOVB	#0x01              
001335   28c9     AND	R0, 0xc9            
001336   e100     MOVB	#0x00              
001337   51d2     MOV	0xd2, R0            
001338   0ed1     MOVZ	R0, 0xd1           
001339   51cf     MOV	0xcf, R0            
00133a   e101     MOVB	#0x01              
00133b   28ca     AND	R0, 0xca            
00133c   e100     MOVB	#0x00              
00133d   51d1     MOV	0xd1, R0            
00133e   0ed2     MOVZ	R0, 0xd2           
00133f   30d1     ORL	R0, 0xd1            
001340   7a03     JB	0x3, 2               
001341   c360     JMP	#0x360              
001342   6003     CLR	0x3, 0              
001343   12d3     RLCR	0xd3               
001344   51d2     MOV	0xd2, R0            
001345   50d2     MOV	R0, 0xd2            
001346   80b0     ADD	R0, #0xb0           
001347   51d3     MOV	0xd3, R0            
001348   52d3     MOV	R1, 0xd3            
001349   e102     MOVB	#0x02              
00134a   f708     LD	R0, [R1]             
00134b   e100     MOVB	#0x00              
00134c   51d2     MOV	0xd2, R0            
00134d   ff11     INC	R1                  
00134e   e102     MOVB	#0x02              
00134f   f708     LD	R0, [R1]             
001350   e100     MOVB	#0x00              
001351   51d0     MOV	0xd0, R0            
001352   98ff     MOV	R0, #0xff           
001353   21d2     ADD	0xd2, R0            
001354   7003     JNB	0x3, 0              
001355   c357     JMP	#0x357              
001356   07d0     DEC	0xd0                
001357   0ed2     MOVZ	R0, 0xd2           
001358   52d3     MOV	R1, 0xd3            
001359   e102     MOVB	#0x02              
00135a   f741     ST	[R1], R0             
00135b   ff11     INC	R1                  
00135c   e100     MOVB	#0x00              
00135d   0ed0     MOVZ	R0, 0xd0           
00135e   e102     MOVB	#0x02              
00135f   f741     ST	[R1], R0             
001360   0008     CRET
                  
                                           func.__SCS_Protect_Mode_UpdateBaselines
001361   e100     MOVB	#0x00              
001362   03da     CLR	0xda                
001363   03d9     CLR	0xd9                
001364   03d8     CLR	0xd8                
001365   0ebf     MOVZ	R0, 0xbf           
001366   38d8     SUB	R0, 0xd8            
001367   7003     JNB	0x3, 0              
001368   c386     JMP	#0x386              
001369   6003     CLR	0x3, 0              
00136a   12d8     RLCR	0xd8               
00136b   51d7     MOV	0xd7, R0            
00136c   98f7     MOV	R0, #0xf7           
00136d   21d7     ADD	0xd7, R0            
00136e   52d7     MOV	R1, 0xd7            
00136f   e101     MOVB	#0x01              
001370   f708     LD	R0, [R1]             
001371   e100     MOVB	#0x00              
001372   51d5     MOV	0xd5, R0            
001373   ff11     INC	R1                  
001374   e101     MOVB	#0x01              
001375   f708     LD	R0, [R1]             
001376   e100     MOVB	#0x00              
001377   51d4     MOV	0xd4, R0            
001378   9800     MOV	R0, #0x0            
001379   38d4     SUB	R0, 0xd4            
00137a   7a03     JB	0x3, 2               
00137b   c37e     JMP	#0x37e              
00137c   9832     MOV	R0, #0x32           
00137d   38d5     SUB	R0, 0xd5            
00137e   7803     JB	0x3, 0               
00137f   c384     JMP	#0x384              
001380   0bda     INC	0xda                
001381   7a03     JB	0x3, 2               
001382   c384     JMP	#0x384              
001383   0bd9     INC	0xd9                
001384   0bd8     INC	0xd8                
001385   c365     JMP	#0x365              
001386   0ebf     MOVZ	R0, 0xbf           
001387   51d8     MOV	0xd8, R0            
001388   03d7     CLR	0xd7                
001389   0ed8     MOVZ	R0, 0xd8           
00138a   18da     XOR	R0, 0xda            
00138b   7a03     JB	0x3, 2               
00138c   c3ef     JMP	#0x3ef              
00138d   0ed7     MOVZ	R0, 0xd7           
00138e   18d9     XOR	R0, 0xd9            
00138f   7a03     JB	0x3, 2               
001390   c3ef     JMP	#0x3ef              
001391   03da     CLR	0xda                
001392   0ebf     MOVZ	R0, 0xbf           
001393   38da     SUB	R0, 0xda            
001394   7003     JNB	0x3, 0              
001395   c3ee     JMP	#0x3ee              
001396   6003     CLR	0x3, 0              
001397   12da     RLCR	0xda               
001398   51d9     MOV	0xd9, R0            
001399   98f7     MOV	R0, #0xf7           
00139a   21d9     ADD	0xd9, R0            
00139b   9800     MOV	R0, #0x0            
00139c   52d9     MOV	R1, 0xd9            
00139d   e101     MOVB	#0x01              
00139e   f741     ST	[R1], R0             
00139f   ff11     INC	R1                  
0013a0   9800     MOV	R0, #0x0            
0013a1   f741     ST	[R1], R0             
0013a2   6003     CLR	0x3, 0              
0013a3   e100     MOVB	#0x00              
0013a4   12da     RLCR	0xda               
0013a5   51d9     MOV	0xd9, R0            
0013a6   98b0     MOV	R0, #0xb0           
0013a7   21d9     ADD	0xd9, R0            
0013a8   6003     CLR	0x3, 0              
0013a9   12da     RLCR	0xda               
0013aa   51d7     MOV	0xd7, R0            
0013ab   98a0     MOV	R0, #0xa0           
0013ac   21d7     ADD	0xd7, R0            
0013ad   52d7     MOV	R1, 0xd7            
0013ae   e102     MOVB	#0x02              
0013af   f708     LD	R0, [R1]             
0013b0   e100     MOVB	#0x00              
0013b1   51d5     MOV	0xd5, R0            
0013b2   ff11     INC	R1                  
0013b3   e102     MOVB	#0x02              
0013b4   f708     LD	R0, [R1]             
0013b5   e100     MOVB	#0x00              
0013b6   51d4     MOV	0xd4, R0            
0013b7   0ed5     MOVZ	R0, 0xd5           
0013b8   52d9     MOV	R1, 0xd9            
0013b9   e102     MOVB	#0x02              
0013ba   f741     ST	[R1], R0             
0013bb   ff11     INC	R1                  
0013bc   e100     MOVB	#0x00              
0013bd   0ed4     MOVZ	R0, 0xd4           
0013be   e102     MOVB	#0x02              
0013bf   f741     ST	[R1], R0             
0013c0   6003     CLR	0x3, 0              
0013c1   e100     MOVB	#0x00              
0013c2   12da     RLCR	0xda               
0013c3   51d9     MOV	0xd9, R0            
0013c4   98ef     MOV	R0, #0xef           
0013c5   21d9     ADD	0xd9, R0            
0013c6   6003     CLR	0x3, 0              
0013c7   12da     RLCR	0xda               
0013c8   51d7     MOV	0xd7, R0            
0013c9   98a0     MOV	R0, #0xa0           
0013ca   21d7     ADD	0xd7, R0            
0013cb   52d7     MOV	R1, 0xd7            
0013cc   e102     MOVB	#0x02              
0013cd   f708     LD	R0, [R1]             
0013ce   e100     MOVB	#0x00              
0013cf   51d5     MOV	0xd5, R0            
0013d0   ff11     INC	R1                  
0013d1   e102     MOVB	#0x02              
0013d2   f708     LD	R0, [R1]             
0013d3   e100     MOVB	#0x00              
0013d4   51d4     MOV	0xd4, R0            
0013d5   0ed5     MOVZ	R0, 0xd5           
0013d6   52d9     MOV	R1, 0xd9            
0013d7   e101     MOVB	#0x01              
0013d8   f741     ST	[R1], R0             
0013d9   ff11     INC	R1                  
0013da   e100     MOVB	#0x00              
0013db   0ed4     MOVZ	R0, 0xd4           
0013dc   e101     MOVB	#0x01              
0013dd   f741     ST	[R1], R0             
0013de   6003     CLR	0x3, 0              
0013df   e100     MOVB	#0x00              
0013e0   12da     RLCR	0xda               
0013e1   51d9     MOV	0xd9, R0            
0013e2   98e7     MOV	R0, #0xe7           
0013e3   21d9     ADD	0xd9, R0            
0013e4   9800     MOV	R0, #0x0            
0013e5   52d9     MOV	R1, 0xd9            
0013e6   e101     MOVB	#0x01              
0013e7   f741     ST	[R1], R0             
0013e8   ff11     INC	R1                  
0013e9   9800     MOV	R0, #0x0            
0013ea   f741     ST	[R1], R0             
0013eb   e100     MOVB	#0x00              
0013ec   0bda     INC	0xda                
0013ed   c392     JMP	#0x392              
0013ee   c47d     JMP	#0x47d              
0013ef   03da     CLR	0xda                
0013f0   0ebf     MOVZ	R0, 0xbf           
0013f1   38da     SUB	R0, 0xda            
0013f2   7003     JNB	0x3, 0              
0013f3   c47d     JMP	#0x47d              
0013f4   6003     CLR	0x3, 0              
0013f5   12da     RLCR	0xda               
0013f6   51d9     MOV	0xd9, R0            
0013f7   98a0     MOV	R0, #0xa0           
0013f8   21d9     ADD	0xd9, R0            
0013f9   52d9     MOV	R1, 0xd9            
0013fa   e102     MOVB	#0x02              
0013fb   f708     LD	R0, [R1]             
0013fc   e100     MOVB	#0x00              
0013fd   51d7     MOV	0xd7, R0            
0013fe   ff11     INC	R1                  
0013ff   e102     MOVB	#0x02              
001400   f708     LD	R0, [R1]             
001401   e100     MOVB	#0x00              
001402   51d6     MOV	0xd6, R0            
001403   6003     CLR	0x3, 0              
001404   12da     RLCR	0xda               
001405   51d9     MOV	0xd9, R0            
001406   98b0     MOV	R0, #0xb0           
001407   21d9     ADD	0xd9, R0            
001408   52d9     MOV	R1, 0xd9            
001409   e102     MOVB	#0x02              
00140a   f708     LD	R0, [R1]             
00140b   e100     MOVB	#0x00              
00140c   51d5     MOV	0xd5, R0            
00140d   ff11     INC	R1                  
00140e   e102     MOVB	#0x02              
00140f   f708     LD	R0, [R1]             
001410   e100     MOVB	#0x00              
001411   51d4     MOV	0xd4, R0            
001412   0ed6     MOVZ	R0, 0xd6           
001413   38d4     SUB	R0, 0xd4            
001414   7a03     JB	0x3, 2               
001415   c418     JMP	#0x418              
001416   0ed7     MOVZ	R0, 0xd7           
001417   38d5     SUB	R0, 0xd5            
001418   7003     JNB	0x3, 0              
001419   c437     JMP	#0x437              
00141a   6003     CLR	0x3, 0              
00141b   12da     RLCR	0xda               
00141c   51d9     MOV	0xd9, R0            
00141d   98b0     MOV	R0, #0xb0           
00141e   21d9     ADD	0xd9, R0            
00141f   52d9     MOV	R1, 0xd9            
001420   e102     MOVB	#0x02              
001421   f708     LD	R0, [R1]             
001422   e100     MOVB	#0x00              
001423   51d7     MOV	0xd7, R0            
001424   ff11     INC	R1                  
001425   e102     MOVB	#0x02              
001426   f708     LD	R0, [R1]             
001427   e100     MOVB	#0x00              
001428   51d6     MOV	0xd6, R0            
001429   0bd7     INC	0xd7                
00142a   7a03     JB	0x3, 2               
00142b   c42d     JMP	#0x42d              
00142c   0bd6     INC	0xd6                
00142d   0ed7     MOVZ	R0, 0xd7           
00142e   52d9     MOV	R1, 0xd9            
00142f   e102     MOVB	#0x02              
001430   f741     ST	[R1], R0             
001431   ff11     INC	R1                  
001432   e100     MOVB	#0x00              
001433   0ed6     MOVZ	R0, 0xd6           
001434   e102     MOVB	#0x02              
001435   f741     ST	[R1], R0             
001436   c47a     JMP	#0x47a              
001437   6003     CLR	0x3, 0              
001438   12da     RLCR	0xda               
001439   51d9     MOV	0xd9, R0            
00143a   98a0     MOV	R0, #0xa0           
00143b   21d9     ADD	0xd9, R0            
00143c   52d9     MOV	R1, 0xd9            
00143d   e102     MOVB	#0x02              
00143e   f708     LD	R0, [R1]             
00143f   e100     MOVB	#0x00              
001440   51d7     MOV	0xd7, R0            
001441   ff11     INC	R1                  
001442   e102     MOVB	#0x02              
001443   f708     LD	R0, [R1]             
001444   e100     MOVB	#0x00              
001445   51d6     MOV	0xd6, R0            
001446   6003     CLR	0x3, 0              
001447   12da     RLCR	0xda               
001448   51d9     MOV	0xd9, R0            
001449   98b0     MOV	R0, #0xb0           
00144a   21d9     ADD	0xd9, R0            
00144b   52d9     MOV	R1, 0xd9            
00144c   e102     MOVB	#0x02              
00144d   f708     LD	R0, [R1]             
00144e   e100     MOVB	#0x00              
00144f   51d5     MOV	0xd5, R0            
001450   ff11     INC	R1                  
001451   e102     MOVB	#0x02              
001452   f708     LD	R0, [R1]             
001453   e100     MOVB	#0x00              
001454   51d4     MOV	0xd4, R0            
001455   0ed4     MOVZ	R0, 0xd4           
001456   38d6     SUB	R0, 0xd6            
001457   7a03     JB	0x3, 2               
001458   c45b     JMP	#0x45b              
001459   0ed5     MOVZ	R0, 0xd5           
00145a   38d7     SUB	R0, 0xd7            
00145b   7003     JNB	0x3, 0              
00145c   c47a     JMP	#0x47a              
00145d   6003     CLR	0x3, 0              
00145e   12da     RLCR	0xda               
00145f   51d9     MOV	0xd9, R0            
001460   98b0     MOV	R0, #0xb0           
001461   21d9     ADD	0xd9, R0            
001462   52d9     MOV	R1, 0xd9            
001463   e102     MOVB	#0x02              
001464   f708     LD	R0, [R1]             
001465   e100     MOVB	#0x00              
001466   51d7     MOV	0xd7, R0            
001467   ff11     INC	R1                  
001468   e102     MOVB	#0x02              
001469   f708     LD	R0, [R1]             
00146a   e100     MOVB	#0x00              
00146b   51d6     MOV	0xd6, R0            
00146c   98ff     MOV	R0, #0xff           
00146d   21d7     ADD	0xd7, R0            
00146e   7003     JNB	0x3, 0              
00146f   c471     JMP	#0x471              
001470   07d6     DEC	0xd6                
001471   0ed7     MOVZ	R0, 0xd7           
001472   52d9     MOV	R1, 0xd9            
001473   e102     MOVB	#0x02              
001474   f741     ST	[R1], R0             
001475   ff11     INC	R1                  
001476   e100     MOVB	#0x00              
001477   0ed6     MOVZ	R0, 0xd6           
001478   e102     MOVB	#0x02              
001479   f741     ST	[R1], R0             
00147a   e100     MOVB	#0x00              
00147b   0bda     INC	0xda                
00147c   c3f0     JMP	#0x3f0              
00147d   0008     CRET
                  
                                           func.__SCS_Calculate_Channel_Steady_Change
00156d   e100     MOVB	#0x00              
00156e   03e2     CLR	0xe2                
00156f   0ebf     MOVZ	R0, 0xbf           
001570   38e2     SUB	R0, 0xe2            
001571   7003     JNB	0x3, 0              
001572   c655     JMP	#0x655              
001573   6003     CLR	0x3, 0              
001574   12e2     RLCR	0xe2               
001575   51e1     MOV	0xe1, R0            
001576   98a0     MOV	R0, #0xa0           
001577   21e1     ADD	0xe1, R0            
001578   52e1     MOV	R1, 0xe1            
001579   e102     MOVB	#0x02              
00157a   f708     LD	R0, [R1]             
00157b   e100     MOVB	#0x00              
00157c   51df     MOV	0xdf, R0            
00157d   ff11     INC	R1                  
00157e   e102     MOVB	#0x02              
00157f   f708     LD	R0, [R1]             
001580   e100     MOVB	#0x00              
001581   51de     MOV	0xde, R0            
001582   6003     CLR	0x3, 0              
001583   12e2     RLCR	0xe2               
001584   51e1     MOV	0xe1, R0            
001585   98ef     MOV	R0, #0xef           
001586   21e1     ADD	0xe1, R0            
001587   52e1     MOV	R1, 0xe1            
001588   e101     MOVB	#0x01              
001589   f708     LD	R0, [R1]             
00158a   e100     MOVB	#0x00              
00158b   51dd     MOV	0xdd, R0            
00158c   ff11     INC	R1                  
00158d   e101     MOVB	#0x01              
00158e   f708     LD	R0, [R1]             
00158f   e100     MOVB	#0x00              
001590   51dc     MOV	0xdc, R0            
001591   985c     MOV	R0, #0x5c           
001592   20e2     ADD	R0, 0xe2            
001593   51e1     MOV	0xe1, R0            
001594   981f     MOV	R0, #0x1f           
001595   51e0     MOV	0xe0, R0            
001596   0208     CLR	R0                  
001597   7003     JNB	0x3, 0              
001598   ff10     INC	R0                  
001599   7203     JNB	0x3, 2              
00159a   c59c     JMP	#0x59c              
00159b   21e0     ADD	0xe0, R0            
00159c   52e0     MOV	R1, 0xe0            
00159d   50e1     MOV	R0, 0xe1            
00159e   e01f     MOVP	#0x1F              
00159f   df60     CALL	#0xf60             
0015a0   e015     MOVP	#0x15              
0015a1   e100     MOVB	#0x00              
0015a2   51db     MOV	0xdb, R0            
0015a3   0edb     MOVZ	R0, 0xdb           
0015a4   51e1     MOV	0xe1, R0            
0015a5   03e0     CLR	0xe0                
0015a6   50e1     MOV	R0, 0xe1            
0015a7   21dd     ADD	0xdd, R0            
0015a8   9800     MOV	R0, #0x0            
0015a9   7003     JNB	0x3, 0              
0015aa   ff10     INC	R0                  
0015ab   7203     JNB	0x3, 2              
0015ac   c5ae     JMP	#0x5ae              
0015ad   21dc     ADD	0xdc, R0            
0015ae   0ede     MOVZ	R0, 0xde           
0015af   38dc     SUB	R0, 0xdc            
0015b0   7a03     JB	0x3, 2               
0015b1   c5b4     JMP	#0x5b4              
0015b2   0edf     MOVZ	R0, 0xdf           
0015b3   38dd     SUB	R0, 0xdd            
0015b4   7803     JB	0x3, 0               
0015b5   c646     JMP	#0x646              
0015b6   6003     CLR	0x3, 0              
0015b7   12e2     RLCR	0xe2               
0015b8   51e1     MOV	0xe1, R0            
0015b9   98a0     MOV	R0, #0xa0           
0015ba   21e1     ADD	0xe1, R0            
0015bb   52e1     MOV	R1, 0xe1            
0015bc   e102     MOVB	#0x02              
0015bd   f708     LD	R0, [R1]             
0015be   e100     MOVB	#0x00              
0015bf   51df     MOV	0xdf, R0            
0015c0   ff11     INC	R1                  
0015c1   e102     MOVB	#0x02              
0015c2   f708     LD	R0, [R1]             
0015c3   e100     MOVB	#0x00              
0015c4   51de     MOV	0xde, R0            
0015c5   6003     CLR	0x3, 0              
0015c6   12e2     RLCR	0xe2               
0015c7   51e1     MOV	0xe1, R0            
0015c8   98ef     MOV	R0, #0xef           
0015c9   21e1     ADD	0xe1, R0            
0015ca   52e1     MOV	R1, 0xe1            
0015cb   e101     MOVB	#0x01              
0015cc   f708     LD	R0, [R1]             
0015cd   e100     MOVB	#0x00              
0015ce   51dd     MOV	0xdd, R0            
0015cf   ff11     INC	R1                  
0015d0   e101     MOVB	#0x01              
0015d1   f708     LD	R0, [R1]             
0015d2   e100     MOVB	#0x00              
0015d3   51dc     MOV	0xdc, R0            
0015d4   985c     MOV	R0, #0x5c           
0015d5   20e2     ADD	R0, 0xe2            
0015d6   51e1     MOV	0xe1, R0            
0015d7   981f     MOV	R0, #0x1f           
0015d8   51e0     MOV	0xe0, R0            
0015d9   0208     CLR	R0                  
0015da   7003     JNB	0x3, 0              
0015db   ff10     INC	R0                  
0015dc   7203     JNB	0x3, 2              
0015dd   c5df     JMP	#0x5df              
0015de   21e0     ADD	0xe0, R0            
0015df   52e0     MOV	R1, 0xe0            
0015e0   50e1     MOV	R0, 0xe1            
0015e1   e01f     MOVP	#0x1F              
0015e2   df60     CALL	#0xf60             
0015e3   e015     MOVP	#0x15              
0015e4   e100     MOVB	#0x00              
0015e5   51db     MOV	0xdb, R0            
0015e6   03e0     CLR	0xe0                
0015e7   0edb     MOVZ	R0, 0xdb           
0015e8   51e1     MOV	0xe1, R0            
0015e9   39dd     SUB	0xdd, R0            
0015ea   9800     MOV	R0, #0x0            
0015eb   7803     JB	0x3, 0               
0015ec   ff10     INC	R0                  
0015ed   7203     JNB	0x3, 2              
0015ee   c5f0     JMP	#0x5f0              
0015ef   39dc     SUB	0xdc, R0            
0015f0   0edc     MOVZ	R0, 0xdc           
0015f1   38de     SUB	R0, 0xde            
0015f2   7a03     JB	0x3, 2               
0015f3   c5f6     JMP	#0x5f6              
0015f4   0edd     MOVZ	R0, 0xdd           
0015f5   38df     SUB	R0, 0xdf            
0015f6   7803     JB	0x3, 0               
0015f7   c639     JMP	#0x639              
0015f8   6003     CLR	0x3, 0              
0015f9   12e2     RLCR	0xe2               
0015fa   51e1     MOV	0xe1, R0            
0015fb   98f7     MOV	R0, #0xf7           
0015fc   21e1     ADD	0xe1, R0            
0015fd   52e1     MOV	R1, 0xe1            
0015fe   e101     MOVB	#0x01              
0015ff   f708     LD	R0, [R1]             
001600   e100     MOVB	#0x00              
001601   51df     MOV	0xdf, R0            
001602   ff11     INC	R1                  
001603   e101     MOVB	#0x01              
001604   f708     LD	R0, [R1]             
001605   e100     MOVB	#0x00              
001606   51de     MOV	0xde, R0            
001607   0bdf     INC	0xdf                
001608   7a03     JB	0x3, 2               
001609   c60b     JMP	#0x60b              
00160a   0bde     INC	0xde                
00160b   0edf     MOVZ	R0, 0xdf           
00160c   52e1     MOV	R1, 0xe1            
00160d   e101     MOVB	#0x01              
00160e   f741     ST	[R1], R0             
00160f   ff11     INC	R1                  
001610   e100     MOVB	#0x00              
001611   0ede     MOVZ	R0, 0xde           
001612   e101     MOVB	#0x01              
001613   f741     ST	[R1], R0             
001614   6003     CLR	0x3, 0              
001615   e100     MOVB	#0x00              
001616   12e2     RLCR	0xe2               
001617   51e1     MOV	0xe1, R0            
001618   98f7     MOV	R0, #0xf7           
001619   21e1     ADD	0xe1, R0            
00161a   52e1     MOV	R1, 0xe1            
00161b   e101     MOVB	#0x01              
00161c   f708     LD	R0, [R1]             
00161d   e100     MOVB	#0x00              
00161e   51df     MOV	0xdf, R0            
00161f   ff11     INC	R1                  
001620   e101     MOVB	#0x01              
001621   f708     LD	R0, [R1]             
001622   e100     MOVB	#0x00              
001623   51de     MOV	0xde, R0            
001624   9807     MOV	R0, #0x7            
001625   38de     SUB	R0, 0xde            
001626   7a03     JB	0x3, 2               
001627   c62a     JMP	#0x62a              
001628   98d1     MOV	R0, #0xd1           
001629   38df     SUB	R0, 0xdf            
00162a   7803     JB	0x3, 0               
00162b   c652     JMP	#0x652              
00162c   6003     CLR	0x3, 0              
00162d   12e2     RLCR	0xe2               
00162e   51e1     MOV	0xe1, R0            
00162f   98f7     MOV	R0, #0xf7           
001630   21e1     ADD	0xe1, R0            
001631   98d0     MOV	R0, #0xd0           
001632   52e1     MOV	R1, 0xe1            
001633   e101     MOVB	#0x01              
001634   f741     ST	[R1], R0             
001635   ff11     INC	R1                  
001636   9807     MOV	R0, #0x7            
001637   f741     ST	[R1], R0             
001638   c652     JMP	#0x652              
001639   6003     CLR	0x3, 0              
00163a   12e2     RLCR	0xe2               
00163b   51e1     MOV	0xe1, R0            
00163c   98f7     MOV	R0, #0xf7           
00163d   21e1     ADD	0xe1, R0            
00163e   9800     MOV	R0, #0x0            
00163f   52e1     MOV	R1, 0xe1            
001640   e101     MOVB	#0x01              
001641   f741     ST	[R1], R0             
001642   ff11     INC	R1                  
001643   9800     MOV	R0, #0x0            
001644   f741     ST	[R1], R0             
001645   c652     JMP	#0x652              
001646   6003     CLR	0x3, 0              
001647   12e2     RLCR	0xe2               
001648   51e1     MOV	0xe1, R0            
001649   98f7     MOV	R0, #0xf7           
00164a   21e1     ADD	0xe1, R0            
00164b   9800     MOV	R0, #0x0            
00164c   52e1     MOV	R1, 0xe1            
00164d   e101     MOVB	#0x01              
00164e   f741     ST	[R1], R0             
00164f   ff11     INC	R1                  
001650   9800     MOV	R0, #0x0            
001651   f741     ST	[R1], R0             
001652   e100     MOVB	#0x00              
001653   0be2     INC	0xe2                
001654   c56f     JMP	#0x56f              
001655   0008     CRET
                  
                                           func.__SCS_Is_Multi_Channel_Up_Change
001883   e100     MOVB	#0x00              
001884   03ec     CLR	0xec                
001885   03eb     CLR	0xeb                
001886   0ebf     MOVZ	R0, 0xbf           
001887   38eb     SUB	R0, 0xeb            
001888   7003     JNB	0x3, 0              
001889   c900     JMP	#0x900              
00188a   6003     CLR	0x3, 0              
00188b   12eb     RLCR	0xeb               
00188c   51ea     MOV	0xea, R0            
00188d   98a0     MOV	R0, #0xa0           
00188e   21ea     ADD	0xea, R0            
00188f   52ea     MOV	R1, 0xea            
001890   e102     MOVB	#0x02              
001891   f708     LD	R0, [R1]             
001892   e100     MOVB	#0x00              
001893   51e8     MOV	0xe8, R0            
001894   ff11     INC	R1                  
001895   e102     MOVB	#0x02              
001896   f708     LD	R0, [R1]             
001897   e100     MOVB	#0x00              
001898   51e7     MOV	0xe7, R0            
001899   6003     CLR	0x3, 0              
00189a   12eb     RLCR	0xeb               
00189b   51ea     MOV	0xea, R0            
00189c   98b0     MOV	R0, #0xb0           
00189d   21ea     ADD	0xea, R0            
00189e   52ea     MOV	R1, 0xea            
00189f   e102     MOVB	#0x02              
0018a0   f708     LD	R0, [R1]             
0018a1   e100     MOVB	#0x00              
0018a2   51e6     MOV	0xe6, R0            
0018a3   ff11     INC	R1                  
0018a4   e102     MOVB	#0x02              
0018a5   f708     LD	R0, [R1]             
0018a6   e100     MOVB	#0x00              
0018a7   51e5     MOV	0xe5, R0            
0018a8   9802     MOV	R0, #0x2            
0018a9   517c     MOV	0x7c, R0            
0018aa   9800     MOV	R0, #0x0            
0018ab   517d     MOV	0x7d, R0            
0018ac   0eeb     MOVZ	R0, 0xeb           
0018ad   517e     MOV	0x7e, R0            
0018ae   9800     MOV	R0, #0x0            
0018af   e01e     MOVP	#0x1E              
0018b0   de4a     CALL	#0xe4a             
0018b1   e018     MOVP	#0x18              
0018b2   e100     MOVB	#0x00              
0018b3   51e9     MOV	0xe9, R0            
0018b4   507e     MOV	R0, 0x7e            
0018b5   51ea     MOV	0xea, R0            
0018b6   983a     MOV	R0, #0x3a           
0018b7   21ea     ADD	0xea, R0            
0018b8   981f     MOV	R0, #0x1f           
0018b9   88ff     AND	R0, #0xff           
0018ba   7003     JNB	0x3, 0              
0018bb   ff10     INC	R0                  
0018bc   7203     JNB	0x3, 2              
0018bd   c8bf     JMP	#0x8bf              
0018be   21e9     ADD	0xe9, R0            
0018bf   52e9     MOV	R1, 0xe9            
0018c0   50ea     MOV	R0, 0xea            
0018c1   e01f     MOVP	#0x1F              
0018c2   df60     CALL	#0xf60             
0018c3   e018     MOVP	#0x18              
0018c4   e100     MOVB	#0x00              
0018c5   51e4     MOV	0xe4, R0            
0018c6   52e9     MOV	R1, 0xe9            
0018c7   50ea     MOV	R0, 0xea            
0018c8   8001     ADD	R0, #0x1            
0018c9   7003     JNB	0x3, 0              
0018ca   ff11     INC	R1                  
0018cb   e01f     MOVP	#0x1F              
0018cc   df60     CALL	#0xf60             
0018cd   e018     MOVP	#0x18              
0018ce   e100     MOVB	#0x00              
0018cf   51e3     MOV	0xe3, R0            
0018d0   50e4     MOV	R0, 0xe4            
0018d1   21e6     ADD	0xe6, R0            
0018d2   0ee3     MOVZ	R0, 0xe3           
0018d3   7003     JNB	0x3, 0              
0018d4   ff10     INC	R0                  
0018d5   7203     JNB	0x3, 2              
0018d6   c8d8     JMP	#0x8d8              
0018d7   21e5     ADD	0xe5, R0            
0018d8   0ee7     MOVZ	R0, 0xe7           
0018d9   38e5     SUB	R0, 0xe5            
0018da   7a03     JB	0x3, 2               
0018db   c8de     JMP	#0x8de              
0018dc   0ee8     MOVZ	R0, 0xe8           
0018dd   38e6     SUB	R0, 0xe6            
0018de   7003     JNB	0x3, 0              
0018df   c8fd     JMP	#0x8fd              
0018e0   0bec     INC	0xec                
0018e1   6003     CLR	0x3, 0              
0018e2   12eb     RLCR	0xeb               
0018e3   51ea     MOV	0xea, R0            
0018e4   98b0     MOV	R0, #0xb0           
0018e5   21ea     ADD	0xea, R0            
0018e6   52ea     MOV	R1, 0xea            
0018e7   e102     MOVB	#0x02              
0018e8   f708     LD	R0, [R1]             
0018e9   e100     MOVB	#0x00              
0018ea   51e8     MOV	0xe8, R0            
0018eb   ff11     INC	R1                  
0018ec   e102     MOVB	#0x02              
0018ed   f708     LD	R0, [R1]             
0018ee   e100     MOVB	#0x00              
0018ef   51e7     MOV	0xe7, R0            
0018f0   0be8     INC	0xe8                
0018f1   7a03     JB	0x3, 2               
0018f2   c8f4     JMP	#0x8f4              
0018f3   0be7     INC	0xe7                
0018f4   0ee8     MOVZ	R0, 0xe8           
0018f5   52ea     MOV	R1, 0xea            
0018f6   e102     MOVB	#0x02              
0018f7   f741     ST	[R1], R0             
0018f8   ff11     INC	R1                  
0018f9   e100     MOVB	#0x00              
0018fa   0ee7     MOVZ	R0, 0xe7           
0018fb   e102     MOVB	#0x02              
0018fc   f741     ST	[R1], R0             
0018fd   e100     MOVB	#0x00              
0018fe   0beb     INC	0xeb                
0018ff   c886     JMP	#0x886              
001900   0eec     MOVZ	R0, 0xec           
001901   0008     CRET
                  
                                           func.__SCS_UpdateBaselines
000d16   e100     MOVB	#0x00              
000d17   51f5     MOV	0xf5, R0            
000d18   03f4     CLR	0xf4                
000d19   6003     CLR	0x3, 0              
000d1a   12f5     RLCR	0xf5               
000d1b   51f3     MOV	0xf3, R0            
000d1c   98a0     MOV	R0, #0xa0           
000d1d   21f3     ADD	0xf3, R0            
000d1e   52f3     MOV	R1, 0xf3            
000d1f   e102     MOVB	#0x02              
000d20   f708     LD	R0, [R1]             
000d21   e100     MOVB	#0x00              
000d22   51f1     MOV	0xf1, R0            
000d23   ff11     INC	R1                  
000d24   e102     MOVB	#0x02              
000d25   f708     LD	R0, [R1]             
000d26   e100     MOVB	#0x00              
000d27   51f0     MOV	0xf0, R0            
000d28   6003     CLR	0x3, 0              
000d29   12f5     RLCR	0xf5               
000d2a   51f3     MOV	0xf3, R0            
000d2b   98b0     MOV	R0, #0xb0           
000d2c   21f3     ADD	0xf3, R0            
000d2d   52f3     MOV	R1, 0xf3            
000d2e   e102     MOVB	#0x02              
000d2f   f708     LD	R0, [R1]             
000d30   e100     MOVB	#0x00              
000d31   51ef     MOV	0xef, R0            
000d32   ff11     INC	R1                  
000d33   e102     MOVB	#0x02              
000d34   f708     LD	R0, [R1]             
000d35   e100     MOVB	#0x00              
000d36   51ee     MOV	0xee, R0            
000d37   9858     MOV	R0, #0x58           
000d38   20f5     ADD	R0, 0xf5            
000d39   51f3     MOV	0xf3, R0            
000d3a   981f     MOV	R0, #0x1f           
000d3b   51f2     MOV	0xf2, R0            
000d3c   0208     CLR	R0                  
000d3d   7003     JNB	0x3, 0              
000d3e   ff10     INC	R0                  
000d3f   7203     JNB	0x3, 2              
000d40   cd42     JMP	#0xd42              
000d41   21f2     ADD	0xf2, R0            
000d42   52f2     MOV	R1, 0xf2            
000d43   50f3     MOV	R0, 0xf3            
000d44   e01f     MOVP	#0x1F              
000d45   df60     CALL	#0xf60             
000d46   e00d     MOVP	#0x0D              
000d47   e100     MOVB	#0x00              
000d48   51ed     MOV	0xed, R0            
000d49   0eed     MOVZ	R0, 0xed           
000d4a   51f3     MOV	0xf3, R0            
000d4b   03f2     CLR	0xf2                
000d4c   50f3     MOV	R0, 0xf3            
000d4d   21ef     ADD	0xef, R0            
000d4e   9800     MOV	R0, #0x0            
000d4f   7003     JNB	0x3, 0              
000d50   ff10     INC	R0                  
000d51   7203     JNB	0x3, 2              
000d52   cd54     JMP	#0xd54              
000d53   21ee     ADD	0xee, R0            
000d54   0ef0     MOVZ	R0, 0xf0           
000d55   38ee     SUB	R0, 0xee            
000d56   7a03     JB	0x3, 2               
000d57   cd5a     JMP	#0xd5a              
000d58   0ef1     MOVZ	R0, 0xf1           
000d59   38ef     SUB	R0, 0xef            
000d5a   7803     JB	0x3, 0               
000d5b   cda0     JMP	#0xda0              
000d5c   6003     CLR	0x3, 0              
000d5d   12f5     RLCR	0xf5               
000d5e   51f3     MOV	0xf3, R0            
000d5f   98a0     MOV	R0, #0xa0           
000d60   21f3     ADD	0xf3, R0            
000d61   52f3     MOV	R1, 0xf3            
000d62   e102     MOVB	#0x02              
000d63   f708     LD	R0, [R1]             
000d64   e100     MOVB	#0x00              
000d65   51f1     MOV	0xf1, R0            
000d66   ff11     INC	R1                  
000d67   e102     MOVB	#0x02              
000d68   f708     LD	R0, [R1]             
000d69   e100     MOVB	#0x00              
000d6a   51f0     MOV	0xf0, R0            
000d6b   6003     CLR	0x3, 0              
000d6c   12f5     RLCR	0xf5               
000d6d   51f3     MOV	0xf3, R0            
000d6e   98b0     MOV	R0, #0xb0           
000d6f   21f3     ADD	0xf3, R0            
000d70   52f3     MOV	R1, 0xf3            
000d71   e102     MOVB	#0x02              
000d72   f708     LD	R0, [R1]             
000d73   e100     MOVB	#0x00              
000d74   51ef     MOV	0xef, R0            
000d75   ff11     INC	R1                  
000d76   e102     MOVB	#0x02              
000d77   f708     LD	R0, [R1]             
000d78   e100     MOVB	#0x00              
000d79   51ee     MOV	0xee, R0            
000d7a   985a     MOV	R0, #0x5a           
000d7b   20f5     ADD	R0, 0xf5            
000d7c   51f3     MOV	0xf3, R0            
000d7d   981f     MOV	R0, #0x1f           
000d7e   51f2     MOV	0xf2, R0            
000d7f   0208     CLR	R0                  
000d80   7003     JNB	0x3, 0              
000d81   ff10     INC	R0                  
000d82   7203     JNB	0x3, 2              
000d83   cd85     JMP	#0xd85              
000d84   21f2     ADD	0xf2, R0            
000d85   52f2     MOV	R1, 0xf2            
000d86   50f3     MOV	R0, 0xf3            
000d87   e01f     MOVP	#0x1F              
000d88   df60     CALL	#0xf60             
000d89   e00d     MOVP	#0x0D              
000d8a   e100     MOVB	#0x00              
000d8b   51ed     MOV	0xed, R0            
000d8c   03f2     CLR	0xf2                
000d8d   0eed     MOVZ	R0, 0xed           
000d8e   51f3     MOV	0xf3, R0            
000d8f   39ef     SUB	0xef, R0            
000d90   9800     MOV	R0, #0x0            
000d91   7803     JB	0x3, 0               
000d92   ff10     INC	R0                  
000d93   7203     JNB	0x3, 2              
000d94   cd96     JMP	#0xd96              
000d95   39ee     SUB	0xee, R0            
000d96   0eee     MOVZ	R0, 0xee           
000d97   38f0     SUB	R0, 0xf0            
000d98   7a03     JB	0x3, 2               
000d99   cd9c     JMP	#0xd9c              
000d9a   0eef     MOVZ	R0, 0xef           
000d9b   38f1     SUB	R0, 0xf1            
000d9c   7803     JB	0x3, 0               
000d9d   cda0     JMP	#0xda0              
000d9e   9801     MOV	R0, #0x1            
000d9f   51f4     MOV	0xf4, R0            
000da0   9800     MOV	R0, #0x0            
000da1   30f4     ORL	R0, 0xf4            
000da2   7203     JNB	0x3, 2              
000da3   ce6f     JMP	#0xe6f              
000da4   6003     CLR	0x3, 0              
000da5   12f5     RLCR	0xf5               
000da6   51f4     MOV	0xf4, R0            
000da7   98b0     MOV	R0, #0xb0           
000da8   21f4     ADD	0xf4, R0            
000da9   6003     CLR	0x3, 0              
000daa   12f5     RLCR	0xf5               
000dab   51f2     MOV	0xf2, R0            
000dac   98a0     MOV	R0, #0xa0           
000dad   21f2     ADD	0xf2, R0            
000dae   52f2     MOV	R1, 0xf2            
000daf   e102     MOVB	#0x02              
000db0   f708     LD	R0, [R1]             
000db1   e100     MOVB	#0x00              
000db2   51f0     MOV	0xf0, R0            
000db3   ff11     INC	R1                  
000db4   e102     MOVB	#0x02              
000db5   f708     LD	R0, [R1]             
000db6   e100     MOVB	#0x00              
000db7   51ef     MOV	0xef, R0            
000db8   6003     CLR	0x3, 0              
000db9   12f5     RLCR	0xf5               
000dba   51f2     MOV	0xf2, R0            
000dbb   98b0     MOV	R0, #0xb0           
000dbc   21f2     ADD	0xf2, R0            
000dbd   52f2     MOV	R1, 0xf2            
000dbe   e102     MOVB	#0x02              
000dbf   f708     LD	R0, [R1]             
000dc0   e100     MOVB	#0x00              
000dc1   51ee     MOV	0xee, R0            
000dc2   ff11     INC	R1                  
000dc3   e102     MOVB	#0x02              
000dc4   f708     LD	R0, [R1]             
000dc5   e100     MOVB	#0x00              
000dc6   51ed     MOV	0xed, R0            
000dc7   9802     MOV	R0, #0x2            
000dc8   517b     MOV	0x7b, R0            
000dc9   0eee     MOVZ	R0, 0xee           
000dca   517c     MOV	0x7c, R0            
000dcb   0eed     MOVZ	R0, 0xed           
000dcc   517d     MOV	0x7d, R0            
000dcd   0ef0     MOVZ	R0, 0xf0           
000dce   517e     MOV	0x7e, R0            
000dcf   0eef     MOVZ	R0, 0xef           
000dd0   e01c     MOVP	#0x1C              
000dd1   dcdf     CALL	#0xcdf             
000dd2   e00d     MOVP	#0x0D              
000dd3   e100     MOVB	#0x00              
000dd4   51f1     MOV	0xf1, R0            
000dd5   0e7e     MOVZ	R0, 0x7e           
000dd6   51f2     MOV	0xf2, R0            
000dd7   0ef2     MOVZ	R0, 0xf2           
000dd8   52f4     MOV	R1, 0xf4            
000dd9   e102     MOVB	#0x02              
000dda   f741     ST	[R1], R0             
000ddb   ff11     INC	R1                  
000ddc   e100     MOVB	#0x00              
000ddd   0ef1     MOVZ	R0, 0xf1           
000dde   e102     MOVB	#0x02              
000ddf   f741     ST	[R1], R0             
000de0   6003     CLR	0x3, 0              
000de1   e100     MOVB	#0x00              
000de2   12f5     RLCR	0xf5               
000de3   51f4     MOV	0xf4, R0            
000de4   98a0     MOV	R0, #0xa0           
000de5   21f4     ADD	0xf4, R0            
000de6   52f4     MOV	R1, 0xf4            
000de7   e102     MOVB	#0x02              
000de8   f708     LD	R0, [R1]             
000de9   e100     MOVB	#0x00              
000dea   51f2     MOV	0xf2, R0            
000deb   ff11     INC	R1                  
000dec   e102     MOVB	#0x02              
000ded   f708     LD	R0, [R1]             
000dee   e100     MOVB	#0x00              
000def   51f1     MOV	0xf1, R0            
000df0   6003     CLR	0x3, 0              
000df1   12f5     RLCR	0xf5               
000df2   51f4     MOV	0xf4, R0            
000df3   98ef     MOV	R0, #0xef           
000df4   21f4     ADD	0xf4, R0            
000df5   52f4     MOV	R1, 0xf4            
000df6   e101     MOVB	#0x01              
000df7   f708     LD	R0, [R1]             
000df8   e100     MOVB	#0x00              
000df9   51f0     MOV	0xf0, R0            
000dfa   ff11     INC	R1                  
000dfb   e101     MOVB	#0x01              
000dfc   f708     LD	R0, [R1]             
000dfd   e100     MOVB	#0x00              
000dfe   51ef     MOV	0xef, R0            
000dff   0ef1     MOVZ	R0, 0xf1           
000e00   38ef     SUB	R0, 0xef            
000e01   7a03     JB	0x3, 2               
000e02   ce05     JMP	#0xe05              
000e03   0ef2     MOVZ	R0, 0xf2           
000e04   38f0     SUB	R0, 0xf0            
000e05   7803     JB	0x3, 0               
000e06   ce30     JMP	#0xe30              
000e07   6003     CLR	0x3, 0              
000e08   12f5     RLCR	0xf5               
000e09   51f4     MOV	0xf4, R0            
000e0a   98ef     MOV	R0, #0xef           
000e0b   21f4     ADD	0xf4, R0            
000e0c   6003     CLR	0x3, 0              
000e0d   12f5     RLCR	0xf5               
000e0e   51f2     MOV	0xf2, R0            
000e0f   98ef     MOV	R0, #0xef           
000e10   21f2     ADD	0xf2, R0            
000e11   52f2     MOV	R1, 0xf2            
000e12   e101     MOVB	#0x01              
000e13   f708     LD	R0, [R1]             
000e14   e100     MOVB	#0x00              
000e15   51f0     MOV	0xf0, R0            
000e16   ff11     INC	R1                  
000e17   e101     MOVB	#0x01              
000e18   f708     LD	R0, [R1]             
000e19   e100     MOVB	#0x00              
000e1a   51ef     MOV	0xef, R0            
000e1b   98ff     MOV	R0, #0xff           
000e1c   20f0     ADD	R0, 0xf0            
000e1d   51f2     MOV	0xf2, R0            
000e1e   98ff     MOV	R0, #0xff           
000e1f   51f1     MOV	0xf1, R0            
000e20   0eef     MOVZ	R0, 0xef           
000e21   7003     JNB	0x3, 0              
000e22   ff10     INC	R0                  
000e23   7203     JNB	0x3, 2              
000e24   ce26     JMP	#0xe26              
000e25   21f1     ADD	0xf1, R0            
000e26   0ef2     MOVZ	R0, 0xf2           
000e27   52f4     MOV	R1, 0xf4            
000e28   e101     MOVB	#0x01              
000e29   f741     ST	[R1], R0             
000e2a   ff11     INC	R1                  
000e2b   e100     MOVB	#0x00              
000e2c   0ef1     MOVZ	R0, 0xf1           
000e2d   e101     MOVB	#0x01              
000e2e   f741     ST	[R1], R0             
000e2f   ce54     JMP	#0xe54              
000e30   6003     CLR	0x3, 0              
000e31   12f5     RLCR	0xf5               
000e32   51f4     MOV	0xf4, R0            
000e33   98ef     MOV	R0, #0xef           
000e34   21f4     ADD	0xf4, R0            
000e35   6003     CLR	0x3, 0              
000e36   12f5     RLCR	0xf5               
000e37   51f2     MOV	0xf2, R0            
000e38   98ef     MOV	R0, #0xef           
000e39   21f2     ADD	0xf2, R0            
000e3a   52f2     MOV	R1, 0xf2            
000e3b   e101     MOVB	#0x01              
000e3c   f708     LD	R0, [R1]             
000e3d   e100     MOVB	#0x00              
000e3e   51f0     MOV	0xf0, R0            
000e3f   ff11     INC	R1                  
000e40   e101     MOVB	#0x01              
000e41   f708     LD	R0, [R1]             
000e42   e100     MOVB	#0x00              
000e43   51ef     MOV	0xef, R0            
000e44   9801     MOV	R0, #0x1            
000e45   20f0     ADD	R0, 0xf0            
000e46   51f2     MOV	0xf2, R0            
000e47   03f1     CLR	0xf1                
000e48   13f1     RLC	0xf1                
000e49   0eef     MOVZ	R0, 0xef           
000e4a   21f1     ADD	0xf1, R0            
000e4b   0ef2     MOVZ	R0, 0xf2           
000e4c   52f4     MOV	R1, 0xf4            
000e4d   e101     MOVB	#0x01              
000e4e   f741     ST	[R1], R0             
000e4f   ff11     INC	R1                  
000e50   e100     MOVB	#0x00              
000e51   0ef1     MOVZ	R0, 0xf1           
000e52   e101     MOVB	#0x01              
000e53   f741     ST	[R1], R0             
000e54   6003     CLR	0x3, 0              
000e55   e100     MOVB	#0x00              
000e56   12f5     RLCR	0xf5               
000e57   51f4     MOV	0xf4, R0            
000e58   9880     MOV	R0, #0x80           
000e59   21f4     ADD	0xf4, R0            
000e5a   9800     MOV	R0, #0x0            
000e5b   52f4     MOV	R1, 0xf4            
000e5c   e102     MOVB	#0x02              
000e5d   f741     ST	[R1], R0             
000e5e   ff11     INC	R1                  
000e5f   9800     MOV	R0, #0x0            
000e60   f741     ST	[R1], R0             
000e61   6003     CLR	0x3, 0              
000e62   e100     MOVB	#0x00              
000e63   12f5     RLCR	0xf5               
000e64   51f4     MOV	0xf4, R0            
000e65   9888     MOV	R0, #0x88           
000e66   21f4     ADD	0xf4, R0            
000e67   9800     MOV	R0, #0x0            
000e68   52f4     MOV	R1, 0xf4            
000e69   e102     MOVB	#0x02              
000e6a   f741     ST	[R1], R0             
000e6b   ff11     INC	R1                  
000e6c   9800     MOV	R0, #0x0            
000e6d   f741     ST	[R1], R0             
000e6e   cf8f     JMP	#0xf8f              
000e6f   6003     CLR	0x3, 0              
000e70   12f5     RLCR	0xf5               
000e71   51f4     MOV	0xf4, R0            
000e72   98f7     MOV	R0, #0xf7           
000e73   21f4     ADD	0xf4, R0            
000e74   52f4     MOV	R1, 0xf4            
000e75   e101     MOVB	#0x01              
000e76   f708     LD	R0, [R1]             
000e77   e100     MOVB	#0x00              
000e78   51f2     MOV	0xf2, R0            
000e79   ff11     INC	R1                  
000e7a   e101     MOVB	#0x01              
000e7b   f708     LD	R0, [R1]             
000e7c   e100     MOVB	#0x00              
000e7d   51f1     MOV	0xf1, R0            
000e7e   9800     MOV	R0, #0x0            
000e7f   38f1     SUB	R0, 0xf1            
000e80   7a03     JB	0x3, 2               
000e81   ce84     JMP	#0xe84              
000e82   980a     MOV	R0, #0xa            
000e83   38f2     SUB	R0, 0xf2            
000e84   7803     JB	0x3, 0               
000e85   cecf     JMP	#0xecf              
000e86   6003     CLR	0x3, 0              
000e87   12f5     RLCR	0xf5               
000e88   51f4     MOV	0xf4, R0            
000e89   98b0     MOV	R0, #0xb0           
000e8a   21f4     ADD	0xf4, R0            
000e8b   6003     CLR	0x3, 0              
000e8c   12f5     RLCR	0xf5               
000e8d   51f2     MOV	0xf2, R0            
000e8e   98a0     MOV	R0, #0xa0           
000e8f   21f2     ADD	0xf2, R0            
000e90   52f2     MOV	R1, 0xf2            
000e91   e102     MOVB	#0x02              
000e92   f708     LD	R0, [R1]             
000e93   e100     MOVB	#0x00              
000e94   51f0     MOV	0xf0, R0            
000e95   ff11     INC	R1                  
000e96   e102     MOVB	#0x02              
000e97   f708     LD	R0, [R1]             
000e98   e100     MOVB	#0x00              
000e99   51ef     MOV	0xef, R0            
000e9a   0ef0     MOVZ	R0, 0xf0           
000e9b   52f4     MOV	R1, 0xf4            
000e9c   e102     MOVB	#0x02              
000e9d   f741     ST	[R1], R0             
000e9e   ff11     INC	R1                  
000e9f   e100     MOVB	#0x00              
000ea0   0eef     MOVZ	R0, 0xef           
000ea1   e102     MOVB	#0x02              
000ea2   f741     ST	[R1], R0             
000ea3   6003     CLR	0x3, 0              
000ea4   e100     MOVB	#0x00              
000ea5   12f5     RLCR	0xf5               
000ea6   51f4     MOV	0xf4, R0            
000ea7   98ef     MOV	R0, #0xef           
000ea8   21f4     ADD	0xf4, R0            
000ea9   6003     CLR	0x3, 0              
000eaa   12f5     RLCR	0xf5               
000eab   51f2     MOV	0xf2, R0            
000eac   98a0     MOV	R0, #0xa0           
000ead   21f2     ADD	0xf2, R0            
000eae   52f2     MOV	R1, 0xf2            
000eaf   e102     MOVB	#0x02              
000eb0   f708     LD	R0, [R1]             
000eb1   e100     MOVB	#0x00              
000eb2   51f0     MOV	0xf0, R0            
000eb3   ff11     INC	R1                  
000eb4   e102     MOVB	#0x02              
000eb5   f708     LD	R0, [R1]             
000eb6   e100     MOVB	#0x00              
000eb7   51ef     MOV	0xef, R0            
000eb8   0ef0     MOVZ	R0, 0xf0           
000eb9   52f4     MOV	R1, 0xf4            
000eba   e101     MOVB	#0x01              
000ebb   f741     ST	[R1], R0             
000ebc   ff11     INC	R1                  
000ebd   e100     MOVB	#0x00              
000ebe   0eef     MOVZ	R0, 0xef           
000ebf   e101     MOVB	#0x01              
000ec0   f741     ST	[R1], R0             
000ec1   6003     CLR	0x3, 0              
000ec2   e100     MOVB	#0x00              
000ec3   12f5     RLCR	0xf5               
000ec4   51f4     MOV	0xf4, R0            
000ec5   98e7     MOV	R0, #0xe7           
000ec6   21f4     ADD	0xf4, R0            
000ec7   9805     MOV	R0, #0x5            
000ec8   52f4     MOV	R1, 0xf4            
000ec9   e101     MOVB	#0x01              
000eca   f741     ST	[R1], R0             
000ecb   ff11     INC	R1                  
000ecc   9800     MOV	R0, #0x0            
000ecd   f741     ST	[R1], R0             
000ece   cf8f     JMP	#0xf8f              
000ecf   6003     CLR	0x3, 0              
000ed0   12f5     RLCR	0xf5               
000ed1   51f4     MOV	0xf4, R0            
000ed2   98a0     MOV	R0, #0xa0           
000ed3   21f4     ADD	0xf4, R0            
000ed4   52f4     MOV	R1, 0xf4            
000ed5   e102     MOVB	#0x02              
000ed6   f708     LD	R0, [R1]             
000ed7   e100     MOVB	#0x00              
000ed8   51f2     MOV	0xf2, R0            
000ed9   ff11     INC	R1                  
000eda   e102     MOVB	#0x02              
000edb   f708     LD	R0, [R1]             
000edc   e100     MOVB	#0x00              
000edd   51f1     MOV	0xf1, R0            
000ede   6003     CLR	0x3, 0              
000edf   12f5     RLCR	0xf5               
000ee0   51f4     MOV	0xf4, R0            
000ee1   98b0     MOV	R0, #0xb0           
000ee2   21f4     ADD	0xf4, R0            
000ee3   52f4     MOV	R1, 0xf4            
000ee4   e102     MOVB	#0x02              
000ee5   f708     LD	R0, [R1]             
000ee6   e100     MOVB	#0x00              
000ee7   51f0     MOV	0xf0, R0            
000ee8   ff11     INC	R1                  
000ee9   e102     MOVB	#0x02              
000eea   f708     LD	R0, [R1]             
000eeb   e100     MOVB	#0x00              
000eec   51ef     MOV	0xef, R0            
000eed   9858     MOV	R0, #0x58           
000eee   20f5     ADD	R0, 0xf5            
000eef   51f4     MOV	0xf4, R0            
000ef0   981f     MOV	R0, #0x1f           
000ef1   51f3     MOV	0xf3, R0            
000ef2   0208     CLR	R0                  
000ef3   7003     JNB	0x3, 0              
000ef4   ff10     INC	R0                  
000ef5   7203     JNB	0x3, 2              
000ef6   cef8     JMP	#0xef8              
000ef7   21f3     ADD	0xf3, R0            
000ef8   52f3     MOV	R1, 0xf3            
000ef9   50f4     MOV	R0, 0xf4            
000efa   e01f     MOVP	#0x1F              
000efb   df60     CALL	#0xf60             
000efc   e00e     MOVP	#0x0E              
000efd   e100     MOVB	#0x00              
000efe   51ee     MOV	0xee, R0            
000eff   0eee     MOVZ	R0, 0xee           
000f00   51f4     MOV	0xf4, R0            
000f01   03f3     CLR	0xf3                
000f02   50f4     MOV	R0, 0xf4            
000f03   21f0     ADD	0xf0, R0            
000f04   9800     MOV	R0, #0x0            
000f05   7003     JNB	0x3, 0              
000f06   ff10     INC	R0                  
000f07   7203     JNB	0x3, 2              
000f08   cf0a     JMP	#0xf0a              
000f09   21ef     ADD	0xef, R0            
000f0a   0ef1     MOVZ	R0, 0xf1           
000f0b   38ef     SUB	R0, 0xef            
000f0c   7a03     JB	0x3, 2               
000f0d   cf10     JMP	#0xf10              
000f0e   0ef2     MOVZ	R0, 0xf2           
000f0f   38f0     SUB	R0, 0xf0            
000f10   7003     JNB	0x3, 0              
000f11   cf2f     JMP	#0xf2f              
000f12   6003     CLR	0x3, 0              
000f13   12f5     RLCR	0xf5               
000f14   51f4     MOV	0xf4, R0            
000f15   98b0     MOV	R0, #0xb0           
000f16   21f4     ADD	0xf4, R0            
000f17   52f4     MOV	R1, 0xf4            
000f18   e102     MOVB	#0x02              
000f19   f708     LD	R0, [R1]             
000f1a   e100     MOVB	#0x00              
000f1b   51f2     MOV	0xf2, R0            
000f1c   ff11     INC	R1                  
000f1d   e102     MOVB	#0x02              
000f1e   f708     LD	R0, [R1]             
000f1f   e100     MOVB	#0x00              
000f20   51f1     MOV	0xf1, R0            
000f21   0bf2     INC	0xf2                
000f22   7a03     JB	0x3, 2               
000f23   cf25     JMP	#0xf25              
000f24   0bf1     INC	0xf1                
000f25   0ef2     MOVZ	R0, 0xf2           
000f26   52f4     MOV	R1, 0xf4            
000f27   e102     MOVB	#0x02              
000f28   f741     ST	[R1], R0             
000f29   ff11     INC	R1                  
000f2a   e100     MOVB	#0x00              
000f2b   0ef1     MOVZ	R0, 0xf1           
000f2c   e102     MOVB	#0x02              
000f2d   f741     ST	[R1], R0             
000f2e   cf8f     JMP	#0xf8f              
000f2f   6003     CLR	0x3, 0              
000f30   12f5     RLCR	0xf5               
000f31   51f4     MOV	0xf4, R0            
000f32   98a0     MOV	R0, #0xa0           
000f33   21f4     ADD	0xf4, R0            
000f34   52f4     MOV	R1, 0xf4            
000f35   e102     MOVB	#0x02              
000f36   f708     LD	R0, [R1]             
000f37   e100     MOVB	#0x00              
000f38   51f2     MOV	0xf2, R0            
000f39   ff11     INC	R1                  
000f3a   e102     MOVB	#0x02              
000f3b   f708     LD	R0, [R1]             
000f3c   e100     MOVB	#0x00              
000f3d   51f1     MOV	0xf1, R0            
000f3e   6003     CLR	0x3, 0              
000f3f   12f5     RLCR	0xf5               
000f40   51f4     MOV	0xf4, R0            
000f41   98b0     MOV	R0, #0xb0           
000f42   21f4     ADD	0xf4, R0            
000f43   52f4     MOV	R1, 0xf4            
000f44   e102     MOVB	#0x02              
000f45   f708     LD	R0, [R1]             
000f46   e100     MOVB	#0x00              
000f47   51f0     MOV	0xf0, R0            
000f48   ff11     INC	R1                  
000f49   e102     MOVB	#0x02              
000f4a   f708     LD	R0, [R1]             
000f4b   e100     MOVB	#0x00              
000f4c   51ef     MOV	0xef, R0            
000f4d   985a     MOV	R0, #0x5a           
000f4e   20f5     ADD	R0, 0xf5            
000f4f   51f4     MOV	0xf4, R0            
000f50   981f     MOV	R0, #0x1f           
000f51   51f3     MOV	0xf3, R0            
000f52   0208     CLR	R0                  
000f53   7003     JNB	0x3, 0              
000f54   ff10     INC	R0                  
000f55   7203     JNB	0x3, 2              
000f56   cf58     JMP	#0xf58              
000f57   21f3     ADD	0xf3, R0            
000f58   52f3     MOV	R1, 0xf3            
000f59   50f4     MOV	R0, 0xf4            
000f5a   e01f     MOVP	#0x1F              
000f5b   df60     CALL	#0xf60             
000f5c   e00f     MOVP	#0x0F              
000f5d   e100     MOVB	#0x00              
000f5e   51ee     MOV	0xee, R0            
000f5f   03f3     CLR	0xf3                
000f60   0eee     MOVZ	R0, 0xee           
000f61   51f4     MOV	0xf4, R0            
000f62   39f0     SUB	0xf0, R0            
000f63   9800     MOV	R0, #0x0            
000f64   7803     JB	0x3, 0               
000f65   ff10     INC	R0                  
000f66   7203     JNB	0x3, 2              
000f67   cf69     JMP	#0xf69              
000f68   39ef     SUB	0xef, R0            
000f69   0eef     MOVZ	R0, 0xef           
000f6a   38f1     SUB	R0, 0xf1            
000f6b   7a03     JB	0x3, 2               
000f6c   cf6f     JMP	#0xf6f              
000f6d   0ef0     MOVZ	R0, 0xf0           
000f6e   38f2     SUB	R0, 0xf2            
000f6f   7003     JNB	0x3, 0              
000f70   cf8f     JMP	#0xf8f              
000f71   6003     CLR	0x3, 0              
000f72   12f5     RLCR	0xf5               
000f73   51f4     MOV	0xf4, R0            
000f74   50f4     MOV	R0, 0xf4            
000f75   80b0     ADD	R0, #0xb0           
000f76   51f5     MOV	0xf5, R0            
000f77   52f5     MOV	R1, 0xf5            
000f78   e102     MOVB	#0x02              
000f79   f708     LD	R0, [R1]             
000f7a   e100     MOVB	#0x00              
000f7b   51f4     MOV	0xf4, R0            
000f7c   ff11     INC	R1                  
000f7d   e102     MOVB	#0x02              
000f7e   f708     LD	R0, [R1]             
000f7f   e100     MOVB	#0x00              
000f80   51f2     MOV	0xf2, R0            
000f81   98ff     MOV	R0, #0xff           
000f82   21f4     ADD	0xf4, R0            
000f83   7003     JNB	0x3, 0              
000f84   cf86     JMP	#0xf86              
000f85   07f2     DEC	0xf2                
000f86   0ef4     MOVZ	R0, 0xf4           
000f87   52f5     MOV	R1, 0xf5            
000f88   e102     MOVB	#0x02              
000f89   f741     ST	[R1], R0             
000f8a   ff11     INC	R1                  
000f8b   e100     MOVB	#0x00              
000f8c   0ef2     MOVZ	R0, 0xf2           
000f8d   e102     MOVB	#0x02              
000f8e   f741     ST	[R1], R0             
000f8f   0008     CRET
                  
                                           func.__SCS_Get_Key_Cnt
001d42   e100     MOVB	#0x00              
001d43   03f9     CLR	0xf9                
001d44   03f8     CLR	0xf8                
001d45   0ebf     MOVZ	R0, 0xbf           
001d46   38f8     SUB	R0, 0xf8            
001d47   7003     JNB	0x3, 0              
001d48   cd67     JMP	#0xd67              
001d49   9801     MOV	R0, #0x1            
001d4a   51f7     MOV	0xf7, R0            
001d4b   9800     MOV	R0, #0x0            
001d4c   51f6     MOV	0xf6, R0            
001d4d   0ef8     MOVZ	R0, 0xf8           
001d4e   ff10     INC	R0                  
001d4f   cd54     JMP	#0xd54              
001d50   6003     CLR	0x3, 0              
001d51   e100     MOVB	#0x00              
001d52   13f7     RLC	0xf7                
001d53   13f6     RLC	0xf6                
001d54   ff58     DECJZ	R0                
001d55   cd50     JMP	#0xd50              
001d56   0ef7     MOVZ	R0, 0xf7           
001d57   e101     MOVB	#0x01              
001d58   28c9     AND	R0, 0xc9            
001d59   e100     MOVB	#0x00              
001d5a   51f7     MOV	0xf7, R0            
001d5b   0ef6     MOVZ	R0, 0xf6           
001d5c   e101     MOVB	#0x01              
001d5d   28ca     AND	R0, 0xca            
001d5e   e100     MOVB	#0x00              
001d5f   51f6     MOV	0xf6, R0            
001d60   0ef7     MOVZ	R0, 0xf7           
001d61   30f6     ORL	R0, 0xf6            
001d62   7203     JNB	0x3, 2              
001d63   cd65     JMP	#0xd65              
001d64   0bf9     INC	0xf9                
001d65   0bf8     INC	0xf8                
001d66   cd45     JMP	#0xd45              
001d67   0ef9     MOVZ	R0, 0xf9           
001d68   0008     CRET
                  
                                           func.__CTouch_Scan_Process_
000010   e101     MOVB	#0x01              
000011   03d1     CLR	0xd1                
000012   03d2     CLR	0xd2                
000013   03d3     CLR	0xd3                
000014   03d4     CLR	0xd4                
000015   03d5     CLR	0xd5                
000016   03d6     CLR	0xd6                
000017   0388     CLR	0x88                
000018   0387     CLR	0x87                
000019   0386     CLR	0x86                
00001a   9803     MOV	R0, #0x3            
00001b   3886     SUB	R0, 0x86            
00001c   7003     JNB	0x3, 0              
00001d   c742     JMP	#0x742              
00001e   0388     CLR	0x88                
00001f   e100     MOVB	#0x00              
000020   03cc     CLR	0xcc                
000021   e101     MOVB	#0x01              
000022   03c7     CLR	0xc7                
000023   03c8     CLR	0xc8                
000024   0385     CLR	0x85                
000025   e100     MOVB	#0x00              
000026   0ebf     MOVZ	R0, 0xbf           
000027   e101     MOVB	#0x01              
000028   3885     SUB	R0, 0x85            
000029   7003     JNB	0x3, 0              
00002a   c69e     JMP	#0x69e              
00002b   9806     MOV	R0, #0x6            
00002c   517e     MOV	0x7e, R0            
00002d   0e85     MOVZ	R0, 0x85           
00002e   e01e     MOVP	#0x1E              
00002f   ded0     CALL	#0xed0             
000030   e000     MOVP	#0x00              
000031   e101     MOVB	#0x01              
000032   5184     MOV	0x84, R0            
000033   98d1     MOV	R0, #0xd1           
000034   2184     ADD	0x84, R0            
000035   9804     MOV	R0, #0x4            
000036   2184     ADD	0x84, R0            
000037   7803     JB	0x3, 0               
000038   c03a     JMP	#0x3a               
000039   0b83     INC	0x83                
00003a   9806     MOV	R0, #0x6            
00003b   517e     MOV	0x7e, R0            
00003c   0e85     MOVZ	R0, 0x85           
00003d   e01e     MOVP	#0x1E              
00003e   ded0     CALL	#0xed0             
00003f   e000     MOVP	#0x00              
000040   e101     MOVB	#0x01              
000041   5182     MOV	0x82, R0            
000042   98d1     MOV	R0, #0xd1           
000043   2182     ADD	0x82, R0            
000044   9802     MOV	R0, #0x2            
000045   2182     ADD	0x82, R0            
000046   7803     JB	0x3, 0               
000047   c049     JMP	#0x49               
000048   0b81     INC	0x81                
000049   5282     MOV	R1, 0x82            
00004a   e102     MOVB	#0x02              
00004b   f708     LD	R0, [R1]             
00004c   e101     MOVB	#0x01              
00004d   5180     MOV	0x80, R0            
00004e   ff11     INC	R1                  
00004f   e102     MOVB	#0x02              
000050   f708     LD	R0, [R1]             
000051   e100     MOVB	#0x00              
000052   51fe     MOV	0xfe, R0            
000053   e101     MOVB	#0x01              
000054   0e80     MOVZ	R0, 0x80           
000055   5284     MOV	R1, 0x84            
000056   e102     MOVB	#0x02              
000057   f741     ST	[R1], R0             
000058   ff11     INC	R1                  
000059   e100     MOVB	#0x00              
00005a   0efe     MOVZ	R0, 0xfe           
00005b   e102     MOVB	#0x02              
00005c   f741     ST	[R1], R0             
00005d   9806     MOV	R0, #0x6            
00005e   517e     MOV	0x7e, R0            
00005f   e101     MOVB	#0x01              
000060   0e85     MOVZ	R0, 0x85           
000061   e01e     MOVP	#0x1E              
000062   ded0     CALL	#0xed0             
000063   e000     MOVP	#0x00              
000064   e101     MOVB	#0x01              
000065   5184     MOV	0x84, R0            
000066   98d1     MOV	R0, #0xd1           
000067   2184     ADD	0x84, R0            
000068   9802     MOV	R0, #0x2            
000069   2184     ADD	0x84, R0            
00006a   7803     JB	0x3, 0               
00006b   c06d     JMP	#0x6d               
00006c   0b83     INC	0x83                
00006d   9806     MOV	R0, #0x6            
00006e   517e     MOV	0x7e, R0            
00006f   0e85     MOVZ	R0, 0x85           
000070   e01e     MOVP	#0x1E              
000071   ded0     CALL	#0xed0             
000072   e000     MOVP	#0x00              
000073   e101     MOVB	#0x01              
000074   5182     MOV	0x82, R0            
000075   98d1     MOV	R0, #0xd1           
000076   2182     ADD	0x82, R0            
000077   5282     MOV	R1, 0x82            
000078   e102     MOVB	#0x02              
000079   f708     LD	R0, [R1]             
00007a   e101     MOVB	#0x01              
00007b   5180     MOV	0x80, R0            
00007c   ff11     INC	R1                  
00007d   e102     MOVB	#0x02              
00007e   f708     LD	R0, [R1]             
00007f   e100     MOVB	#0x00              
000080   51fe     MOV	0xfe, R0            
000081   e101     MOVB	#0x01              
000082   0e80     MOVZ	R0, 0x80           
000083   5284     MOV	R1, 0x84            
000084   e102     MOVB	#0x02              
000085   f741     ST	[R1], R0             
000086   ff11     INC	R1                  
000087   e100     MOVB	#0x00              
000088   0efe     MOVZ	R0, 0xfe           
000089   e102     MOVB	#0x02              
00008a   f741     ST	[R1], R0             
00008b   9806     MOV	R0, #0x6            
00008c   517e     MOV	0x7e, R0            
00008d   e101     MOVB	#0x01              
00008e   0e85     MOVZ	R0, 0x85           
00008f   e01e     MOVP	#0x1E              
000090   ded0     CALL	#0xed0             
000091   e000     MOVP	#0x00              
000092   e101     MOVB	#0x01              
000093   5184     MOV	0x84, R0            
000094   98d1     MOV	R0, #0xd1           
000095   2184     ADD	0x84, R0            
000096   0e85     MOVZ	R0, 0x85           
000097   e019     MOVP	#0x19              
000098   d902     CALL	#0x902             
000099   e000     MOVP	#0x00              
00009a   e101     MOVB	#0x01              
00009b   5181     MOV	0x81, R0            
00009c   0e7e     MOVZ	R0, 0x7e           
00009d   5182     MOV	0x82, R0            
00009e   0e82     MOVZ	R0, 0x82           
00009f   5284     MOV	R1, 0x84            
0000a0   e102     MOVB	#0x02              
0000a1   f741     ST	[R1], R0             
0000a2   ff11     INC	R1                  
0000a3   e101     MOVB	#0x01              
0000a4   0e81     MOVZ	R0, 0x81           
0000a5   e102     MOVB	#0x02              
0000a6   f741     ST	[R1], R0             
0000a7   9806     MOV	R0, #0x6            
0000a8   517e     MOV	0x7e, R0            
0000a9   e101     MOVB	#0x01              
0000aa   0e85     MOVZ	R0, 0x85           
0000ab   e01e     MOVP	#0x1E              
0000ac   ded0     CALL	#0xed0             
0000ad   e000     MOVP	#0x00              
0000ae   e101     MOVB	#0x01              
0000af   5184     MOV	0x84, R0            
0000b0   98d1     MOV	R0, #0xd1           
0000b1   2184     ADD	0x84, R0            
0000b2   5284     MOV	R1, 0x84            
0000b3   e102     MOVB	#0x02              
0000b4   f708     LD	R0, [R1]             
0000b5   e101     MOVB	#0x01              
0000b6   5182     MOV	0x82, R0            
0000b7   ff11     INC	R1                  
0000b8   e102     MOVB	#0x02              
0000b9   f708     LD	R0, [R1]             
0000ba   e101     MOVB	#0x01              
0000bb   5181     MOV	0x81, R0            
0000bc   0e82     MOVZ	R0, 0x82           
0000bd   3081     ORL	R0, 0x81            
0000be   7a03     JB	0x3, 2               
0000bf   c0e8     JMP	#0xe8               
0000c0   0bbf     INC	0xbf                
0000c1   7a03     JB	0x3, 2               
0000c2   c0c4     JMP	#0xc4               
0000c3   0bc0     INC	0xc0                
0000c4   9806     MOV	R0, #0x6            
0000c5   517e     MOV	0x7e, R0            
0000c6   0e85     MOVZ	R0, 0x85           
0000c7   e01e     MOVP	#0x1E              
0000c8   ded0     CALL	#0xed0             
0000c9   e000     MOVP	#0x00              
0000ca   e101     MOVB	#0x01              
0000cb   5184     MOV	0x84, R0            
0000cc   98d1     MOV	R0, #0xd1           
0000cd   2184     ADD	0x84, R0            
0000ce   6003     CLR	0x3, 0              
0000cf   1285     RLCR	0x85               
0000d0   5182     MOV	0x82, R0            
0000d1   98b0     MOV	R0, #0xb0           
0000d2   2182     ADD	0x82, R0            
0000d3   5282     MOV	R1, 0x82            
0000d4   e102     MOVB	#0x02              
0000d5   f708     LD	R0, [R1]             
0000d6   e101     MOVB	#0x01              
0000d7   5180     MOV	0x80, R0            
0000d8   ff11     INC	R1                  
0000d9   e102     MOVB	#0x02              
0000da   f708     LD	R0, [R1]             
0000db   e100     MOVB	#0x00              
0000dc   51fe     MOV	0xfe, R0            
0000dd   e101     MOVB	#0x01              
0000de   0e80     MOVZ	R0, 0x80           
0000df   5284     MOV	R1, 0x84            
0000e0   e102     MOVB	#0x02              
0000e1   f741     ST	[R1], R0             
0000e2   ff11     INC	R1                  
0000e3   e100     MOVB	#0x00              
0000e4   0efe     MOVZ	R0, 0xfe           
0000e5   e102     MOVB	#0x02              
0000e6   f741     ST	[R1], R0             
0000e7   c0ea     JMP	#0xea               
0000e8   03bf     CLR	0xbf                
0000e9   03c0     CLR	0xc0                
0000ea   9803     MOV	R0, #0x3            
0000eb   e101     MOVB	#0x01              
0000ec   38c0     SUB	R0, 0xc0            
0000ed   7a03     JB	0x3, 2               
0000ee   c0f1     JMP	#0xf1               
0000ef   98e9     MOV	R0, #0xe9           
0000f0   38bf     SUB	R0, 0xbf            
0000f1   7803     JB	0x3, 0               
0000f2   c0fe     JMP	#0xfe               
0000f3   e01f     MOVP	#0x1F              
0000f4   df00     CALL	#0xf00             
0000f5   e000     MOVP	#0x00              
0000f6   e01e     MOVP	#0x1E              
0000f7   dede     CALL	#0xede             
0000f8   e000     MOVP	#0x00              
0000f9   e010     MOVP	#0x10              
0000fa   d000     CALL	#0x0               
0000fb   e000     MOVP	#0x00              
0000fc   9800     MOV	R0, #0x0            
0000fd   ca0f     JMP	#0xa0f              
0000fe   9806     MOV	R0, #0x6            
0000ff   517e     MOV	0x7e, R0            
000100   0e85     MOVZ	R0, 0x85           
000101   e01e     MOVP	#0x1E              
000102   ded0     CALL	#0xed0             
000103   e001     MOVP	#0x01              
000104   e101     MOVB	#0x01              
000105   5184     MOV	0x84, R0            
000106   98d1     MOV	R0, #0xd1           
000107   2184     ADD	0x84, R0            
000108   9804     MOV	R0, #0x4            
000109   2184     ADD	0x84, R0            
00010a   7803     JB	0x3, 0               
00010b   c10d     JMP	#0x10d              
00010c   0b83     INC	0x83                
00010d   5284     MOV	R1, 0x84            
00010e   e102     MOVB	#0x02              
00010f   f708     LD	R0, [R1]             
000110   e101     MOVB	#0x01              
000111   5182     MOV	0x82, R0            
000112   ff11     INC	R1                  
000113   e102     MOVB	#0x02              
000114   f708     LD	R0, [R1]             
000115   e101     MOVB	#0x01              
000116   5181     MOV	0x81, R0            
000117   0e82     MOVZ	R0, 0x82           
000118   3081     ORL	R0, 0x81            
000119   7a03     JB	0x3, 2               
00011a   c1a1     JMP	#0x1a1              
00011b   6003     CLR	0x3, 0              
00011c   1285     RLCR	0x85               
00011d   5184     MOV	0x84, R0            
00011e   98a8     MOV	R0, #0xa8           
00011f   2184     ADD	0x84, R0            
000120   9806     MOV	R0, #0x6            
000121   517e     MOV	0x7e, R0            
000122   0e85     MOVZ	R0, 0x85           
000123   e01e     MOVP	#0x1E              
000124   ded0     CALL	#0xed0             
000125   e001     MOVP	#0x01              
000126   e101     MOVB	#0x01              
000127   5182     MOV	0x82, R0            
000128   98d1     MOV	R0, #0xd1           
000129   2182     ADD	0x82, R0            
00012a   5282     MOV	R1, 0x82            
00012b   e102     MOVB	#0x02              
00012c   f708     LD	R0, [R1]             
00012d   e101     MOVB	#0x01              
00012e   5180     MOV	0x80, R0            
00012f   ff11     INC	R1                  
000130   e102     MOVB	#0x02              
000131   f708     LD	R0, [R1]             
000132   e100     MOVB	#0x00              
000133   51fe     MOV	0xfe, R0            
000134   e101     MOVB	#0x01              
000135   0e80     MOVZ	R0, 0x80           
000136   5284     MOV	R1, 0x84            
000137   e102     MOVB	#0x02              
000138   f741     ST	[R1], R0             
000139   ff11     INC	R1                  
00013a   e100     MOVB	#0x00              
00013b   0efe     MOVZ	R0, 0xfe           
00013c   e102     MOVB	#0x02              
00013d   f741     ST	[R1], R0             
00013e   9806     MOV	R0, #0x6            
00013f   517e     MOV	0x7e, R0            
000140   e101     MOVB	#0x01              
000141   0e85     MOVZ	R0, 0x85           
000142   e01e     MOVP	#0x1E              
000143   ded0     CALL	#0xed0             
000144   e001     MOVP	#0x01              
000145   e101     MOVB	#0x01              
000146   5184     MOV	0x84, R0            
000147   98d1     MOV	R0, #0xd1           
000148   2184     ADD	0x84, R0            
000149   9802     MOV	R0, #0x2            
00014a   2184     ADD	0x84, R0            
00014b   7803     JB	0x3, 0               
00014c   c14e     JMP	#0x14e              
00014d   0b83     INC	0x83                
00014e   9806     MOV	R0, #0x6            
00014f   517e     MOV	0x7e, R0            
000150   0e85     MOVZ	R0, 0x85           
000151   e01e     MOVP	#0x1E              
000152   ded0     CALL	#0xed0             
000153   e001     MOVP	#0x01              
000154   e101     MOVB	#0x01              
000155   5182     MOV	0x82, R0            
000156   98d1     MOV	R0, #0xd1           
000157   2182     ADD	0x82, R0            
000158   9804     MOV	R0, #0x4            
000159   2182     ADD	0x82, R0            
00015a   7803     JB	0x3, 0               
00015b   c15d     JMP	#0x15d              
00015c   0b81     INC	0x81                
00015d   6003     CLR	0x3, 0              
00015e   1285     RLCR	0x85               
00015f   5180     MOV	0x80, R0            
000160   98b0     MOV	R0, #0xb0           
000161   2180     ADD	0x80, R0            
000162   5280     MOV	R1, 0x80            
000163   e102     MOVB	#0x02              
000164   f708     LD	R0, [R1]             
000165   e100     MOVB	#0x00              
000166   51fd     MOV	0xfd, R0            
000167   ff11     INC	R1                  
000168   e102     MOVB	#0x02              
000169   f708     LD	R0, [R1]             
00016a   e100     MOVB	#0x00              
00016b   51fc     MOV	0xfc, R0            
00016c   0efd     MOVZ	R0, 0xfd           
00016d   e101     MOVB	#0x01              
00016e   5282     MOV	R1, 0x82            
00016f   e102     MOVB	#0x02              
000170   f741     ST	[R1], R0             
000171   ff11     INC	R1                  
000172   e100     MOVB	#0x00              
000173   0efc     MOVZ	R0, 0xfc           
000174   e102     MOVB	#0x02              
000175   f741     ST	[R1], R0             
000176   e100     MOVB	#0x00              
000177   0efd     MOVZ	R0, 0xfd           
000178   e101     MOVB	#0x01              
000179   5284     MOV	R1, 0x84            
00017a   e102     MOVB	#0x02              
00017b   f741     ST	[R1], R0             
00017c   ff11     INC	R1                  
00017d   e100     MOVB	#0x00              
00017e   0efc     MOVZ	R0, 0xfc           
00017f   e102     MOVB	#0x02              
000180   f741     ST	[R1], R0             
000181   6003     CLR	0x3, 0              
000182   e101     MOVB	#0x01              
000183   1285     RLCR	0x85               
000184   5184     MOV	0x84, R0            
000185   98a0     MOV	R0, #0xa0           
000186   2184     ADD	0x84, R0            
000187   6003     CLR	0x3, 0              
000188   1285     RLCR	0x85               
000189   5182     MOV	0x82, R0            
00018a   98b0     MOV	R0, #0xb0           
00018b   2182     ADD	0x82, R0            
00018c   5282     MOV	R1, 0x82            
00018d   e102     MOVB	#0x02              
00018e   f708     LD	R0, [R1]             
00018f   e101     MOVB	#0x01              
000190   5180     MOV	0x80, R0            
000191   ff11     INC	R1                  
000192   e102     MOVB	#0x02              
000193   f708     LD	R0, [R1]             
000194   e100     MOVB	#0x00              
000195   51fe     MOV	0xfe, R0            
000196   e101     MOVB	#0x01              
000197   0e80     MOVZ	R0, 0x80           
000198   5284     MOV	R1, 0x84            
000199   e102     MOVB	#0x02              
00019a   f741     ST	[R1], R0             
00019b   ff11     INC	R1                  
00019c   e100     MOVB	#0x00              
00019d   0efe     MOVZ	R0, 0xfe           
00019e   e102     MOVB	#0x02              
00019f   f741     ST	[R1], R0             
0001a0   c20b     JMP	#0x20b              
0001a1   6003     CLR	0x3, 0              
0001a2   1285     RLCR	0x85               
0001a3   5184     MOV	0x84, R0            
0001a4   98a8     MOV	R0, #0xa8           
0001a5   2184     ADD	0x84, R0            
0001a6   9806     MOV	R0, #0x6            
0001a7   517e     MOV	0x7e, R0            
0001a8   0e85     MOVZ	R0, 0x85           
0001a9   e01e     MOVP	#0x1E              
0001aa   ded0     CALL	#0xed0             
0001ab   e001     MOVP	#0x01              
0001ac   e101     MOVB	#0x01              
0001ad   5182     MOV	0x82, R0            
0001ae   98d1     MOV	R0, #0xd1           
0001af   2182     ADD	0x82, R0            
0001b0   5282     MOV	R1, 0x82            
0001b1   e102     MOVB	#0x02              
0001b2   f708     LD	R0, [R1]             
0001b3   e101     MOVB	#0x01              
0001b4   5180     MOV	0x80, R0            
0001b5   ff11     INC	R1                  
0001b6   e102     MOVB	#0x02              
0001b7   f708     LD	R0, [R1]             
0001b8   e100     MOVB	#0x00              
0001b9   51fe     MOV	0xfe, R0            
0001ba   9806     MOV	R0, #0x6            
0001bb   517e     MOV	0x7e, R0            
0001bc   e101     MOVB	#0x01              
0001bd   0e85     MOVZ	R0, 0x85           
0001be   e01e     MOVP	#0x1E              
0001bf   ded0     CALL	#0xed0             
0001c0   e001     MOVP	#0x01              
0001c1   e101     MOVB	#0x01              
0001c2   5182     MOV	0x82, R0            
0001c3   98d1     MOV	R0, #0xd1           
0001c4   2182     ADD	0x82, R0            
0001c5   9802     MOV	R0, #0x2            
0001c6   2182     ADD	0x82, R0            
0001c7   7803     JB	0x3, 0               
0001c8   c1ca     JMP	#0x1ca              
0001c9   0b81     INC	0x81                
0001ca   5282     MOV	R1, 0x82            
0001cb   e102     MOVB	#0x02              
0001cc   f708     LD	R0, [R1]             
0001cd   e100     MOVB	#0x00              
0001ce   51fd     MOV	0xfd, R0            
0001cf   ff11     INC	R1                  
0001d0   e102     MOVB	#0x02              
0001d1   f708     LD	R0, [R1]             
0001d2   e100     MOVB	#0x00              
0001d3   51fc     MOV	0xfc, R0            
0001d4   9806     MOV	R0, #0x6            
0001d5   517e     MOV	0x7e, R0            
0001d6   e101     MOVB	#0x01              
0001d7   0e85     MOVZ	R0, 0x85           
0001d8   e01e     MOVP	#0x1E              
0001d9   ded0     CALL	#0xed0             
0001da   e001     MOVP	#0x01              
0001db   e101     MOVB	#0x01              
0001dc   5182     MOV	0x82, R0            
0001dd   98d1     MOV	R0, #0xd1           
0001de   2182     ADD	0x82, R0            
0001df   9804     MOV	R0, #0x4            
0001e0   2182     ADD	0x82, R0            
0001e1   7803     JB	0x3, 0               
0001e2   c1e4     JMP	#0x1e4              
0001e3   0b81     INC	0x81                
0001e4   5282     MOV	R1, 0x82            
0001e5   e102     MOVB	#0x02              
0001e6   f708     LD	R0, [R1]             
0001e7   e100     MOVB	#0x00              
0001e8   51fb     MOV	0xfb, R0            
0001e9   ff11     INC	R1                  
0001ea   e102     MOVB	#0x02              
0001eb   f708     LD	R0, [R1]             
0001ec   e100     MOVB	#0x00              
0001ed   51fa     MOV	0xfa, R0            
0001ee   0efb     MOVZ	R0, 0xfb           
0001ef   517a     MOV	0x7a, R0            
0001f0   0efa     MOVZ	R0, 0xfa           
0001f1   517b     MOV	0x7b, R0            
0001f2   0efd     MOVZ	R0, 0xfd           
0001f3   517c     MOV	0x7c, R0            
0001f4   0efc     MOVZ	R0, 0xfc           
0001f5   517d     MOV	0x7d, R0            
0001f6   e101     MOVB	#0x01              
0001f7   0e80     MOVZ	R0, 0x80           
0001f8   517e     MOV	0x7e, R0            
0001f9   e100     MOVB	#0x00              
0001fa   0efe     MOVZ	R0, 0xfe           
0001fb   e01a     MOVP	#0x1A              
0001fc   da50     CALL	#0xa50             
0001fd   e001     MOVP	#0x01              
0001fe   e101     MOVB	#0x01              
0001ff   5181     MOV	0x81, R0            
000200   0e7e     MOVZ	R0, 0x7e           
000201   5182     MOV	0x82, R0            
000202   0e82     MOVZ	R0, 0x82           
000203   5284     MOV	R1, 0x84            
000204   e102     MOVB	#0x02              
000205   f741     ST	[R1], R0             
000206   ff11     INC	R1                  
000207   e101     MOVB	#0x01              
000208   0e81     MOVZ	R0, 0x81           
000209   e102     MOVB	#0x02              
00020a   f741     ST	[R1], R0             
00020b   6003     CLR	0x3, 0              
00020c   e101     MOVB	#0x01              
00020d   1285     RLCR	0x85               
00020e   5184     MOV	0x84, R0            
00020f   98a0     MOV	R0, #0xa0           
000210   2184     ADD	0x84, R0            
000211   5284     MOV	R1, 0x84            
000212   e102     MOVB	#0x02              
000213   f708     LD	R0, [R1]             
000214   e101     MOVB	#0x01              
000215   5182     MOV	0x82, R0            
000216   ff11     INC	R1                  
000217   e102     MOVB	#0x02              
000218   f708     LD	R0, [R1]             
000219   e101     MOVB	#0x01              
00021a   5181     MOV	0x81, R0            
00021b   0e82     MOVZ	R0, 0x82           
00021c   3081     ORL	R0, 0x81            
00021d   7a03     JB	0x3, 2               
00021e   c23e     JMP	#0x23e              
00021f   6003     CLR	0x3, 0              
000220   1285     RLCR	0x85               
000221   5184     MOV	0x84, R0            
000222   98a0     MOV	R0, #0xa0           
000223   2184     ADD	0x84, R0            
000224   6003     CLR	0x3, 0              
000225   1285     RLCR	0x85               
000226   5182     MOV	0x82, R0            
000227   98a8     MOV	R0, #0xa8           
000228   2182     ADD	0x82, R0            
000229   5282     MOV	R1, 0x82            
00022a   e102     MOVB	#0x02              
00022b   f708     LD	R0, [R1]             
00022c   e101     MOVB	#0x01              
00022d   5180     MOV	0x80, R0            
00022e   ff11     INC	R1                  
00022f   e102     MOVB	#0x02              
000230   f708     LD	R0, [R1]             
000231   e100     MOVB	#0x00              
000232   51fe     MOV	0xfe, R0            
000233   e101     MOVB	#0x01              
000234   0e80     MOVZ	R0, 0x80           
000235   5284     MOV	R1, 0x84            
000236   e102     MOVB	#0x02              
000237   f741     ST	[R1], R0             
000238   ff11     INC	R1                  
000239   e100     MOVB	#0x00              
00023a   0efe     MOVZ	R0, 0xfe           
00023b   e102     MOVB	#0x02              
00023c   f741     ST	[R1], R0             
00023d   c69b     JMP	#0x69b              
00023e   6003     CLR	0x3, 0              
00023f   1285     RLCR	0x85               
000240   5184     MOV	0x84, R0            
000241   98a0     MOV	R0, #0xa0           
000242   2184     ADD	0x84, R0            
000243   6003     CLR	0x3, 0              
000244   1285     RLCR	0x85               
000245   5182     MOV	0x82, R0            
000246   98a8     MOV	R0, #0xa8           
000247   2182     ADD	0x82, R0            
000248   5282     MOV	R1, 0x82            
000249   e102     MOVB	#0x02              
00024a   f708     LD	R0, [R1]             
00024b   e101     MOVB	#0x01              
00024c   5180     MOV	0x80, R0            
00024d   ff11     INC	R1                  
00024e   e102     MOVB	#0x02              
00024f   f708     LD	R0, [R1]             
000250   e100     MOVB	#0x00              
000251   51fe     MOV	0xfe, R0            
000252   6003     CLR	0x3, 0              
000253   e101     MOVB	#0x01              
000254   1285     RLCR	0x85               
000255   5182     MOV	0x82, R0            
000256   98a0     MOV	R0, #0xa0           
000257   2182     ADD	0x82, R0            
000258   5282     MOV	R1, 0x82            
000259   e102     MOVB	#0x02              
00025a   f708     LD	R0, [R1]             
00025b   e100     MOVB	#0x00              
00025c   51fd     MOV	0xfd, R0            
00025d   ff11     INC	R1                  
00025e   e102     MOVB	#0x02              
00025f   f708     LD	R0, [R1]             
000260   e100     MOVB	#0x00              
000261   51fc     MOV	0xfc, R0            
000262   9802     MOV	R0, #0x2            
000263   517b     MOV	0x7b, R0            
000264   0efd     MOVZ	R0, 0xfd           
000265   517c     MOV	0x7c, R0            
000266   0efc     MOVZ	R0, 0xfc           
000267   517d     MOV	0x7d, R0            
000268   e101     MOVB	#0x01              
000269   0e80     MOVZ	R0, 0x80           
00026a   517e     MOV	0x7e, R0            
00026b   e100     MOVB	#0x00              
00026c   0efe     MOVZ	R0, 0xfe           
00026d   e01c     MOVP	#0x1C              
00026e   dcdf     CALL	#0xcdf             
00026f   e002     MOVP	#0x02              
000270   e101     MOVB	#0x01              
000271   5181     MOV	0x81, R0            
000272   0e7e     MOVZ	R0, 0x7e           
000273   5182     MOV	0x82, R0            
000274   0e82     MOVZ	R0, 0x82           
000275   5284     MOV	R1, 0x84            
000276   e102     MOVB	#0x02              
000277   f741     ST	[R1], R0             
000278   ff11     INC	R1                  
000279   e101     MOVB	#0x01              
00027a   0e81     MOVZ	R0, 0x81           
00027b   e102     MOVB	#0x02              
00027c   f741     ST	[R1], R0             
00027d   e101     MOVB	#0x01              
00027e   0ec1     MOVZ	R0, 0xc1           
00027f   30c2     ORL	R0, 0xc2            
000280   7203     JNB	0x3, 2              
000281   c303     JMP	#0x303              
000282   9801     MOV	R0, #0x1            
000283   5184     MOV	0x84, R0            
000284   9800     MOV	R0, #0x0            
000285   5183     MOV	0x83, R0            
000286   0e85     MOVZ	R0, 0x85           
000287   ff10     INC	R0                  
000288   c28d     JMP	#0x28d              
000289   6003     CLR	0x3, 0              
00028a   e101     MOVB	#0x01              
00028b   1384     RLC	0x84                
00028c   1383     RLC	0x83                
00028d   ff58     DECJZ	R0                
00028e   c289     JMP	#0x289              
00028f   0e84     MOVZ	R0, 0x84           
000290   5182     MOV	0x82, R0            
000291   28c1     AND	R0, 0xc1            
000292   5184     MOV	0x84, R0            
000293   0e83     MOVZ	R0, 0x83           
000294   5181     MOV	0x81, R0            
000295   28c2     AND	R0, 0xc2            
000296   5183     MOV	0x83, R0            
000297   0e84     MOVZ	R0, 0x84           
000298   3083     ORL	R0, 0x83            
000299   7203     JNB	0x3, 2              
00029a   c2a7     JMP	#0x2a7              
00029b   6003     CLR	0x3, 0              
00029c   1285     RLCR	0x85               
00029d   5184     MOV	0x84, R0            
00029e   98df     MOV	R0, #0xdf           
00029f   2184     ADD	0x84, R0            
0002a0   5284     MOV	R1, 0x84            
0002a1   f708     LD	R0, [R1]             
0002a2   5182     MOV	0x82, R0            
0002a3   ff11     INC	R1                  
0002a4   f708     LD	R0, [R1]             
0002a5   5181     MOV	0x81, R0            
0002a6   c32b     JMP	#0x32b              
0002a7   9802     MOV	R0, #0x2            
0002a8   517c     MOV	0x7c, R0            
0002a9   9800     MOV	R0, #0x0            
0002aa   517d     MOV	0x7d, R0            
0002ab   0e85     MOVZ	R0, 0x85           
0002ac   517e     MOV	0x7e, R0            
0002ad   9800     MOV	R0, #0x0            
0002ae   e01e     MOVP	#0x1E              
0002af   de4a     CALL	#0xe4a             
0002b0   e002     MOVP	#0x02              
0002b1   e101     MOVB	#0x01              
0002b2   5183     MOV	0x83, R0            
0002b3   507e     MOV	R0, 0x7e            
0002b4   5184     MOV	0x84, R0            
0002b5   9832     MOV	R0, #0x32           
0002b6   2184     ADD	0x84, R0            
0002b7   981f     MOV	R0, #0x1f           
0002b8   88ff     AND	R0, #0xff           
0002b9   7003     JNB	0x3, 0              
0002ba   ff10     INC	R0                  
0002bb   7203     JNB	0x3, 2              
0002bc   c2be     JMP	#0x2be              
0002bd   2183     ADD	0x83, R0            
0002be   5283     MOV	R1, 0x83            
0002bf   5084     MOV	R0, 0x84            
0002c0   e01f     MOVP	#0x1F              
0002c1   df60     CALL	#0xf60             
0002c2   e002     MOVP	#0x02              
0002c3   e101     MOVB	#0x01              
0002c4   5182     MOV	0x82, R0            
0002c5   5283     MOV	R1, 0x83            
0002c6   5084     MOV	R0, 0x84            
0002c7   8001     ADD	R0, #0x1            
0002c8   7003     JNB	0x3, 0              
0002c9   ff11     INC	R1                  
0002ca   e01f     MOVP	#0x1F              
0002cb   df60     CALL	#0xf60             
0002cc   e002     MOVP	#0x02              
0002cd   e101     MOVB	#0x01              
0002ce   5181     MOV	0x81, R0            
0002cf   9802     MOV	R0, #0x2            
0002d0   517c     MOV	0x7c, R0            
0002d1   9800     MOV	R0, #0x0            
0002d2   517d     MOV	0x7d, R0            
0002d3   0e85     MOVZ	R0, 0x85           
0002d4   517e     MOV	0x7e, R0            
0002d5   9800     MOV	R0, #0x0            
0002d6   e01e     MOVP	#0x1E              
0002d7   de4a     CALL	#0xe4a             
0002d8   e002     MOVP	#0x02              
0002d9   e101     MOVB	#0x01              
0002da   5183     MOV	0x83, R0            
0002db   507e     MOV	R0, 0x7e            
0002dc   5184     MOV	0x84, R0            
0002dd   982e     MOV	R0, #0x2e           
0002de   2184     ADD	0x84, R0            
0002df   981f     MOV	R0, #0x1f           
0002e0   88ff     AND	R0, #0xff           
0002e1   7003     JNB	0x3, 0              
0002e2   ff10     INC	R0                  
0002e3   7203     JNB	0x3, 2              
0002e4   c2e6     JMP	#0x2e6              
0002e5   2183     ADD	0x83, R0            
0002e6   5283     MOV	R1, 0x83            
0002e7   5084     MOV	R0, 0x84            
0002e8   e01f     MOVP	#0x1F              
0002e9   df60     CALL	#0xf60             
0002ea   e002     MOVP	#0x02              
0002eb   e101     MOVB	#0x01              
0002ec   5180     MOV	0x80, R0            
0002ed   5283     MOV	R1, 0x83            
0002ee   5084     MOV	R0, 0x84            
0002ef   8001     ADD	R0, #0x1            
0002f0   7003     JNB	0x3, 0              
0002f1   ff11     INC	R1                  
0002f2   e01f     MOVP	#0x1F              
0002f3   df60     CALL	#0xf60             
0002f4   e002     MOVP	#0x02              
0002f5   e100     MOVB	#0x00              
0002f6   51fe     MOV	0xfe, R0            
0002f7   e101     MOVB	#0x01              
0002f8   5080     MOV	R0, 0x80            
0002f9   2182     ADD	0x82, R0            
0002fa   e100     MOVB	#0x00              
0002fb   0efe     MOVZ	R0, 0xfe           
0002fc   7003     JNB	0x3, 0              
0002fd   ff10     INC	R0                  
0002fe   7203     JNB	0x3, 2              
0002ff   c302     JMP	#0x302              
000300   e101     MOVB	#0x01              
000301   2181     ADD	0x81, R0            
000302   c32b     JMP	#0x32b              
000303   9802     MOV	R0, #0x2            
000304   517c     MOV	0x7c, R0            
000305   9800     MOV	R0, #0x0            
000306   517d     MOV	0x7d, R0            
000307   0e85     MOVZ	R0, 0x85           
000308   517e     MOV	0x7e, R0            
000309   9800     MOV	R0, #0x0            
00030a   e01e     MOVP	#0x1E              
00030b   de4a     CALL	#0xe4a             
00030c   e003     MOVP	#0x03              
00030d   e101     MOVB	#0x01              
00030e   5183     MOV	0x83, R0            
00030f   507e     MOV	R0, 0x7e            
000310   5184     MOV	0x84, R0            
000311   982e     MOV	R0, #0x2e           
000312   2184     ADD	0x84, R0            
000313   981f     MOV	R0, #0x1f           
000314   88ff     AND	R0, #0xff           
000315   7003     JNB	0x3, 0              
000316   ff10     INC	R0                  
000317   7203     JNB	0x3, 2              
000318   c31a     JMP	#0x31a              
000319   2183     ADD	0x83, R0            
00031a   5283     MOV	R1, 0x83            
00031b   5084     MOV	R0, 0x84            
00031c   e01f     MOVP	#0x1F              
00031d   df60     CALL	#0xf60             
00031e   e003     MOVP	#0x03              
00031f   e101     MOVB	#0x01              
000320   5182     MOV	0x82, R0            
000321   5283     MOV	R1, 0x83            
000322   5084     MOV	R0, 0x84            
000323   8001     ADD	R0, #0x1            
000324   7003     JNB	0x3, 0              
000325   ff11     INC	R1                  
000326   e01f     MOVP	#0x1F              
000327   df60     CALL	#0xf60             
000328   e003     MOVP	#0x03              
000329   e101     MOVB	#0x01              
00032a   5181     MOV	0x81, R0            
00032b   6003     CLR	0x3, 0              
00032c   e101     MOVB	#0x01              
00032d   1285     RLCR	0x85               
00032e   5184     MOV	0x84, R0            
00032f   98a0     MOV	R0, #0xa0           
000330   2184     ADD	0x84, R0            
000331   5284     MOV	R1, 0x84            
000332   e102     MOVB	#0x02              
000333   f708     LD	R0, [R1]             
000334   e101     MOVB	#0x01              
000335   5180     MOV	0x80, R0            
000336   ff11     INC	R1                  
000337   e102     MOVB	#0x02              
000338   f708     LD	R0, [R1]             
000339   e100     MOVB	#0x00              
00033a   51fe     MOV	0xfe, R0            
00033b   6003     CLR	0x3, 0              
00033c   e101     MOVB	#0x01              
00033d   1285     RLCR	0x85               
00033e   5184     MOV	0x84, R0            
00033f   98b0     MOV	R0, #0xb0           
000340   2184     ADD	0x84, R0            
000341   5284     MOV	R1, 0x84            
000342   e102     MOVB	#0x02              
000343   f708     LD	R0, [R1]             
000344   e100     MOVB	#0x00              
000345   51fd     MOV	0xfd, R0            
000346   ff11     INC	R1                  
000347   e102     MOVB	#0x02              
000348   f708     LD	R0, [R1]             
000349   e100     MOVB	#0x00              
00034a   51fc     MOV	0xfc, R0            
00034b   e101     MOVB	#0x01              
00034c   0e82     MOVZ	R0, 0x82           
00034d   e100     MOVB	#0x00              
00034e   38fd     SUB	R0, 0xfd            
00034f   e101     MOVB	#0x01              
000350   5184     MOV	0x84, R0            
000351   0e81     MOVZ	R0, 0x81           
000352   7003     JNB	0x3, 0              
000353   c355     JMP	#0x355              
000354   0a81     INCR	0x81               
000355   e100     MOVB	#0x00              
000356   38fc     SUB	R0, 0xfc            
000357   e101     MOVB	#0x01              
000358   5183     MOV	0x83, R0            
000359   9856     MOV	R0, #0x56           
00035a   2085     ADD	R0, 0x85            
00035b   e100     MOVB	#0x00              
00035c   51fd     MOV	0xfd, R0            
00035d   981f     MOV	R0, #0x1f           
00035e   51fc     MOV	0xfc, R0            
00035f   0208     CLR	R0                  
000360   7003     JNB	0x3, 0              
000361   ff10     INC	R0                  
000362   7203     JNB	0x3, 2              
000363   c365     JMP	#0x365              
000364   21fc     ADD	0xfc, R0            
000365   52fc     MOV	R1, 0xfc            
000366   50fd     MOV	R0, 0xfd            
000367   e01f     MOVP	#0x1F              
000368   df60     CALL	#0xf60             
000369   e003     MOVP	#0x03              
00036a   e100     MOVB	#0x00              
00036b   51fb     MOV	0xfb, R0            
00036c   03fc     CLR	0xfc                
00036d   0efb     MOVZ	R0, 0xfb           
00036e   51fd     MOV	0xfd, R0            
00036f   e101     MOVB	#0x01              
000370   3984     SUB	0x84, R0            
000371   9800     MOV	R0, #0x0            
000372   7803     JB	0x3, 0               
000373   ff10     INC	R0                  
000374   7203     JNB	0x3, 2              
000375   c377     JMP	#0x377              
000376   3983     SUB	0x83, R0            
000377   e100     MOVB	#0x00              
000378   0efe     MOVZ	R0, 0xfe           
000379   e101     MOVB	#0x01              
00037a   3883     SUB	R0, 0x83            
00037b   7a03     JB	0x3, 2               
00037c   c37f     JMP	#0x37f              
00037d   0e80     MOVZ	R0, 0x80           
00037e   3884     SUB	R0, 0x84            
00037f   7803     JB	0x3, 0               
000380   c42a     JMP	#0x42a              
000381   6003     CLR	0x3, 0              
000382   1285     RLCR	0x85               
000383   5184     MOV	0x84, R0            
000384   9898     MOV	R0, #0x98           
000385   2184     ADD	0x84, R0            
000386   5284     MOV	R1, 0x84            
000387   e102     MOVB	#0x02              
000388   f708     LD	R0, [R1]             
000389   e101     MOVB	#0x01              
00038a   5180     MOV	0x80, R0            
00038b   ff11     INC	R1                  
00038c   e102     MOVB	#0x02              
00038d   f708     LD	R0, [R1]             
00038e   e100     MOVB	#0x00              
00038f   51fe     MOV	0xfe, R0            
000390   e101     MOVB	#0x01              
000391   0b80     INC	0x80                
000392   7a03     JB	0x3, 2               
000393   c396     JMP	#0x396              
000394   e100     MOVB	#0x00              
000395   0bfe     INC	0xfe                
000396   e101     MOVB	#0x01              
000397   0e80     MOVZ	R0, 0x80           
000398   5284     MOV	R1, 0x84            
000399   e102     MOVB	#0x02              
00039a   f741     ST	[R1], R0             
00039b   ff11     INC	R1                  
00039c   e100     MOVB	#0x00              
00039d   0efe     MOVZ	R0, 0xfe           
00039e   e102     MOVB	#0x02              
00039f   f741     ST	[R1], R0             
0003a0   6003     CLR	0x3, 0              
0003a1   e101     MOVB	#0x01              
0003a2   1285     RLCR	0x85               
0003a3   5184     MOV	0x84, R0            
0003a4   9890     MOV	R0, #0x90           
0003a5   2184     ADD	0x84, R0            
0003a6   9800     MOV	R0, #0x0            
0003a7   5284     MOV	R1, 0x84            
0003a8   e102     MOVB	#0x02              
0003a9   f741     ST	[R1], R0             
0003aa   ff11     INC	R1                  
0003ab   9800     MOV	R0, #0x0            
0003ac   f741     ST	[R1], R0             
0003ad   6003     CLR	0x3, 0              
0003ae   e101     MOVB	#0x01              
0003af   1285     RLCR	0x85               
0003b0   5184     MOV	0x84, R0            
0003b1   9898     MOV	R0, #0x98           
0003b2   2184     ADD	0x84, R0            
0003b3   5284     MOV	R1, 0x84            
0003b4   e102     MOVB	#0x02              
0003b5   f708     LD	R0, [R1]             
0003b6   e101     MOVB	#0x01              
0003b7   5180     MOV	0x80, R0            
0003b8   ff11     INC	R1                  
0003b9   e102     MOVB	#0x02              
0003ba   f708     LD	R0, [R1]             
0003bb   e100     MOVB	#0x00              
0003bc   51fe     MOV	0xfe, R0            
0003bd   0ebe     MOVZ	R0, 0xbe           
0003be   e101     MOVB	#0x01              
0003bf   5184     MOV	0x84, R0            
0003c0   0383     CLR	0x83                
0003c1   9800     MOV	R0, #0x0            
0003c2   e100     MOVB	#0x00              
0003c3   38fe     SUB	R0, 0xfe            
0003c4   7a03     JB	0x3, 2               
0003c5   c3c9     JMP	#0x3c9              
0003c6   e101     MOVB	#0x01              
0003c7   0e84     MOVZ	R0, 0x84           
0003c8   3880     SUB	R0, 0x80            
0003c9   7803     JB	0x3, 0               
0003ca   c51d     JMP	#0x51d              
0003cb   6003     CLR	0x3, 0              
0003cc   e101     MOVB	#0x01              
0003cd   1285     RLCR	0x85               
0003ce   5184     MOV	0x84, R0            
0003cf   9898     MOV	R0, #0x98           
0003d0   2184     ADD	0x84, R0            
0003d1   e100     MOVB	#0x00              
0003d2   0ebe     MOVZ	R0, 0xbe           
0003d3   e101     MOVB	#0x01              
0003d4   5180     MOV	0x80, R0            
0003d5   e100     MOVB	#0x00              
0003d6   03fe     CLR	0xfe                
0003d7   e101     MOVB	#0x01              
0003d8   0e80     MOVZ	R0, 0x80           
0003d9   5284     MOV	R1, 0x84            
0003da   e102     MOVB	#0x02              
0003db   f741     ST	[R1], R0             
0003dc   ff11     INC	R1                  
0003dd   e100     MOVB	#0x00              
0003de   0efe     MOVZ	R0, 0xfe           
0003df   e102     MOVB	#0x02              
0003e0   f741     ST	[R1], R0             
0003e1   9801     MOV	R0, #0x1            
0003e2   e101     MOVB	#0x01              
0003e3   5184     MOV	0x84, R0            
0003e4   9800     MOV	R0, #0x0            
0003e5   5183     MOV	0x83, R0            
0003e6   0e85     MOVZ	R0, 0x85           
0003e7   ff10     INC	R0                  
0003e8   c3ed     JMP	#0x3ed              
0003e9   6003     CLR	0x3, 0              
0003ea   e101     MOVB	#0x01              
0003eb   1384     RLC	0x84                
0003ec   1383     RLC	0x83                
0003ed   ff58     DECJZ	R0                
0003ee   c3e9     JMP	#0x3e9              
0003ef   0e84     MOVZ	R0, 0x84           
0003f0   5180     MOV	0x80, R0            
0003f1   0e80     MOVZ	R0, 0x80           
0003f2   28c1     AND	R0, 0xc1            
0003f3   5184     MOV	0x84, R0            
0003f4   0e83     MOVZ	R0, 0x83           
0003f5   e100     MOVB	#0x00              
0003f6   51fe     MOV	0xfe, R0            
0003f7   e101     MOVB	#0x01              
0003f8   28c2     AND	R0, 0xc2            
0003f9   5183     MOV	0x83, R0            
0003fa   0e84     MOVZ	R0, 0x84           
0003fb   3083     ORL	R0, 0x83            
0003fc   7a03     JB	0x3, 2               
0003fd   c41e     JMP	#0x41e              
0003fe   9801     MOV	R0, #0x1            
0003ff   5184     MOV	0x84, R0            
000400   9800     MOV	R0, #0x0            
000401   5183     MOV	0x83, R0            
000402   0e85     MOVZ	R0, 0x85           
000403   ff10     INC	R0                  
000404   c409     JMP	#0x409              
000405   6003     CLR	0x3, 0              
000406   e101     MOVB	#0x01              
000407   1384     RLC	0x84                
000408   1383     RLC	0x83                
000409   ff58     DECJZ	R0                
00040a   c405     JMP	#0x405              
00040b   0e84     MOVZ	R0, 0x84           
00040c   5180     MOV	0x80, R0            
00040d   31c1     ORL	0xc1, R0            
00040e   0e83     MOVZ	R0, 0x83           
00040f   e100     MOVB	#0x00              
000410   51fe     MOV	0xfe, R0            
000411   e101     MOVB	#0x01              
000412   31c2     ORL	0xc2, R0            
000413   6003     CLR	0x3, 0              
000414   1285     RLCR	0x85               
000415   5184     MOV	0x84, R0            
000416   98f7     MOV	R0, #0xf7           
000417   2184     ADD	0x84, R0            
000418   9800     MOV	R0, #0x0            
000419   5284     MOV	R1, 0x84            
00041a   f741     ST	[R1], R0             
00041b   ff11     INC	R1                  
00041c   9800     MOV	R0, #0x0            
00041d   f741     ST	[R1], R0             
00041e   6003     CLR	0x3, 0              
00041f   1285     RLCR	0x85               
000420   5184     MOV	0x84, R0            
000421   98df     MOV	R0, #0xdf           
000422   2184     ADD	0x84, R0            
000423   0e82     MOVZ	R0, 0x82           
000424   5284     MOV	R1, 0x84            
000425   f741     ST	[R1], R0             
000426   ff11     INC	R1                  
000427   0e81     MOVZ	R0, 0x81           
000428   f741     ST	[R1], R0             
000429   c51d     JMP	#0x51d              
00042a   6003     CLR	0x3, 0              
00042b   1285     RLCR	0x85               
00042c   5184     MOV	0x84, R0            
00042d   98a0     MOV	R0, #0xa0           
00042e   2184     ADD	0x84, R0            
00042f   5284     MOV	R1, 0x84            
000430   e102     MOVB	#0x02              
000431   f708     LD	R0, [R1]             
000432   e101     MOVB	#0x01              
000433   5180     MOV	0x80, R0            
000434   ff11     INC	R1                  
000435   e102     MOVB	#0x02              
000436   f708     LD	R0, [R1]             
000437   e100     MOVB	#0x00              
000438   51fe     MOV	0xfe, R0            
000439   6003     CLR	0x3, 0              
00043a   e101     MOVB	#0x01              
00043b   1285     RLCR	0x85               
00043c   5184     MOV	0x84, R0            
00043d   98b0     MOV	R0, #0xb0           
00043e   2184     ADD	0x84, R0            
00043f   5284     MOV	R1, 0x84            
000440   e102     MOVB	#0x02              
000441   f708     LD	R0, [R1]             
000442   e100     MOVB	#0x00              
000443   51fd     MOV	0xfd, R0            
000444   ff11     INC	R1                  
000445   e102     MOVB	#0x02              
000446   f708     LD	R0, [R1]             
000447   e100     MOVB	#0x00              
000448   51fc     MOV	0xfc, R0            
000449   e101     MOVB	#0x01              
00044a   0e82     MOVZ	R0, 0x82           
00044b   e100     MOVB	#0x00              
00044c   38fd     SUB	R0, 0xfd            
00044d   e101     MOVB	#0x01              
00044e   5184     MOV	0x84, R0            
00044f   0e81     MOVZ	R0, 0x81           
000450   7003     JNB	0x3, 0              
000451   c453     JMP	#0x453              
000452   0a81     INCR	0x81               
000453   e100     MOVB	#0x00              
000454   38fc     SUB	R0, 0xfc            
000455   e101     MOVB	#0x01              
000456   5183     MOV	0x83, R0            
000457   9856     MOV	R0, #0x56           
000458   2085     ADD	R0, 0x85            
000459   e100     MOVB	#0x00              
00045a   51fd     MOV	0xfd, R0            
00045b   981f     MOV	R0, #0x1f           
00045c   51fc     MOV	0xfc, R0            
00045d   0208     CLR	R0                  
00045e   7003     JNB	0x3, 0              
00045f   ff10     INC	R0                  
000460   7203     JNB	0x3, 2              
000461   c463     JMP	#0x463              
000462   21fc     ADD	0xfc, R0            
000463   52fc     MOV	R1, 0xfc            
000464   50fd     MOV	R0, 0xfd            
000465   e01f     MOVP	#0x1F              
000466   df60     CALL	#0xf60             
000467   e004     MOVP	#0x04              
000468   e100     MOVB	#0x00              
000469   51fb     MOV	0xfb, R0            
00046a   0efb     MOVZ	R0, 0xfb           
00046b   51fd     MOV	0xfd, R0            
00046c   03fc     CLR	0xfc                
00046d   50fd     MOV	R0, 0xfd            
00046e   e101     MOVB	#0x01              
00046f   2184     ADD	0x84, R0            
000470   9800     MOV	R0, #0x0            
000471   7003     JNB	0x3, 0              
000472   ff10     INC	R0                  
000473   7203     JNB	0x3, 2              
000474   c476     JMP	#0x476              
000475   2183     ADD	0x83, R0            
000476   0e83     MOVZ	R0, 0x83           
000477   e100     MOVB	#0x00              
000478   38fe     SUB	R0, 0xfe            
000479   7a03     JB	0x3, 2               
00047a   c47e     JMP	#0x47e              
00047b   e101     MOVB	#0x01              
00047c   0e84     MOVZ	R0, 0x84           
00047d   3880     SUB	R0, 0x80            
00047e   7803     JB	0x3, 0               
00047f   c51d     JMP	#0x51d              
000480   6003     CLR	0x3, 0              
000481   e101     MOVB	#0x01              
000482   1285     RLCR	0x85               
000483   5184     MOV	0x84, R0            
000484   9898     MOV	R0, #0x98           
000485   2184     ADD	0x84, R0            
000486   9800     MOV	R0, #0x0            
000487   5284     MOV	R1, 0x84            
000488   e102     MOVB	#0x02              
000489   f741     ST	[R1], R0             
00048a   ff11     INC	R1                  
00048b   9800     MOV	R0, #0x0            
00048c   f741     ST	[R1], R0             
00048d   6003     CLR	0x3, 0              
00048e   e101     MOVB	#0x01              
00048f   1285     RLCR	0x85               
000490   5184     MOV	0x84, R0            
000491   9890     MOV	R0, #0x90           
000492   2184     ADD	0x84, R0            
000493   5284     MOV	R1, 0x84            
000494   e102     MOVB	#0x02              
000495   f708     LD	R0, [R1]             
000496   e101     MOVB	#0x01              
000497   5180     MOV	0x80, R0            
000498   ff11     INC	R1                  
000499   e102     MOVB	#0x02              
00049a   f708     LD	R0, [R1]             
00049b   e100     MOVB	#0x00              
00049c   51fe     MOV	0xfe, R0            
00049d   e101     MOVB	#0x01              
00049e   0b80     INC	0x80                
00049f   7a03     JB	0x3, 2               
0004a0   c4a3     JMP	#0x4a3              
0004a1   e100     MOVB	#0x00              
0004a2   0bfe     INC	0xfe                
0004a3   e101     MOVB	#0x01              
0004a4   0e80     MOVZ	R0, 0x80           
0004a5   5284     MOV	R1, 0x84            
0004a6   e102     MOVB	#0x02              
0004a7   f741     ST	[R1], R0             
0004a8   ff11     INC	R1                  
0004a9   e100     MOVB	#0x00              
0004aa   0efe     MOVZ	R0, 0xfe           
0004ab   e102     MOVB	#0x02              
0004ac   f741     ST	[R1], R0             
0004ad   6003     CLR	0x3, 0              
0004ae   e101     MOVB	#0x01              
0004af   1285     RLCR	0x85               
0004b0   5184     MOV	0x84, R0            
0004b1   9890     MOV	R0, #0x90           
0004b2   2184     ADD	0x84, R0            
0004b3   5284     MOV	R1, 0x84            
0004b4   e102     MOVB	#0x02              
0004b5   f708     LD	R0, [R1]             
0004b6   e101     MOVB	#0x01              
0004b7   5180     MOV	0x80, R0            
0004b8   ff11     INC	R1                  
0004b9   e102     MOVB	#0x02              
0004ba   f708     LD	R0, [R1]             
0004bb   e100     MOVB	#0x00              
0004bc   51fe     MOV	0xfe, R0            
0004bd   0ebe     MOVZ	R0, 0xbe           
0004be   e101     MOVB	#0x01              
0004bf   5184     MOV	0x84, R0            
0004c0   0383     CLR	0x83                
0004c1   9800     MOV	R0, #0x0            
0004c2   e100     MOVB	#0x00              
0004c3   38fe     SUB	R0, 0xfe            
0004c4   7a03     JB	0x3, 2               
0004c5   c4c9     JMP	#0x4c9              
0004c6   e101     MOVB	#0x01              
0004c7   0e84     MOVZ	R0, 0x84           
0004c8   3880     SUB	R0, 0x80            
0004c9   7803     JB	0x3, 0               
0004ca   c51d     JMP	#0x51d              
0004cb   6003     CLR	0x3, 0              
0004cc   e101     MOVB	#0x01              
0004cd   1285     RLCR	0x85               
0004ce   5184     MOV	0x84, R0            
0004cf   9890     MOV	R0, #0x90           
0004d0   2184     ADD	0x84, R0            
0004d1   e100     MOVB	#0x00              
0004d2   0ebe     MOVZ	R0, 0xbe           
0004d3   e101     MOVB	#0x01              
0004d4   5180     MOV	0x80, R0            
0004d5   e100     MOVB	#0x00              
0004d6   03fe     CLR	0xfe                
0004d7   e101     MOVB	#0x01              
0004d8   0e80     MOVZ	R0, 0x80           
0004d9   5284     MOV	R1, 0x84            
0004da   e102     MOVB	#0x02              
0004db   f741     ST	[R1], R0             
0004dc   ff11     INC	R1                  
0004dd   9800     MOV	R0, #0x0            
0004de   f741     ST	[R1], R0             
0004df   9801     MOV	R0, #0x1            
0004e0   e101     MOVB	#0x01              
0004e1   5184     MOV	0x84, R0            
0004e2   9800     MOV	R0, #0x0            
0004e3   5183     MOV	0x83, R0            
0004e4   0e85     MOVZ	R0, 0x85           
0004e5   ff10     INC	R0                  
0004e6   c4eb     JMP	#0x4eb              
0004e7   6003     CLR	0x3, 0              
0004e8   e101     MOVB	#0x01              
0004e9   1384     RLC	0x84                
0004ea   1383     RLC	0x83                
0004eb   ff58     DECJZ	R0                
0004ec   c4e7     JMP	#0x4e7              
0004ed   0e84     MOVZ	R0, 0x84           
0004ee   5180     MOV	0x80, R0            
0004ef   28c1     AND	R0, 0xc1            
0004f0   5184     MOV	0x84, R0            
0004f1   0e83     MOVZ	R0, 0x83           
0004f2   e100     MOVB	#0x00              
0004f3   51fe     MOV	0xfe, R0            
0004f4   e101     MOVB	#0x01              
0004f5   28c2     AND	R0, 0xc2            
0004f6   5183     MOV	0x83, R0            
0004f7   0e84     MOVZ	R0, 0x84           
0004f8   3083     ORL	R0, 0x83            
0004f9   7203     JNB	0x3, 2              
0004fa   c51d     JMP	#0x51d              
0004fb   9801     MOV	R0, #0x1            
0004fc   5184     MOV	0x84, R0            
0004fd   9800     MOV	R0, #0x0            
0004fe   5183     MOV	0x83, R0            
0004ff   0e85     MOVZ	R0, 0x85           
000500   ff10     INC	R0                  
000501   c506     JMP	#0x506              
000502   6003     CLR	0x3, 0              
000503   e101     MOVB	#0x01              
000504   1384     RLC	0x84                
000505   1383     RLC	0x83                
000506   ff58     DECJZ	R0                
000507   c502     JMP	#0x502              
000508   0584     CPL	0x84                
000509   0583     CPL	0x83                
00050a   0e84     MOVZ	R0, 0x84           
00050b   5180     MOV	0x80, R0            
00050c   29c1     AND	0xc1, R0            
00050d   0e83     MOVZ	R0, 0x83           
00050e   e100     MOVB	#0x00              
00050f   51fe     MOV	0xfe, R0            
000510   e101     MOVB	#0x01              
000511   29c2     AND	0xc2, R0            
000512   6003     CLR	0x3, 0              
000513   1285     RLCR	0x85               
000514   5184     MOV	0x84, R0            
000515   98f7     MOV	R0, #0xf7           
000516   2184     ADD	0x84, R0            
000517   9800     MOV	R0, #0x0            
000518   5284     MOV	R1, 0x84            
000519   f741     ST	[R1], R0             
00051a   ff11     INC	R1                  
00051b   9800     MOV	R0, #0x0            
00051c   f741     ST	[R1], R0             
00051d   6003     CLR	0x3, 0              
00051e   e101     MOVB	#0x01              
00051f   1285     RLCR	0x85               
000520   5184     MOV	0x84, R0            
000521   98a0     MOV	R0, #0xa0           
000522   2184     ADD	0x84, R0            
000523   5284     MOV	R1, 0x84            
000524   e102     MOVB	#0x02              
000525   f708     LD	R0, [R1]             
000526   e101     MOVB	#0x01              
000527   5180     MOV	0x80, R0            
000528   ff11     INC	R1                  
000529   e102     MOVB	#0x02              
00052a   f708     LD	R0, [R1]             
00052b   e100     MOVB	#0x00              
00052c   51fe     MOV	0xfe, R0            
00052d   6003     CLR	0x3, 0              
00052e   e101     MOVB	#0x01              
00052f   1285     RLCR	0x85               
000530   5184     MOV	0x84, R0            
000531   98b0     MOV	R0, #0xb0           
000532   2184     ADD	0x84, R0            
000533   5284     MOV	R1, 0x84            
000534   e102     MOVB	#0x02              
000535   f708     LD	R0, [R1]             
000536   e100     MOVB	#0x00              
000537   51fd     MOV	0xfd, R0            
000538   ff11     INC	R1                  
000539   e102     MOVB	#0x02              
00053a   f708     LD	R0, [R1]             
00053b   e100     MOVB	#0x00              
00053c   51fc     MOV	0xfc, R0            
00053d   9802     MOV	R0, #0x2            
00053e   517c     MOV	0x7c, R0            
00053f   9800     MOV	R0, #0x0            
000540   517d     MOV	0x7d, R0            
000541   e101     MOVB	#0x01              
000542   0e85     MOVZ	R0, 0x85           
000543   517e     MOV	0x7e, R0            
000544   9800     MOV	R0, #0x0            
000545   e01e     MOVP	#0x1E              
000546   de4a     CALL	#0xe4a             
000547   e005     MOVP	#0x05              
000548   e101     MOVB	#0x01              
000549   5183     MOV	0x83, R0            
00054a   507e     MOV	R0, 0x7e            
00054b   5184     MOV	0x84, R0            
00054c   983a     MOV	R0, #0x3a           
00054d   2184     ADD	0x84, R0            
00054e   981f     MOV	R0, #0x1f           
00054f   88ff     AND	R0, #0xff           
000550   7003     JNB	0x3, 0              
000551   ff10     INC	R0                  
000552   7203     JNB	0x3, 2              
000553   c555     JMP	#0x555              
000554   2183     ADD	0x83, R0            
000555   5283     MOV	R1, 0x83            
000556   5084     MOV	R0, 0x84            
000557   e01f     MOVP	#0x1F              
000558   df60     CALL	#0xf60             
000559   e005     MOVP	#0x05              
00055a   e100     MOVB	#0x00              
00055b   51fb     MOV	0xfb, R0            
00055c   e101     MOVB	#0x01              
00055d   5283     MOV	R1, 0x83            
00055e   5084     MOV	R0, 0x84            
00055f   8001     ADD	R0, #0x1            
000560   7003     JNB	0x3, 0              
000561   ff11     INC	R1                  
000562   e01f     MOVP	#0x1F              
000563   df60     CALL	#0xf60             
000564   e005     MOVP	#0x05              
000565   e100     MOVB	#0x00              
000566   51fa     MOV	0xfa, R0            
000567   50fb     MOV	R0, 0xfb            
000568   21fd     ADD	0xfd, R0            
000569   0efa     MOVZ	R0, 0xfa           
00056a   7003     JNB	0x3, 0              
00056b   ff10     INC	R0                  
00056c   7203     JNB	0x3, 2              
00056d   c56f     JMP	#0x56f              
00056e   21fc     ADD	0xfc, R0            
00056f   0efe     MOVZ	R0, 0xfe           
000570   38fc     SUB	R0, 0xfc            
000571   7a03     JB	0x3, 2               
000572   c577     JMP	#0x577              
000573   e101     MOVB	#0x01              
000574   0e80     MOVZ	R0, 0x80           
000575   e100     MOVB	#0x00              
000576   38fd     SUB	R0, 0xfd            
000577   7003     JNB	0x3, 0              
000578   c57c     JMP	#0x57c              
000579   e101     MOVB	#0x01              
00057a   0b88     INC	0x88                
00057b   c5d9     JMP	#0x5d9              
00057c   6003     CLR	0x3, 0              
00057d   e101     MOVB	#0x01              
00057e   1285     RLCR	0x85               
00057f   5184     MOV	0x84, R0            
000580   98a0     MOV	R0, #0xa0           
000581   2184     ADD	0x84, R0            
000582   5284     MOV	R1, 0x84            
000583   e102     MOVB	#0x02              
000584   f708     LD	R0, [R1]             
000585   e101     MOVB	#0x01              
000586   5180     MOV	0x80, R0            
000587   ff11     INC	R1                  
000588   e102     MOVB	#0x02              
000589   f708     LD	R0, [R1]             
00058a   e100     MOVB	#0x00              
00058b   51fe     MOV	0xfe, R0            
00058c   6003     CLR	0x3, 0              
00058d   e101     MOVB	#0x01              
00058e   1285     RLCR	0x85               
00058f   5184     MOV	0x84, R0            
000590   98b0     MOV	R0, #0xb0           
000591   2184     ADD	0x84, R0            
000592   5284     MOV	R1, 0x84            
000593   e102     MOVB	#0x02              
000594   f708     LD	R0, [R1]             
000595   e100     MOVB	#0x00              
000596   51fd     MOV	0xfd, R0            
000597   ff11     INC	R1                  
000598   e102     MOVB	#0x02              
000599   f708     LD	R0, [R1]             
00059a   e100     MOVB	#0x00              
00059b   51fc     MOV	0xfc, R0            
00059c   9802     MOV	R0, #0x2            
00059d   517c     MOV	0x7c, R0            
00059e   9800     MOV	R0, #0x0            
00059f   517d     MOV	0x7d, R0            
0005a0   e101     MOVB	#0x01              
0005a1   0e85     MOVZ	R0, 0x85           
0005a2   517e     MOV	0x7e, R0            
0005a3   9800     MOV	R0, #0x0            
0005a4   e01e     MOVP	#0x1E              
0005a5   de4a     CALL	#0xe4a             
0005a6   e005     MOVP	#0x05              
0005a7   e101     MOVB	#0x01              
0005a8   5183     MOV	0x83, R0            
0005a9   507e     MOV	R0, 0x7e            
0005aa   5184     MOV	0x84, R0            
0005ab   983a     MOV	R0, #0x3a           
0005ac   2184     ADD	0x84, R0            
0005ad   981f     MOV	R0, #0x1f           
0005ae   88ff     AND	R0, #0xff           
0005af   7003     JNB	0x3, 0              
0005b0   ff10     INC	R0                  
0005b1   7203     JNB	0x3, 2              
0005b2   c5b4     JMP	#0x5b4              
0005b3   2183     ADD	0x83, R0            
0005b4   5283     MOV	R1, 0x83            
0005b5   5084     MOV	R0, 0x84            
0005b6   e01f     MOVP	#0x1F              
0005b7   df60     CALL	#0xf60             
0005b8   e005     MOVP	#0x05              
0005b9   e100     MOVB	#0x00              
0005ba   51fb     MOV	0xfb, R0            
0005bb   e101     MOVB	#0x01              
0005bc   5283     MOV	R1, 0x83            
0005bd   5084     MOV	R0, 0x84            
0005be   8001     ADD	R0, #0x1            
0005bf   7003     JNB	0x3, 0              
0005c0   ff11     INC	R1                  
0005c1   e01f     MOVP	#0x1F              
0005c2   df60     CALL	#0xf60             
0005c3   e005     MOVP	#0x05              
0005c4   e100     MOVB	#0x00              
0005c5   51fa     MOV	0xfa, R0            
0005c6   0efb     MOVZ	R0, 0xfb           
0005c7   39fd     SUB	0xfd, R0            
0005c8   0efa     MOVZ	R0, 0xfa           
0005c9   7803     JB	0x3, 0               
0005ca   ff10     INC	R0                  
0005cb   7203     JNB	0x3, 2              
0005cc   c5ce     JMP	#0x5ce              
0005cd   39fc     SUB	0xfc, R0            
0005ce   0efc     MOVZ	R0, 0xfc           
0005cf   38fe     SUB	R0, 0xfe            
0005d0   7a03     JB	0x3, 2               
0005d1   c5d5     JMP	#0x5d5              
0005d2   0efd     MOVZ	R0, 0xfd           
0005d3   e101     MOVB	#0x01              
0005d4   3880     SUB	R0, 0x80            
0005d5   7003     JNB	0x3, 0              
0005d6   c5d9     JMP	#0x5d9              
0005d7   e101     MOVB	#0x01              
0005d8   0b88     INC	0x88                
0005d9   6003     CLR	0x3, 0              
0005da   e101     MOVB	#0x01              
0005db   1285     RLCR	0x85               
0005dc   5184     MOV	0x84, R0            
0005dd   98a0     MOV	R0, #0xa0           
0005de   2184     ADD	0x84, R0            
0005df   5284     MOV	R1, 0x84            
0005e0   e102     MOVB	#0x02              
0005e1   f708     LD	R0, [R1]             
0005e2   e101     MOVB	#0x01              
0005e3   5180     MOV	0x80, R0            
0005e4   ff11     INC	R1                  
0005e5   e102     MOVB	#0x02              
0005e6   f708     LD	R0, [R1]             
0005e7   e100     MOVB	#0x00              
0005e8   51fe     MOV	0xfe, R0            
0005e9   6003     CLR	0x3, 0              
0005ea   e101     MOVB	#0x01              
0005eb   1285     RLCR	0x85               
0005ec   5184     MOV	0x84, R0            
0005ed   98b0     MOV	R0, #0xb0           
0005ee   2184     ADD	0x84, R0            
0005ef   5284     MOV	R1, 0x84            
0005f0   e102     MOVB	#0x02              
0005f1   f708     LD	R0, [R1]             
0005f2   e100     MOVB	#0x00              
0005f3   51fd     MOV	0xfd, R0            
0005f4   ff11     INC	R1                  
0005f5   e102     MOVB	#0x02              
0005f6   f708     LD	R0, [R1]             
0005f7   e100     MOVB	#0x00              
0005f8   51fc     MOV	0xfc, R0            
0005f9   9802     MOV	R0, #0x2            
0005fa   517c     MOV	0x7c, R0            
0005fb   9800     MOV	R0, #0x0            
0005fc   517d     MOV	0x7d, R0            
0005fd   e101     MOVB	#0x01              
0005fe   0e85     MOVZ	R0, 0x85           
0005ff   517e     MOV	0x7e, R0            
000600   9800     MOV	R0, #0x0            
000601   e01e     MOVP	#0x1E              
000602   de4a     CALL	#0xe4a             
000603   e006     MOVP	#0x06              
000604   e101     MOVB	#0x01              
000605   5183     MOV	0x83, R0            
000606   507e     MOV	R0, 0x7e            
000607   5184     MOV	0x84, R0            
000608   9836     MOV	R0, #0x36           
000609   2184     ADD	0x84, R0            
00060a   981f     MOV	R0, #0x1f           
00060b   88ff     AND	R0, #0xff           
00060c   7003     JNB	0x3, 0              
00060d   ff10     INC	R0                  
00060e   7203     JNB	0x3, 2              
00060f   c611     JMP	#0x611              
000610   2183     ADD	0x83, R0            
000611   5283     MOV	R1, 0x83            
000612   5084     MOV	R0, 0x84            
000613   e01f     MOVP	#0x1F              
000614   df60     CALL	#0xf60             
000615   e006     MOVP	#0x06              
000616   e100     MOVB	#0x00              
000617   51fb     MOV	0xfb, R0            
000618   e101     MOVB	#0x01              
000619   5283     MOV	R1, 0x83            
00061a   5084     MOV	R0, 0x84            
00061b   8001     ADD	R0, #0x1            
00061c   7003     JNB	0x3, 0              
00061d   ff11     INC	R1                  
00061e   e01f     MOVP	#0x1F              
00061f   df60     CALL	#0xf60             
000620   e006     MOVP	#0x06              
000621   e100     MOVB	#0x00              
000622   51fa     MOV	0xfa, R0            
000623   50fb     MOV	R0, 0xfb            
000624   21fd     ADD	0xfd, R0            
000625   0efa     MOVZ	R0, 0xfa           
000626   7003     JNB	0x3, 0              
000627   ff10     INC	R0                  
000628   7203     JNB	0x3, 2              
000629   c62b     JMP	#0x62b              
00062a   21fc     ADD	0xfc, R0            
00062b   0efe     MOVZ	R0, 0xfe           
00062c   38fc     SUB	R0, 0xfc            
00062d   7a03     JB	0x3, 2               
00062e   c633     JMP	#0x633              
00062f   e101     MOVB	#0x01              
000630   0e80     MOVZ	R0, 0x80           
000631   e100     MOVB	#0x00              
000632   38fd     SUB	R0, 0xfd            
000633   7003     JNB	0x3, 0              
000634   c63b     JMP	#0x63b              
000635   e101     MOVB	#0x01              
000636   0bc7     INC	0xc7                
000637   7a03     JB	0x3, 2               
000638   c63a     JMP	#0x63a              
000639   0bc8     INC	0xc8                
00063a   c69b     JMP	#0x69b              
00063b   6003     CLR	0x3, 0              
00063c   e101     MOVB	#0x01              
00063d   1285     RLCR	0x85               
00063e   5184     MOV	0x84, R0            
00063f   98a0     MOV	R0, #0xa0           
000640   2184     ADD	0x84, R0            
000641   5284     MOV	R1, 0x84            
000642   e102     MOVB	#0x02              
000643   f708     LD	R0, [R1]             
000644   e101     MOVB	#0x01              
000645   5180     MOV	0x80, R0            
000646   ff11     INC	R1                  
000647   e102     MOVB	#0x02              
000648   f708     LD	R0, [R1]             
000649   e100     MOVB	#0x00              
00064a   51fe     MOV	0xfe, R0            
00064b   6003     CLR	0x3, 0              
00064c   e101     MOVB	#0x01              
00064d   1285     RLCR	0x85               
00064e   5184     MOV	0x84, R0            
00064f   98b0     MOV	R0, #0xb0           
000650   2184     ADD	0x84, R0            
000651   5284     MOV	R1, 0x84            
000652   e102     MOVB	#0x02              
000653   f708     LD	R0, [R1]             
000654   e100     MOVB	#0x00              
000655   51fd     MOV	0xfd, R0            
000656   ff11     INC	R1                  
000657   e102     MOVB	#0x02              
000658   f708     LD	R0, [R1]             
000659   e100     MOVB	#0x00              
00065a   51fc     MOV	0xfc, R0            
00065b   9802     MOV	R0, #0x2            
00065c   517c     MOV	0x7c, R0            
00065d   9800     MOV	R0, #0x0            
00065e   517d     MOV	0x7d, R0            
00065f   e101     MOVB	#0x01              
000660   0e85     MOVZ	R0, 0x85           
000661   517e     MOV	0x7e, R0            
000662   9800     MOV	R0, #0x0            
000663   e01e     MOVP	#0x1E              
000664   de4a     CALL	#0xe4a             
000665   e006     MOVP	#0x06              
000666   e101     MOVB	#0x01              
000667   5183     MOV	0x83, R0            
000668   507e     MOV	R0, 0x7e            
000669   5184     MOV	0x84, R0            
00066a   9836     MOV	R0, #0x36           
00066b   2184     ADD	0x84, R0            
00066c   981f     MOV	R0, #0x1f           
00066d   88ff     AND	R0, #0xff           
00066e   7003     JNB	0x3, 0              
00066f   ff10     INC	R0                  
000670   7203     JNB	0x3, 2              
000671   c673     JMP	#0x673              
000672   2183     ADD	0x83, R0            
000673   5283     MOV	R1, 0x83            
000674   5084     MOV	R0, 0x84            
000675   e01f     MOVP	#0x1F              
000676   df60     CALL	#0xf60             
000677   e006     MOVP	#0x06              
000678   e100     MOVB	#0x00              
000679   51fb     MOV	0xfb, R0            
00067a   e101     MOVB	#0x01              
00067b   5283     MOV	R1, 0x83            
00067c   5084     MOV	R0, 0x84            
00067d   8001     ADD	R0, #0x1            
00067e   7003     JNB	0x3, 0              
00067f   ff11     INC	R1                  
000680   e01f     MOVP	#0x1F              
000681   df60     CALL	#0xf60             
000682   e006     MOVP	#0x06              
000683   e100     MOVB	#0x00              
000684   51fa     MOV	0xfa, R0            
000685   0efb     MOVZ	R0, 0xfb           
000686   39fd     SUB	0xfd, R0            
000687   0efa     MOVZ	R0, 0xfa           
000688   7803     JB	0x3, 0               
000689   ff10     INC	R0                  
00068a   7203     JNB	0x3, 2              
00068b   c68d     JMP	#0x68d              
00068c   39fc     SUB	0xfc, R0            
00068d   0efc     MOVZ	R0, 0xfc           
00068e   38fe     SUB	R0, 0xfe            
00068f   7a03     JB	0x3, 2               
000690   c694     JMP	#0x694              
000691   0efd     MOVZ	R0, 0xfd           
000692   e101     MOVB	#0x01              
000693   3880     SUB	R0, 0x80            
000694   7003     JNB	0x3, 0              
000695   c69b     JMP	#0x69b              
000696   e101     MOVB	#0x01              
000697   0bc7     INC	0xc7                
000698   7a03     JB	0x3, 2               
000699   c69b     JMP	#0x69b              
00069a   0bc8     INC	0xc8                
00069b   e101     MOVB	#0x01              
00069c   0b85     INC	0x85                
00069d   c025     JMP	#0x25               
00069e   9800     MOV	R0, #0x0            
00069f   e100     MOVB	#0x00              
0006a0   30b9     ORL	R0, 0xb9            
0006a1   7203     JNB	0x3, 2              
0006a2   c73f     JMP	#0x73f              
0006a3   06bf     DECR	0xbf               
0006a4   e101     MOVB	#0x01              
0006a5   5185     MOV	0x85, R0            
0006a6   6003     CLR	0x3, 0              
0006a7   1285     RLCR	0x85               
0006a8   5184     MOV	0x84, R0            
0006a9   98a0     MOV	R0, #0xa0           
0006aa   2184     ADD	0x84, R0            
0006ab   5284     MOV	R1, 0x84            
0006ac   e102     MOVB	#0x02              
0006ad   f708     LD	R0, [R1]             
0006ae   e101     MOVB	#0x01              
0006af   5180     MOV	0x80, R0            
0006b0   ff11     INC	R1                  
0006b1   e102     MOVB	#0x02              
0006b2   f708     LD	R0, [R1]             
0006b3   e100     MOVB	#0x00              
0006b4   51fe     MOV	0xfe, R0            
0006b5   6003     CLR	0x3, 0              
0006b6   e101     MOVB	#0x01              
0006b7   1285     RLCR	0x85               
0006b8   5184     MOV	0x84, R0            
0006b9   98b0     MOV	R0, #0xb0           
0006ba   2184     ADD	0x84, R0            
0006bb   5284     MOV	R1, 0x84            
0006bc   e102     MOVB	#0x02              
0006bd   f708     LD	R0, [R1]             
0006be   e100     MOVB	#0x00              
0006bf   51fd     MOV	0xfd, R0            
0006c0   ff11     INC	R1                  
0006c1   e102     MOVB	#0x02              
0006c2   f708     LD	R0, [R1]             
0006c3   e100     MOVB	#0x00              
0006c4   51fc     MOV	0xfc, R0            
0006c5   9858     MOV	R0, #0x58           
0006c6   e101     MOVB	#0x01              
0006c7   2085     ADD	R0, 0x85            
0006c8   5184     MOV	0x84, R0            
0006c9   981f     MOV	R0, #0x1f           
0006ca   5183     MOV	0x83, R0            
0006cb   0208     CLR	R0                  
0006cc   7003     JNB	0x3, 0              
0006cd   ff10     INC	R0                  
0006ce   7203     JNB	0x3, 2              
0006cf   c6d1     JMP	#0x6d1              
0006d0   2183     ADD	0x83, R0            
0006d1   5283     MOV	R1, 0x83            
0006d2   5084     MOV	R0, 0x84            
0006d3   e01f     MOVP	#0x1F              
0006d4   df60     CALL	#0xf60             
0006d5   e006     MOVP	#0x06              
0006d6   e100     MOVB	#0x00              
0006d7   51fb     MOV	0xfb, R0            
0006d8   0efb     MOVZ	R0, 0xfb           
0006d9   e101     MOVB	#0x01              
0006da   5184     MOV	0x84, R0            
0006db   0383     CLR	0x83                
0006dc   5084     MOV	R0, 0x84            
0006dd   e100     MOVB	#0x00              
0006de   21fd     ADD	0xfd, R0            
0006df   9800     MOV	R0, #0x0            
0006e0   7003     JNB	0x3, 0              
0006e1   ff10     INC	R0                  
0006e2   7203     JNB	0x3, 2              
0006e3   c6e5     JMP	#0x6e5              
0006e4   21fc     ADD	0xfc, R0            
0006e5   0efe     MOVZ	R0, 0xfe           
0006e6   38fc     SUB	R0, 0xfc            
0006e7   7a03     JB	0x3, 2               
0006e8   c6ed     JMP	#0x6ed              
0006e9   e101     MOVB	#0x01              
0006ea   0e80     MOVZ	R0, 0x80           
0006eb   e100     MOVB	#0x00              
0006ec   38fd     SUB	R0, 0xfd            
0006ed   7003     JNB	0x3, 0              
0006ee   c6f2     JMP	#0x6f2              
0006ef   e101     MOVB	#0x01              
0006f0   0b87     INC	0x87                
0006f1   c73f     JMP	#0x73f              
0006f2   6003     CLR	0x3, 0              
0006f3   e101     MOVB	#0x01              
0006f4   1285     RLCR	0x85               
0006f5   5184     MOV	0x84, R0            
0006f6   98a0     MOV	R0, #0xa0           
0006f7   2184     ADD	0x84, R0            
0006f8   5284     MOV	R1, 0x84            
0006f9   e102     MOVB	#0x02              
0006fa   f708     LD	R0, [R1]             
0006fb   e101     MOVB	#0x01              
0006fc   5180     MOV	0x80, R0            
0006fd   ff11     INC	R1                  
0006fe   e102     MOVB	#0x02              
0006ff   f708     LD	R0, [R1]             
000700   e100     MOVB	#0x00              
000701   51fe     MOV	0xfe, R0            
000702   6003     CLR	0x3, 0              
000703   e101     MOVB	#0x01              
000704   1285     RLCR	0x85               
000705   5184     MOV	0x84, R0            
000706   98b0     MOV	R0, #0xb0           
000707   2184     ADD	0x84, R0            
000708   5284     MOV	R1, 0x84            
000709   e102     MOVB	#0x02              
00070a   f708     LD	R0, [R1]             
00070b   e100     MOVB	#0x00              
00070c   51fd     MOV	0xfd, R0            
00070d   ff11     INC	R1                  
00070e   e102     MOVB	#0x02              
00070f   f708     LD	R0, [R1]             
000710   e100     MOVB	#0x00              
000711   51fc     MOV	0xfc, R0            
000712   985a     MOV	R0, #0x5a           
000713   e101     MOVB	#0x01              
000714   2085     ADD	R0, 0x85            
000715   5185     MOV	0x85, R0            
000716   981f     MOV	R0, #0x1f           
000717   e100     MOVB	#0x00              
000718   51fb     MOV	0xfb, R0            
000719   0208     CLR	R0                  
00071a   7003     JNB	0x3, 0              
00071b   ff10     INC	R0                  
00071c   7203     JNB	0x3, 2              
00071d   c71f     JMP	#0x71f              
00071e   21fb     ADD	0xfb, R0            
00071f   52fb     MOV	R1, 0xfb            
000720   e101     MOVB	#0x01              
000721   5085     MOV	R0, 0x85            
000722   e01f     MOVP	#0x1F              
000723   df60     CALL	#0xf60             
000724   e007     MOVP	#0x07              
000725   e101     MOVB	#0x01              
000726   5184     MOV	0x84, R0            
000727   e100     MOVB	#0x00              
000728   03fb     CLR	0xfb                
000729   e101     MOVB	#0x01              
00072a   0e84     MOVZ	R0, 0x84           
00072b   5185     MOV	0x85, R0            
00072c   e100     MOVB	#0x00              
00072d   39fd     SUB	0xfd, R0            
00072e   9800     MOV	R0, #0x0            
00072f   7803     JB	0x3, 0               
000730   ff10     INC	R0                  
000731   7203     JNB	0x3, 2              
000732   c734     JMP	#0x734              
000733   39fc     SUB	0xfc, R0            
000734   0efc     MOVZ	R0, 0xfc           
000735   38fe     SUB	R0, 0xfe            
000736   7a03     JB	0x3, 2               
000737   c73b     JMP	#0x73b              
000738   0efd     MOVZ	R0, 0xfd           
000739   e101     MOVB	#0x01              
00073a   3880     SUB	R0, 0x80            
00073b   7003     JNB	0x3, 0              
00073c   c73f     JMP	#0x73f              
00073d   e101     MOVB	#0x01              
00073e   0b87     INC	0x87                
00073f   e101     MOVB	#0x01              
000740   0b86     INC	0x86                
000741   c01a     JMP	#0x1a               
000742   0ec1     MOVZ	R0, 0xc1           
000743   30c2     ORL	R0, 0xc2            
000744   7a03     JB	0x3, 2               
000745   c748     JMP	#0x748              
000746   e100     MOVB	#0x00              
000747   03ca     CLR	0xca                
000748   9800     MOV	R0, #0x0            
000749   e100     MOVB	#0x00              
00074a   30ca     ORL	R0, 0xca            
00074b   7203     JNB	0x3, 2              
00074c   c751     JMP	#0x751              
00074d   e101     MOVB	#0x01              
00074e   03c9     CLR	0xc9                
00074f   03ca     CLR	0xca                
000750   c756     JMP	#0x756              
000751   e101     MOVB	#0x01              
000752   0ec1     MOVZ	R0, 0xc1           
000753   51c9     MOV	0xc9, R0            
000754   0ec2     MOVZ	R0, 0xc2           
000755   51ca     MOV	0xca, R0            
000756   0386     CLR	0x86                
000757   e100     MOVB	#0x00              
000758   0ebf     MOVZ	R0, 0xbf           
000759   e101     MOVB	#0x01              
00075a   3886     SUB	R0, 0x86            
00075b   7003     JNB	0x3, 0              
00075c   c7c8     JMP	#0x7c8              
00075d   0ec9     MOVZ	R0, 0xc9           
00075e   30ca     ORL	R0, 0xca            
00075f   7203     JNB	0x3, 2              
000760   c7c5     JMP	#0x7c5              
000761   9801     MOV	R0, #0x1            
000762   5185     MOV	0x85, R0            
000763   9800     MOV	R0, #0x0            
000764   5184     MOV	0x84, R0            
000765   0e86     MOVZ	R0, 0x86           
000766   ff10     INC	R0                  
000767   c76c     JMP	#0x76c              
000768   6003     CLR	0x3, 0              
000769   e101     MOVB	#0x01              
00076a   1385     RLC	0x85                
00076b   1384     RLC	0x84                
00076c   ff58     DECJZ	R0                
00076d   c768     JMP	#0x768              
00076e   0e85     MOVZ	R0, 0x85           
00076f   5183     MOV	0x83, R0            
000770   28c9     AND	R0, 0xc9            
000771   5185     MOV	0x85, R0            
000772   0e84     MOVZ	R0, 0x84           
000773   5180     MOV	0x80, R0            
000774   28ca     AND	R0, 0xca            
000775   5184     MOV	0x84, R0            
000776   0e85     MOVZ	R0, 0x85           
000777   3084     ORL	R0, 0x84            
000778   7a03     JB	0x3, 2               
000779   c7c5     JMP	#0x7c5              
00077a   6003     CLR	0x3, 0              
00077b   1286     RLCR	0x86               
00077c   5185     MOV	0x85, R0            
00077d   98a0     MOV	R0, #0xa0           
00077e   2185     ADD	0x85, R0            
00077f   5285     MOV	R1, 0x85            
000780   e102     MOVB	#0x02              
000781   f708     LD	R0, [R1]             
000782   e101     MOVB	#0x01              
000783   5183     MOV	0x83, R0            
000784   ff11     INC	R1                  
000785   e102     MOVB	#0x02              
000786   f708     LD	R0, [R1]             
000787   e101     MOVB	#0x01              
000788   5180     MOV	0x80, R0            
000789   6003     CLR	0x3, 0              
00078a   1286     RLCR	0x86               
00078b   5185     MOV	0x85, R0            
00078c   98b0     MOV	R0, #0xb0           
00078d   2185     ADD	0x85, R0            
00078e   5285     MOV	R1, 0x85            
00078f   e102     MOVB	#0x02              
000790   f708     LD	R0, [R1]             
000791   e100     MOVB	#0x00              
000792   51fe     MOV	0xfe, R0            
000793   ff11     INC	R1                  
000794   e102     MOVB	#0x02              
000795   f708     LD	R0, [R1]             
000796   e100     MOVB	#0x00              
000797   51fd     MOV	0xfd, R0            
000798   9858     MOV	R0, #0x58           
000799   e101     MOVB	#0x01              
00079a   2086     ADD	R0, 0x86            
00079b   5185     MOV	0x85, R0            
00079c   981f     MOV	R0, #0x1f           
00079d   5184     MOV	0x84, R0            
00079e   0208     CLR	R0                  
00079f   7003     JNB	0x3, 0              
0007a0   ff10     INC	R0                  
0007a1   7203     JNB	0x3, 2              
0007a2   c7a4     JMP	#0x7a4              
0007a3   2184     ADD	0x84, R0            
0007a4   5284     MOV	R1, 0x84            
0007a5   5085     MOV	R0, 0x85            
0007a6   e01f     MOVP	#0x1F              
0007a7   df60     CALL	#0xf60             
0007a8   e007     MOVP	#0x07              
0007a9   e100     MOVB	#0x00              
0007aa   51fc     MOV	0xfc, R0            
0007ab   0efc     MOVZ	R0, 0xfc           
0007ac   e101     MOVB	#0x01              
0007ad   5185     MOV	0x85, R0            
0007ae   0384     CLR	0x84                
0007af   5085     MOV	R0, 0x85            
0007b0   e100     MOVB	#0x00              
0007b1   21fe     ADD	0xfe, R0            
0007b2   9800     MOV	R0, #0x0            
0007b3   7003     JNB	0x3, 0              
0007b4   ff10     INC	R0                  
0007b5   7203     JNB	0x3, 2              
0007b6   c7b8     JMP	#0x7b8              
0007b7   21fd     ADD	0xfd, R0            
0007b8   e101     MOVB	#0x01              
0007b9   0e80     MOVZ	R0, 0x80           
0007ba   e100     MOVB	#0x00              
0007bb   38fd     SUB	R0, 0xfd            
0007bc   7a03     JB	0x3, 2               
0007bd   c7c2     JMP	#0x7c2              
0007be   e101     MOVB	#0x01              
0007bf   0e83     MOVZ	R0, 0x83           
0007c0   e100     MOVB	#0x00              
0007c1   38fe     SUB	R0, 0xfe            
0007c2   7003     JNB	0x3, 0              
0007c3   c7c5     JMP	#0x7c5              
0007c4   0bcc     INC	0xcc                
0007c5   e101     MOVB	#0x01              
0007c6   0b86     INC	0x86                
0007c7   c757     JMP	#0x757              
0007c8   0386     CLR	0x86                
0007c9   e100     MOVB	#0x00              
0007ca   0ebf     MOVZ	R0, 0xbf           
0007cb   e101     MOVB	#0x01              
0007cc   3886     SUB	R0, 0x86            
0007cd   7003     JNB	0x3, 0              
0007ce   c918     JMP	#0x918              
0007cf   6003     CLR	0x3, 0              
0007d0   1286     RLCR	0x86               
0007d1   5185     MOV	0x85, R0            
0007d2   98a0     MOV	R0, #0xa0           
0007d3   2185     ADD	0x85, R0            
0007d4   5285     MOV	R1, 0x85            
0007d5   e102     MOVB	#0x02              
0007d6   f708     LD	R0, [R1]             
0007d7   e101     MOVB	#0x01              
0007d8   5183     MOV	0x83, R0            
0007d9   ff11     INC	R1                  
0007da   e102     MOVB	#0x02              
0007db   f708     LD	R0, [R1]             
0007dc   e101     MOVB	#0x01              
0007dd   5180     MOV	0x80, R0            
0007de   6003     CLR	0x3, 0              
0007df   1080     RRCR	0x80               
0007e0   5181     MOV	0x81, R0            
0007e1   1083     RRCR	0x83               
0007e2   5182     MOV	0x82, R0            
0007e3   6003     CLR	0x3, 0              
0007e4   1181     RRC	0x81                
0007e5   1182     RRC	0x82                
0007e6   6003     CLR	0x3, 0              
0007e7   1181     RRC	0x81                
0007e8   1182     RRC	0x82                
0007e9   6003     CLR	0x3, 0              
0007ea   1286     RLCR	0x86               
0007eb   5185     MOV	0x85, R0            
0007ec   98ef     MOV	R0, #0xef           
0007ed   2185     ADD	0x85, R0            
0007ee   6003     CLR	0x3, 0              
0007ef   1286     RLCR	0x86               
0007f0   5183     MOV	0x83, R0            
0007f1   98ef     MOV	R0, #0xef           
0007f2   2183     ADD	0x83, R0            
0007f3   5283     MOV	R1, 0x83            
0007f4   f708     LD	R0, [R1]             
0007f5   e100     MOVB	#0x00              
0007f6   51fe     MOV	0xfe, R0            
0007f7   ff11     INC	R1                  
0007f8   e101     MOVB	#0x01              
0007f9   f708     LD	R0, [R1]             
0007fa   e100     MOVB	#0x00              
0007fb   51fd     MOV	0xfd, R0            
0007fc   6003     CLR	0x3, 0              
0007fd   e101     MOVB	#0x01              
0007fe   1286     RLCR	0x86               
0007ff   5183     MOV	0x83, R0            
000800   98ef     MOV	R0, #0xef           
000801   2183     ADD	0x83, R0            
000802   5283     MOV	R1, 0x83            
000803   f708     LD	R0, [R1]             
000804   e100     MOVB	#0x00              
000805   51fc     MOV	0xfc, R0            
000806   ff11     INC	R1                  
000807   e101     MOVB	#0x01              
000808   f708     LD	R0, [R1]             
000809   e100     MOVB	#0x00              
00080a   51fb     MOV	0xfb, R0            
00080b   6003     CLR	0x3, 0              
00080c   10fb     RRCR	0xfb               
00080d   e101     MOVB	#0x01              
00080e   5180     MOV	0x80, R0            
00080f   e100     MOVB	#0x00              
000810   10fc     RRCR	0xfc               
000811   e101     MOVB	#0x01              
000812   5183     MOV	0x83, R0            
000813   6003     CLR	0x3, 0              
000814   1180     RRC	0x80                
000815   1183     RRC	0x83                
000816   6003     CLR	0x3, 0              
000817   1180     RRC	0x80                
000818   1183     RRC	0x83                
000819   0e83     MOVZ	R0, 0x83           
00081a   e100     MOVB	#0x00              
00081b   39fe     SUB	0xfe, R0            
00081c   e101     MOVB	#0x01              
00081d   0e80     MOVZ	R0, 0x80           
00081e   7803     JB	0x3, 0               
00081f   ff10     INC	R0                  
000820   7203     JNB	0x3, 2              
000821   c824     JMP	#0x824              
000822   e100     MOVB	#0x00              
000823   39fd     SUB	0xfd, R0            
000824   e100     MOVB	#0x00              
000825   0efe     MOVZ	R0, 0xfe           
000826   e101     MOVB	#0x01              
000827   5285     MOV	R1, 0x85            
000828   f741     ST	[R1], R0             
000829   ff11     INC	R1                  
00082a   e100     MOVB	#0x00              
00082b   0efd     MOVZ	R0, 0xfd           
00082c   e101     MOVB	#0x01              
00082d   f741     ST	[R1], R0             
00082e   6003     CLR	0x3, 0              
00082f   1286     RLCR	0x86               
000830   5185     MOV	0x85, R0            
000831   98ef     MOV	R0, #0xef           
000832   2185     ADD	0x85, R0            
000833   6003     CLR	0x3, 0              
000834   1286     RLCR	0x86               
000835   5183     MOV	0x83, R0            
000836   98ef     MOV	R0, #0xef           
000837   2183     ADD	0x83, R0            
000838   5283     MOV	R1, 0x83            
000839   f708     LD	R0, [R1]             
00083a   e100     MOVB	#0x00              
00083b   51fe     MOV	0xfe, R0            
00083c   ff11     INC	R1                  
00083d   e101     MOVB	#0x01              
00083e   f708     LD	R0, [R1]             
00083f   e100     MOVB	#0x00              
000840   51fd     MOV	0xfd, R0            
000841   50fe     MOV	R0, 0xfe            
000842   e101     MOVB	#0x01              
000843   2182     ADD	0x82, R0            
000844   e100     MOVB	#0x00              
000845   0efd     MOVZ	R0, 0xfd           
000846   7003     JNB	0x3, 0              
000847   ff10     INC	R0                  
000848   7203     JNB	0x3, 2              
000849   c84c     JMP	#0x84c              
00084a   e101     MOVB	#0x01              
00084b   2181     ADD	0x81, R0            
00084c   e101     MOVB	#0x01              
00084d   0e82     MOVZ	R0, 0x82           
00084e   5285     MOV	R1, 0x85            
00084f   f741     ST	[R1], R0             
000850   ff11     INC	R1                  
000851   0e81     MOVZ	R0, 0x81           
000852   f741     ST	[R1], R0             
000853   6003     CLR	0x3, 0              
000854   1286     RLCR	0x86               
000855   5185     MOV	0x85, R0            
000856   98a0     MOV	R0, #0xa0           
000857   2185     ADD	0x85, R0            
000858   5285     MOV	R1, 0x85            
000859   e102     MOVB	#0x02              
00085a   f708     LD	R0, [R1]             
00085b   e101     MOVB	#0x01              
00085c   5183     MOV	0x83, R0            
00085d   ff11     INC	R1                  
00085e   e102     MOVB	#0x02              
00085f   f708     LD	R0, [R1]             
000860   e101     MOVB	#0x01              
000861   5182     MOV	0x82, R0            
000862   6003     CLR	0x3, 0              
000863   1286     RLCR	0x86               
000864   5185     MOV	0x85, R0            
000865   98ef     MOV	R0, #0xef           
000866   2185     ADD	0x85, R0            
000867   5285     MOV	R1, 0x85            
000868   f708     LD	R0, [R1]             
000869   5181     MOV	0x81, R0            
00086a   ff11     INC	R1                  
00086b   f708     LD	R0, [R1]             
00086c   5180     MOV	0x80, R0            
00086d   0e82     MOVZ	R0, 0x82           
00086e   3880     SUB	R0, 0x80            
00086f   7a03     JB	0x3, 2               
000870   c873     JMP	#0x873              
000871   0e83     MOVZ	R0, 0x83           
000872   3881     SUB	R0, 0x81            
000873   7803     JB	0x3, 0               
000874   c897     JMP	#0x897              
000875   6003     CLR	0x3, 0              
000876   1286     RLCR	0x86               
000877   5185     MOV	0x85, R0            
000878   98ef     MOV	R0, #0xef           
000879   2185     ADD	0x85, R0            
00087a   6003     CLR	0x3, 0              
00087b   1286     RLCR	0x86               
00087c   5183     MOV	0x83, R0            
00087d   98ef     MOV	R0, #0xef           
00087e   2183     ADD	0x83, R0            
00087f   5283     MOV	R1, 0x83            
000880   f708     LD	R0, [R1]             
000881   5181     MOV	0x81, R0            
000882   ff11     INC	R1                  
000883   f708     LD	R0, [R1]             
000884   5180     MOV	0x80, R0            
000885   98ff     MOV	R0, #0xff           
000886   2081     ADD	R0, 0x81            
000887   5183     MOV	0x83, R0            
000888   98ff     MOV	R0, #0xff           
000889   5182     MOV	0x82, R0            
00088a   0e80     MOVZ	R0, 0x80           
00088b   7003     JNB	0x3, 0              
00088c   ff10     INC	R0                  
00088d   7203     JNB	0x3, 2              
00088e   c890     JMP	#0x890              
00088f   2182     ADD	0x82, R0            
000890   0e83     MOVZ	R0, 0x83           
000891   5285     MOV	R1, 0x85            
000892   f741     ST	[R1], R0             
000893   ff11     INC	R1                  
000894   0e82     MOVZ	R0, 0x82           
000895   f741     ST	[R1], R0             
000896   c8b4     JMP	#0x8b4              
000897   6003     CLR	0x3, 0              
000898   1286     RLCR	0x86               
000899   5185     MOV	0x85, R0            
00089a   98ef     MOV	R0, #0xef           
00089b   2185     ADD	0x85, R0            
00089c   6003     CLR	0x3, 0              
00089d   1286     RLCR	0x86               
00089e   5183     MOV	0x83, R0            
00089f   98ef     MOV	R0, #0xef           
0008a0   2183     ADD	0x83, R0            
0008a1   5283     MOV	R1, 0x83            
0008a2   f708     LD	R0, [R1]             
0008a3   5181     MOV	0x81, R0            
0008a4   ff11     INC	R1                  
0008a5   f708     LD	R0, [R1]             
0008a6   5180     MOV	0x80, R0            
0008a7   9801     MOV	R0, #0x1            
0008a8   2081     ADD	R0, 0x81            
0008a9   5183     MOV	0x83, R0            
0008aa   0382     CLR	0x82                
0008ab   1382     RLC	0x82                
0008ac   0e80     MOVZ	R0, 0x80           
0008ad   2182     ADD	0x82, R0            
0008ae   0e83     MOVZ	R0, 0x83           
0008af   5285     MOV	R1, 0x85            
0008b0   f741     ST	[R1], R0             
0008b1   ff11     INC	R1                  
0008b2   0e82     MOVZ	R0, 0x82           
0008b3   f741     ST	[R1], R0             
0008b4   6003     CLR	0x3, 0              
0008b5   1286     RLCR	0x86               
0008b6   5185     MOV	0x85, R0            
0008b7   98e7     MOV	R0, #0xe7           
0008b8   2185     ADD	0x85, R0            
0008b9   5285     MOV	R1, 0x85            
0008ba   f708     LD	R0, [R1]             
0008bb   5183     MOV	0x83, R0            
0008bc   ff11     INC	R1                  
0008bd   f708     LD	R0, [R1]             
0008be   5182     MOV	0x82, R0            
0008bf   0b83     INC	0x83                
0008c0   7a03     JB	0x3, 2               
0008c1   c8c3     JMP	#0x8c3              
0008c2   0b82     INC	0x82                
0008c3   0e83     MOVZ	R0, 0x83           
0008c4   5285     MOV	R1, 0x85            
0008c5   f741     ST	[R1], R0             
0008c6   ff11     INC	R1                  
0008c7   0e82     MOVZ	R0, 0x82           
0008c8   f741     ST	[R1], R0             
0008c9   6003     CLR	0x3, 0              
0008ca   1286     RLCR	0x86               
0008cb   5185     MOV	0x85, R0            
0008cc   98e7     MOV	R0, #0xe7           
0008cd   2185     ADD	0x85, R0            
0008ce   5285     MOV	R1, 0x85            
0008cf   f708     LD	R0, [R1]             
0008d0   5183     MOV	0x83, R0            
0008d1   ff11     INC	R1                  
0008d2   f708     LD	R0, [R1]             
0008d3   5182     MOV	0x82, R0            
0008d4   9800     MOV	R0, #0x0            
0008d5   3882     SUB	R0, 0x82            
0008d6   7a03     JB	0x3, 2               
0008d7   c8da     JMP	#0x8da              
0008d8   980b     MOV	R0, #0xb            
0008d9   3883     SUB	R0, 0x83            
0008da   7803     JB	0x3, 0               
0008db   c8e8     JMP	#0x8e8              
0008dc   6003     CLR	0x3, 0              
0008dd   1286     RLCR	0x86               
0008de   5185     MOV	0x85, R0            
0008df   98e7     MOV	R0, #0xe7           
0008e0   2185     ADD	0x85, R0            
0008e1   980a     MOV	R0, #0xa            
0008e2   5285     MOV	R1, 0x85            
0008e3   f741     ST	[R1], R0             
0008e4   ff11     INC	R1                  
0008e5   9800     MOV	R0, #0x0            
0008e6   f741     ST	[R1], R0             
0008e7   c916     JMP	#0x916              
0008e8   9801     MOV	R0, #0x1            
0008e9   5185     MOV	0x85, R0            
0008ea   9800     MOV	R0, #0x0            
0008eb   5184     MOV	0x84, R0            
0008ec   0e86     MOVZ	R0, 0x86           
0008ed   ff10     INC	R0                  
0008ee   c8f3     JMP	#0x8f3              
0008ef   6003     CLR	0x3, 0              
0008f0   e101     MOVB	#0x01              
0008f1   1385     RLC	0x85                
0008f2   1384     RLC	0x84                
0008f3   ff58     DECJZ	R0                
0008f4   c8ef     JMP	#0x8ef              
0008f5   0e85     MOVZ	R0, 0x85           
0008f6   5183     MOV	0x83, R0            
0008f7   28c9     AND	R0, 0xc9            
0008f8   5185     MOV	0x85, R0            
0008f9   0e84     MOVZ	R0, 0x84           
0008fa   5182     MOV	0x82, R0            
0008fb   28ca     AND	R0, 0xca            
0008fc   5184     MOV	0x84, R0            
0008fd   0e85     MOVZ	R0, 0x85           
0008fe   3084     ORL	R0, 0x84            
0008ff   7203     JNB	0x3, 2              
000900   c916     JMP	#0x916              
000901   9801     MOV	R0, #0x1            
000902   5185     MOV	0x85, R0            
000903   9800     MOV	R0, #0x0            
000904   5184     MOV	0x84, R0            
000905   0e86     MOVZ	R0, 0x86           
000906   ff10     INC	R0                  
000907   c90c     JMP	#0x90c              
000908   6003     CLR	0x3, 0              
000909   e101     MOVB	#0x01              
00090a   1385     RLC	0x85                
00090b   1384     RLC	0x84                
00090c   ff58     DECJZ	R0                
00090d   c908     JMP	#0x908              
00090e   0585     CPL	0x85                
00090f   0584     CPL	0x84                
000910   0e85     MOVZ	R0, 0x85           
000911   5183     MOV	0x83, R0            
000912   29c9     AND	0xc9, R0            
000913   0e84     MOVZ	R0, 0x84           
000914   5182     MOV	0x82, R0            
000915   29ca     AND	0xca, R0            
000916   0b86     INC	0x86                
000917   c7c9     JMP	#0x7c9              
000918   e015     MOVP	#0x15              
000919   d56d     CALL	#0x56d             
00091a   e009     MOVP	#0x09              
00091b   e100     MOVB	#0x00              
00091c   0ebc     MOVZ	R0, 0xbc           
00091d   e101     MOVB	#0x01              
00091e   3888     SUB	R0, 0x88            
00091f   7803     JB	0x3, 0               
000920   c92e     JMP	#0x92e              
000921   03c7     CLR	0xc7                
000922   03c8     CLR	0xc8                
000923   e100     MOVB	#0x00              
000924   0ebb     MOVZ	R0, 0xbb           
000925   e101     MOVB	#0x01              
000926   51c5     MOV	0xc5, R0            
000927   03c6     CLR	0xc6                
000928   03c9     CLR	0xc9                
000929   03ca     CLR	0xca                
00092a   9801     MOV	R0, #0x1            
00092b   e100     MOVB	#0x00              
00092c   51cb     MOV	0xcb, R0            
00092d   c98e     JMP	#0x98e              
00092e   0ec7     MOVZ	R0, 0xc7           
00092f   30c8     ORL	R0, 0xc8            
000930   7203     JNB	0x3, 2              
000931   c93f     JMP	#0x93f              
000932   03c7     CLR	0xc7                
000933   03c8     CLR	0xc8                
000934   e100     MOVB	#0x00              
000935   0ebb     MOVZ	R0, 0xbb           
000936   e101     MOVB	#0x01              
000937   51c5     MOV	0xc5, R0            
000938   03c6     CLR	0xc6                
000939   03c9     CLR	0xc9                
00093a   03ca     CLR	0xca                
00093b   9802     MOV	R0, #0x2            
00093c   e100     MOVB	#0x00              
00093d   51cb     MOV	0xcb, R0            
00093e   c98e     JMP	#0x98e              
00093f   e100     MOVB	#0x00              
000940   0ebc     MOVZ	R0, 0xbc           
000941   38cc     SUB	R0, 0xcc            
000942   7803     JB	0x3, 0               
000943   c952     JMP	#0x952              
000944   e101     MOVB	#0x01              
000945   03c7     CLR	0xc7                
000946   03c8     CLR	0xc8                
000947   e100     MOVB	#0x00              
000948   0ebb     MOVZ	R0, 0xbb           
000949   e101     MOVB	#0x01              
00094a   51c5     MOV	0xc5, R0            
00094b   03c6     CLR	0xc6                
00094c   03c9     CLR	0xc9                
00094d   03ca     CLR	0xca                
00094e   9804     MOV	R0, #0x4            
00094f   e100     MOVB	#0x00              
000950   51cb     MOV	0xcb, R0            
000951   c98e     JMP	#0x98e              
000952   e01d     MOVP	#0x1D              
000953   dd42     CALL	#0xd42             
000954   e009     MOVP	#0x09              
000955   e101     MOVB	#0x01              
000956   5188     MOV	0x88, R0            
000957   0e88     MOVZ	R0, 0x88           
000958   e100     MOVB	#0x00              
000959   38ba     SUB	R0, 0xba            
00095a   7003     JNB	0x3, 0              
00095b   c96c     JMP	#0x96c              
00095c   e101     MOVB	#0x01              
00095d   03c7     CLR	0xc7                
00095e   03c8     CLR	0xc8                
00095f   e100     MOVB	#0x00              
000960   0ebb     MOVZ	R0, 0xbb           
000961   e101     MOVB	#0x01              
000962   51c5     MOV	0xc5, R0            
000963   03c6     CLR	0xc6                
000964   03c9     CLR	0xc9                
000965   03ca     CLR	0xca                
000966   9808     MOV	R0, #0x8            
000967   e100     MOVB	#0x00              
000968   51cb     MOV	0xcb, R0            
000969   9801     MOV	R0, #0x1            
00096a   51ca     MOV	0xca, R0            
00096b   c98e     JMP	#0x98e              
00096c   e018     MOVP	#0x18              
00096d   d883     CALL	#0x883             
00096e   e009     MOVP	#0x09              
00096f   e101     MOVB	#0x01              
000970   5188     MOV	0x88, R0            
000971   9803     MOV	R0, #0x3            
000972   3888     SUB	R0, 0x88            
000973   7803     JB	0x3, 0               
000974   c980     JMP	#0x980              
000975   03c7     CLR	0xc7                
000976   03c8     CLR	0xc8                
000977   e100     MOVB	#0x00              
000978   0ebb     MOVZ	R0, 0xbb           
000979   e101     MOVB	#0x01              
00097a   51c5     MOV	0xc5, R0            
00097b   03c6     CLR	0xc6                
00097c   9810     MOV	R0, #0x10           
00097d   e100     MOVB	#0x00              
00097e   51cb     MOV	0xcb, R0            
00097f   c98e     JMP	#0x98e              
000980   9800     MOV	R0, #0x0            
000981   3087     ORL	R0, 0x87            
000982   7203     JNB	0x3, 2              
000983   c98e     JMP	#0x98e              
000984   03c7     CLR	0xc7                
000985   03c8     CLR	0xc8                
000986   e100     MOVB	#0x00              
000987   0ebb     MOVZ	R0, 0xbb           
000988   e101     MOVB	#0x01              
000989   51c5     MOV	0xc5, R0            
00098a   03c6     CLR	0xc6                
00098b   9820     MOV	R0, #0x20           
00098c   e100     MOVB	#0x00              
00098d   51cb     MOV	0xcb, R0            
00098e   9800     MOV	R0, #0x0            
00098f   e100     MOVB	#0x00              
000990   30cb     ORL	R0, 0xcb            
000991   7203     JNB	0x3, 2              
000992   c9cf     JMP	#0x9cf              
000993   e101     MOVB	#0x01              
000994   03c9     CLR	0xc9                
000995   03ca     CLR	0xca                
000996   0388     CLR	0x88                
000997   e100     MOVB	#0x00              
000998   0ebf     MOVZ	R0, 0xbf           
000999   e101     MOVB	#0x01              
00099a   3888     SUB	R0, 0x88            
00099b   7003     JNB	0x3, 0              
00099c   c9b9     JMP	#0x9b9              
00099d   6003     CLR	0x3, 0              
00099e   1288     RLCR	0x88               
00099f   5187     MOV	0x87, R0            
0009a0   9898     MOV	R0, #0x98           
0009a1   2187     ADD	0x87, R0            
0009a2   9800     MOV	R0, #0x0            
0009a3   5287     MOV	R1, 0x87            
0009a4   e102     MOVB	#0x02              
0009a5   f741     ST	[R1], R0             
0009a6   ff11     INC	R1                  
0009a7   9800     MOV	R0, #0x0            
0009a8   f741     ST	[R1], R0             
0009a9   6003     CLR	0x3, 0              
0009aa   e101     MOVB	#0x01              
0009ab   1288     RLCR	0x88               
0009ac   5187     MOV	0x87, R0            
0009ad   9890     MOV	R0, #0x90           
0009ae   2187     ADD	0x87, R0            
0009af   9800     MOV	R0, #0x0            
0009b0   5287     MOV	R1, 0x87            
0009b1   e102     MOVB	#0x02              
0009b2   f741     ST	[R1], R0             
0009b3   ff11     INC	R1                  
0009b4   9800     MOV	R0, #0x0            
0009b5   f741     ST	[R1], R0             
0009b6   e101     MOVB	#0x01              
0009b7   0b88     INC	0x88                
0009b8   c997     JMP	#0x997              
0009b9   98ff     MOV	R0, #0xff           
0009ba   21c5     ADD	0xc5, R0            
0009bb   7003     JNB	0x3, 0              
0009bc   c9be     JMP	#0x9be              
0009bd   07c6     DEC	0xc6                
0009be   9800     MOV	R0, #0x0            
0009bf   38c6     SUB	R0, 0xc6            
0009c0   7a03     JB	0x3, 2               
0009c1   c9c4     JMP	#0x9c4              
0009c2   9802     MOV	R0, #0x2            
0009c3   38c5     SUB	R0, 0xc5            
0009c4   7003     JNB	0x3, 0              
0009c5   c9cb     JMP	#0x9cb              
0009c6   e100     MOVB	#0x00              
0009c7   03cb     CLR	0xcb                
0009c8   e101     MOVB	#0x01              
0009c9   03c3     CLR	0xc3                
0009ca   03c4     CLR	0xc4                
0009cb   e013     MOVP	#0x13              
0009cc   d361     CALL	#0x361             
0009cd   e009     MOVP	#0x09              
0009ce   ca0d     JMP	#0xa0d              
0009cf   e101     MOVB	#0x01              
0009d0   0ec9     MOVZ	R0, 0xc9           
0009d1   30ca     ORL	R0, 0xca            
0009d2   7a03     JB	0x3, 2               
0009d3   c9f1     JMP	#0x9f1              
0009d4   0bc3     INC	0xc3                
0009d5   7a03     JB	0x3, 2               
0009d6   c9d8     JMP	#0x9d8              
0009d7   0bc4     INC	0xc4                
0009d8   0ec4     MOVZ	R0, 0xc4           
0009d9   38bc     SUB	R0, 0xbc            
0009da   7a03     JB	0x3, 2               
0009db   c9de     JMP	#0x9de              
0009dc   0ec3     MOVZ	R0, 0xc3           
0009dd   38bb     SUB	R0, 0xbb            
0009de   7003     JNB	0x3, 0              
0009df   ca0d     JMP	#0xa0d              
0009e0   0388     CLR	0x88                
0009e1   e100     MOVB	#0x00              
0009e2   0ebf     MOVZ	R0, 0xbf           
0009e3   e101     MOVB	#0x01              
0009e4   3888     SUB	R0, 0x88            
0009e5   7003     JNB	0x3, 0              
0009e6   c9ee     JMP	#0x9ee              
0009e7   0e88     MOVZ	R0, 0x88           
0009e8   e00d     MOVP	#0x0D              
0009e9   dd16     CALL	#0xd16             
0009ea   e009     MOVP	#0x09              
0009eb   e101     MOVB	#0x01              
0009ec   0b88     INC	0x88                
0009ed   c9e1     JMP	#0x9e1              
0009ee   03c3     CLR	0xc3                
0009ef   03c4     CLR	0xc4                
0009f0   ca0d     JMP	#0xa0d              
0009f1   0bc3     INC	0xc3                
0009f2   7a03     JB	0x3, 2               
0009f3   c9f5     JMP	#0x9f5              
0009f4   0bc4     INC	0xc4                
0009f5   0ec4     MOVZ	R0, 0xc4           
0009f6   38bc     SUB	R0, 0xbc            
0009f7   7a03     JB	0x3, 2               
0009f8   c9fb     JMP	#0x9fb              
0009f9   0ec3     MOVZ	R0, 0xc3           
0009fa   38bb     SUB	R0, 0xbb            
0009fb   7003     JNB	0x3, 0              
0009fc   ca0d     JMP	#0xa0d              
0009fd   0388     CLR	0x88                
0009fe   e100     MOVB	#0x00              
0009ff   0ebf     MOVZ	R0, 0xbf           
000a00   e101     MOVB	#0x01              
000a01   3888     SUB	R0, 0x88            
000a02   7003     JNB	0x3, 0              
000a03   ca0b     JMP	#0xa0b              
000a04   0e88     MOVZ	R0, 0x88           
000a05   e012     MOVP	#0x12              
000a06   d239     CALL	#0x239             
000a07   e00a     MOVP	#0x0A              
000a08   e101     MOVB	#0x01              
000a09   0b88     INC	0x88                
000a0a   c9fe     JMP	#0x9fe              
000a0b   03c3     CLR	0xc3                
000a0c   03c4     CLR	0xc4                
000a0d   e100     MOVB	#0x00              
000a0e   0ecb     MOVZ	R0, 0xcb           
000a0f   0008     CRET
                  
                                           func._Median_Value
001a50   e101     MOVB	#0x01              
001a51   5190     MOV	0x90, R0            
001a52   0e7e     MOVZ	R0, 0x7e           
001a53   518f     MOV	0x8f, R0            
001a54   0e7d     MOVZ	R0, 0x7d           
001a55   518e     MOV	0x8e, R0            
001a56   0e7c     MOVZ	R0, 0x7c           
001a57   518d     MOV	0x8d, R0            
001a58   0e7b     MOVZ	R0, 0x7b           
001a59   518b     MOV	0x8b, R0            
001a5a   0e7a     MOVZ	R0, 0x7a           
001a5b   518c     MOV	0x8c, R0            
001a5c   0e90     MOVZ	R0, 0x90           
001a5d   388e     SUB	R0, 0x8e            
001a5e   7a03     JB	0x3, 2               
001a5f   ca62     JMP	#0xa62              
001a60   0e8f     MOVZ	R0, 0x8f           
001a61   388d     SUB	R0, 0x8d            
001a62   7003     JNB	0x3, 0              
001a63   ca69     JMP	#0xa69              
001a64   0e8f     MOVZ	R0, 0x8f           
001a65   518a     MOV	0x8a, R0            
001a66   0e90     MOVZ	R0, 0x90           
001a67   5189     MOV	0x89, R0            
001a68   ca6d     JMP	#0xa6d              
001a69   0e8d     MOVZ	R0, 0x8d           
001a6a   518a     MOV	0x8a, R0            
001a6b   0e8e     MOVZ	R0, 0x8e           
001a6c   5189     MOV	0x89, R0            
001a6d   0e8e     MOVZ	R0, 0x8e           
001a6e   388b     SUB	R0, 0x8b            
001a6f   7a03     JB	0x3, 2               
001a70   ca73     JMP	#0xa73              
001a71   0e8d     MOVZ	R0, 0x8d           
001a72   388c     SUB	R0, 0x8c            
001a73   7003     JNB	0x3, 0              
001a74   ca76     JMP	#0xa76              
001a75   ca7a     JMP	#0xa7a              
001a76   0e8c     MOVZ	R0, 0x8c           
001a77   518d     MOV	0x8d, R0            
001a78   0e8b     MOVZ	R0, 0x8b           
001a79   518e     MOV	0x8e, R0            
001a7a   0e8d     MOVZ	R0, 0x8d           
001a7b   188a     XOR	R0, 0x8a            
001a7c   7a03     JB	0x3, 2               
001a7d   ca93     JMP	#0xa93              
001a7e   0e8e     MOVZ	R0, 0x8e           
001a7f   1889     XOR	R0, 0x89            
001a80   7a03     JB	0x3, 2               
001a81   ca93     JMP	#0xa93              
001a82   0e90     MOVZ	R0, 0x90           
001a83   388b     SUB	R0, 0x8b            
001a84   7a03     JB	0x3, 2               
001a85   ca88     JMP	#0xa88              
001a86   0e8f     MOVZ	R0, 0x8f           
001a87   388c     SUB	R0, 0x8c            
001a88   7003     JNB	0x3, 0              
001a89   ca8b     JMP	#0xa8b              
001a8a   ca8f     JMP	#0xa8f              
001a8b   0e8c     MOVZ	R0, 0x8c           
001a8c   518f     MOV	0x8f, R0            
001a8d   0e8b     MOVZ	R0, 0x8b           
001a8e   5190     MOV	0x90, R0            
001a8f   0e8f     MOVZ	R0, 0x8f           
001a90   517e     MOV	0x7e, R0            
001a91   0e90     MOVZ	R0, 0x90           
001a92   caa7     JMP	#0xaa7              
001a93   0e8e     MOVZ	R0, 0x8e           
001a94   3889     SUB	R0, 0x89            
001a95   7a03     JB	0x3, 2               
001a96   ca99     JMP	#0xa99              
001a97   0e8d     MOVZ	R0, 0x8d           
001a98   388a     SUB	R0, 0x8a            
001a99   7003     JNB	0x3, 0              
001a9a   caa0     JMP	#0xaa0              
001a9b   0e8a     MOVZ	R0, 0x8a           
001a9c   518f     MOV	0x8f, R0            
001a9d   0e89     MOVZ	R0, 0x89           
001a9e   5190     MOV	0x90, R0            
001a9f   caa4     JMP	#0xaa4              
001aa0   0e8d     MOVZ	R0, 0x8d           
001aa1   518f     MOV	0x8f, R0            
001aa2   0e8e     MOVZ	R0, 0x8e           
001aa3   5190     MOV	0x90, R0            
001aa4   0e8f     MOVZ	R0, 0x8f           
001aa5   517e     MOV	0x7e, R0            
001aa6   0e90     MOVZ	R0, 0x90           
001aa7   0008     CRET
                  
                                           func.__CTouch_Scan_Channel_RawData_
001902   e101     MOVB	#0x01              
001903   5190     MOV	0x90, R0            
001904   e100     MOVB	#0x00              
001905   670d     CLR	0xd, 7              
001906   035f     CLR	0x5f                
001907   034f     CLR	0x4f                
001908   985e     MOV	R0, #0x5e           
001909   e101     MOVB	#0x01              
00190a   2090     ADD	R0, 0x90            
00190b   518f     MOV	0x8f, R0            
00190c   981f     MOV	R0, #0x1f           
00190d   518e     MOV	0x8e, R0            
00190e   0208     CLR	R0                  
00190f   7003     JNB	0x3, 0              
001910   ff10     INC	R0                  
001911   7203     JNB	0x3, 2              
001912   c914     JMP	#0x914              
001913   218e     ADD	0x8e, R0            
001914   528e     MOV	R1, 0x8e            
001915   508f     MOV	R0, 0x8f            
001916   e01f     MOVP	#0x1F              
001917   df60     CALL	#0xf60             
001918   e019     MOVP	#0x19              
001919   e101     MOVB	#0x01              
00191a   5112     MOV	0x12, R0            
00191b   e100     MOVB	#0x00              
00191c   6553     CLR	0x53, 5             
00191d   660b     CLR	0xb, 6              
00191e   670b     CLR	0xb, 7              
00191f   6d64     SET	0x64, 5             
001920   9854     MOV	R0, #0x54           
001921   e101     MOVB	#0x01              
001922   2090     ADD	R0, 0x90            
001923   5190     MOV	0x90, R0            
001924   981f     MOV	R0, #0x1f           
001925   518f     MOV	0x8f, R0            
001926   0208     CLR	R0                  
001927   7003     JNB	0x3, 0              
001928   ff10     INC	R0                  
001929   7203     JNB	0x3, 2              
00192a   c92c     JMP	#0x92c              
00192b   218f     ADD	0x8f, R0            
00192c   528f     MOV	R1, 0x8f            
00192d   5090     MOV	R0, 0x90            
00192e   e01f     MOVP	#0x1F              
00192f   df60     CALL	#0xf60             
001930   e019     MOVP	#0x19              
001931   e100     MOVB	#0x00              
001932   5153     MOV	0x53, R0            
001933   e101     MOVB	#0x01              
001934   0390     CLR	0x90                
001935   e100     MOVB	#0x00              
001936   7264     JNB	0x64, 2             
001937   c940     JMP	#0x940              
001938   e101     MOVB	#0x01              
001939   0e90     MOVZ	R0, 0x90           
00193a   518f     MOV	0x8f, R0            
00193b   0b90     INC	0x90                
00193c   9815     MOV	R0, #0x15           
00193d   388f     SUB	R0, 0x8f            
00193e   7803     JB	0x3, 0               
00193f   c935     JMP	#0x935              
001940   e100     MOVB	#0x00              
001941   6d53     SET	0x53, 5             
001942   98c0     MOV	R0, #0xc0           
001943   3153     ORL	0x53, R0            
001944   0000     NOP                     
001945   0000     NOP                     
001946   0000     NOP                     
001947   0000     NOP                     
001948   670d     CLR	0xd, 7              
001949   6f2d     SET	0x2d, 7             
00194a   6e0b     SET	0xb, 6              
00194b   6f0b     SET	0xb, 7              
00194c   9800     MOV	R0, #0x0            
00194d   e101     MOVB	#0x01              
00194e   30a4     ORL	R0, 0xa4            
00194f   7203     JNB	0x3, 2              
001950   c94c     JMP	#0x94c              
001951   03a4     CLR	0xa4                
001952   e100     MOVB	#0x00              
001953   6564     CLR	0x64, 5             
001954   0e5f     MOVZ	R0, 0x5f           
001955   e101     MOVB	#0x01              
001956   5190     MOV	0x90, R0            
001957   038f     CLR	0x8f                
001958   0e90     MOVZ	R0, 0x90           
001959   518f     MOV	0x8f, R0            
00195a   0390     CLR	0x90                
00195b   e100     MOVB	#0x00              
00195c   0e4f     MOVZ	R0, 0x4f           
00195d   e101     MOVB	#0x01              
00195e   518e     MOV	0x8e, R0            
00195f   0e8e     MOVZ	R0, 0x8e           
001960   3190     ORL	0x90, R0            
001961   9800     MOV	R0, #0x0            
001962   318f     ORL	0x8f, R0            
001963   9803     MOV	R0, #0x3            
001964   388f     SUB	R0, 0x8f            
001965   7a03     JB	0x3, 2               
001966   c969     JMP	#0x969              
001967   98e8     MOV	R0, #0xe8           
001968   3890     SUB	R0, 0x90            
001969   7003     JNB	0x3, 0              
00196a   c96d     JMP	#0x96d              
00196b   0390     CLR	0x90                
00196c   038f     CLR	0x8f                
00196d   9836     MOV	R0, #0x36           
00196e   388f     SUB	R0, 0x8f            
00196f   7a03     JB	0x3, 2               
001970   c973     JMP	#0x973              
001971   98b1     MOV	R0, #0xb1           
001972   3890     SUB	R0, 0x90            
001973   7803     JB	0x3, 0               
001974   c977     JMP	#0x977              
001975   0390     CLR	0x90                
001976   038f     CLR	0x8f                
001977   0e90     MOVZ	R0, 0x90           
001978   517e     MOV	0x7e, R0            
001979   0e8f     MOVZ	R0, 0x8f           
00197a   0008     CRET
                  
                                           func.__CTouch_Key_Init_
001000   e01d     MOVP	#0x1D              
001001   ddf3     CALL	#0xdf3             
001002   e010     MOVP	#0x10              
001003   e101     MOVB	#0x01              
001004   03a4     CLR	0xa4                
001005   9866     MOV	R0, #0x66           
001006   514e     MOV	0x4e, R0            
001007   991f     MOV	R1, #0x1f           
001008   9854     MOV	R0, #0x54           
001009   e01f     MOVP	#0x1F              
00100a   df60     CALL	#0xf60             
00100b   e010     MOVP	#0x10              
00100c   e101     MOVB	#0x01              
00100d   519c     MOV	0x9c, R0            
00100e   9880     MOV	R0, #0x80           
00100f   309c     ORL	R0, 0x9c            
001010   e100     MOVB	#0x00              
001011   5153     MOV	0x53, R0            
001012   034f     CLR	0x4f                
001013   035f     CLR	0x5f                
001014   9803     MOV	R0, #0x3            
001015   e101     MOVB	#0x01              
001016   519c     MOV	0x9c, R0            
001017   9800     MOV	R0, #0x0            
001018   309c     ORL	R0, 0x9c            
001019   7203     JNB	0x3, 2              
00101a   c01e     JMP	#0x1e               
00101b   9801     MOV	R0, #0x1            
00101c   519b     MOV	0x9b, R0            
00101d   c01f     JMP	#0x1f               
00101e   039b     CLR	0x9b                
00101f   9800     MOV	R0, #0x0            
001020   309b     ORL	R0, 0x9b            
001021   7203     JNB	0x3, 2              
001022   c051     JMP	#0x51               
001023   069c     DECR	0x9c               
001024   519b     MOV	0x9b, R0            
001025   6003     CLR	0x3, 0              
001026   129b     RLCR	0x9b               
001027   519a     MOV	0x9a, R0            
001028   039b     CLR	0x9b                
001029   e100     MOVB	#0x00              
00102a   0ebf     MOVZ	R0, 0xbf           
00102b   e101     MOVB	#0x01              
00102c   389b     SUB	R0, 0x9b            
00102d   7003     JNB	0x3, 0              
00102e   c04f     JMP	#0x4f               
00102f   9806     MOV	R0, #0x6            
001030   517e     MOV	0x7e, R0            
001031   0e9b     MOVZ	R0, 0x9b           
001032   e01e     MOVP	#0x1E              
001033   ded0     CALL	#0xed0             
001034   e010     MOVP	#0x10              
001035   e101     MOVB	#0x01              
001036   5199     MOV	0x99, R0            
001037   98d1     MOV	R0, #0xd1           
001038   2199     ADD	0x99, R0            
001039   509a     MOV	R0, 0x9a            
00103a   2199     ADD	0x99, R0            
00103b   0e9b     MOVZ	R0, 0x9b           
00103c   e019     MOVP	#0x19              
00103d   d902     CALL	#0x902             
00103e   e010     MOVP	#0x10              
00103f   e101     MOVB	#0x01              
001040   5196     MOV	0x96, R0            
001041   0e7e     MOVZ	R0, 0x7e           
001042   5197     MOV	0x97, R0            
001043   0e97     MOVZ	R0, 0x97           
001044   5299     MOV	R1, 0x99            
001045   e102     MOVB	#0x02              
001046   f741     ST	[R1], R0             
001047   ff11     INC	R1                  
001048   e101     MOVB	#0x01              
001049   0e96     MOVZ	R0, 0x96           
00104a   e102     MOVB	#0x02              
00104b   f741     ST	[R1], R0             
00104c   e101     MOVB	#0x01              
00104d   0b9b     INC	0x9b                
00104e   c029     JMP	#0x29               
00104f   079c     DEC	0x9c                
001050   c017     JMP	#0x17               
001051   039c     CLR	0x9c                
001052   e100     MOVB	#0x00              
001053   0ebf     MOVZ	R0, 0xbf           
001054   e101     MOVB	#0x01              
001055   389c     SUB	R0, 0x9c            
001056   7003     JNB	0x3, 0              
001057   c0ea     JMP	#0xea               
001058   6003     CLR	0x3, 0              
001059   129c     RLCR	0x9c               
00105a   519b     MOV	0x9b, R0            
00105b   98b0     MOV	R0, #0xb0           
00105c   219b     ADD	0x9b, R0            
00105d   9806     MOV	R0, #0x6            
00105e   517e     MOV	0x7e, R0            
00105f   0e9c     MOVZ	R0, 0x9c           
001060   e01e     MOVP	#0x1E              
001061   ded0     CALL	#0xed0             
001062   e010     MOVP	#0x10              
001063   e101     MOVB	#0x01              
001064   5199     MOV	0x99, R0            
001065   98d1     MOV	R0, #0xd1           
001066   2199     ADD	0x99, R0            
001067   5299     MOV	R1, 0x99            
001068   e102     MOVB	#0x02              
001069   f708     LD	R0, [R1]             
00106a   e101     MOVB	#0x01              
00106b   5197     MOV	0x97, R0            
00106c   ff11     INC	R1                  
00106d   e102     MOVB	#0x02              
00106e   f708     LD	R0, [R1]             
00106f   e101     MOVB	#0x01              
001070   5196     MOV	0x96, R0            
001071   9806     MOV	R0, #0x6            
001072   517e     MOV	0x7e, R0            
001073   0e9c     MOVZ	R0, 0x9c           
001074   e01e     MOVP	#0x1E              
001075   ded0     CALL	#0xed0             
001076   e010     MOVP	#0x10              
001077   e101     MOVB	#0x01              
001078   5199     MOV	0x99, R0            
001079   98d1     MOV	R0, #0xd1           
00107a   2199     ADD	0x99, R0            
00107b   9802     MOV	R0, #0x2            
00107c   2199     ADD	0x99, R0            
00107d   7803     JB	0x3, 0               
00107e   c080     JMP	#0x80               
00107f   0b98     INC	0x98                
001080   5299     MOV	R1, 0x99            
001081   e102     MOVB	#0x02              
001082   f708     LD	R0, [R1]             
001083   e101     MOVB	#0x01              
001084   5195     MOV	0x95, R0            
001085   ff11     INC	R1                  
001086   e102     MOVB	#0x02              
001087   f708     LD	R0, [R1]             
001088   e101     MOVB	#0x01              
001089   5194     MOV	0x94, R0            
00108a   9806     MOV	R0, #0x6            
00108b   517e     MOV	0x7e, R0            
00108c   0e9c     MOVZ	R0, 0x9c           
00108d   e01e     MOVP	#0x1E              
00108e   ded0     CALL	#0xed0             
00108f   e010     MOVP	#0x10              
001090   e101     MOVB	#0x01              
001091   5199     MOV	0x99, R0            
001092   98d1     MOV	R0, #0xd1           
001093   2199     ADD	0x99, R0            
001094   9804     MOV	R0, #0x4            
001095   2199     ADD	0x99, R0            
001096   7803     JB	0x3, 0               
001097   c099     JMP	#0x99               
001098   0b98     INC	0x98                
001099   5299     MOV	R1, 0x99            
00109a   e102     MOVB	#0x02              
00109b   f708     LD	R0, [R1]             
00109c   e101     MOVB	#0x01              
00109d   5193     MOV	0x93, R0            
00109e   ff11     INC	R1                  
00109f   e102     MOVB	#0x02              
0010a0   f708     LD	R0, [R1]             
0010a1   e101     MOVB	#0x01              
0010a2   5192     MOV	0x92, R0            
0010a3   0e93     MOVZ	R0, 0x93           
0010a4   517a     MOV	0x7a, R0            
0010a5   0e92     MOVZ	R0, 0x92           
0010a6   517b     MOV	0x7b, R0            
0010a7   0e95     MOVZ	R0, 0x95           
0010a8   517c     MOV	0x7c, R0            
0010a9   0e94     MOVZ	R0, 0x94           
0010aa   517d     MOV	0x7d, R0            
0010ab   0e97     MOVZ	R0, 0x97           
0010ac   517e     MOV	0x7e, R0            
0010ad   0e96     MOVZ	R0, 0x96           
0010ae   e01a     MOVP	#0x1A              
0010af   da50     CALL	#0xa50             
0010b0   e010     MOVP	#0x10              
0010b1   e101     MOVB	#0x01              
0010b2   5198     MOV	0x98, R0            
0010b3   0e7e     MOVZ	R0, 0x7e           
0010b4   5199     MOV	0x99, R0            
0010b5   0e99     MOVZ	R0, 0x99           
0010b6   529b     MOV	R1, 0x9b            
0010b7   e102     MOVB	#0x02              
0010b8   f741     ST	[R1], R0             
0010b9   ff11     INC	R1                  
0010ba   e101     MOVB	#0x01              
0010bb   0e98     MOVZ	R0, 0x98           
0010bc   e102     MOVB	#0x02              
0010bd   f741     ST	[R1], R0             
0010be   6003     CLR	0x3, 0              
0010bf   e101     MOVB	#0x01              
0010c0   129c     RLCR	0x9c               
0010c1   519b     MOV	0x9b, R0            
0010c2   98e7     MOV	R0, #0xe7           
0010c3   219b     ADD	0x9b, R0            
0010c4   980a     MOV	R0, #0xa            
0010c5   529b     MOV	R1, 0x9b            
0010c6   f741     ST	[R1], R0             
0010c7   ff11     INC	R1                  
0010c8   9800     MOV	R0, #0x0            
0010c9   f741     ST	[R1], R0             
0010ca   6003     CLR	0x3, 0              
0010cb   129c     RLCR	0x9c               
0010cc   519b     MOV	0x9b, R0            
0010cd   98a0     MOV	R0, #0xa0           
0010ce   219b     ADD	0x9b, R0            
0010cf   6003     CLR	0x3, 0              
0010d0   129c     RLCR	0x9c               
0010d1   5199     MOV	0x99, R0            
0010d2   98b0     MOV	R0, #0xb0           
0010d3   2199     ADD	0x99, R0            
0010d4   5299     MOV	R1, 0x99            
0010d5   e102     MOVB	#0x02              
0010d6   f708     LD	R0, [R1]             
0010d7   e101     MOVB	#0x01              
0010d8   5197     MOV	0x97, R0            
0010d9   ff11     INC	R1                  
0010da   e102     MOVB	#0x02              
0010db   f708     LD	R0, [R1]             
0010dc   e101     MOVB	#0x01              
0010dd   5196     MOV	0x96, R0            
0010de   0e97     MOVZ	R0, 0x97           
0010df   529b     MOV	R1, 0x9b            
0010e0   e102     MOVB	#0x02              
0010e1   f741     ST	[R1], R0             
0010e2   ff11     INC	R1                  
0010e3   e101     MOVB	#0x01              
0010e4   0e96     MOVZ	R0, 0x96           
0010e5   e102     MOVB	#0x02              
0010e6   f741     ST	[R1], R0             
0010e7   e101     MOVB	#0x01              
0010e8   0b9c     INC	0x9c                
0010e9   c052     JMP	#0x52               
0010ea   039c     CLR	0x9c                
0010eb   981e     MOV	R0, #0x1e           
0010ec   389c     SUB	R0, 0x9c            
0010ed   7003     JNB	0x3, 0              
0010ee   c238     JMP	#0x238              
0010ef   039b     CLR	0x9b                
0010f0   e100     MOVB	#0x00              
0010f1   0ebf     MOVZ	R0, 0xbf           
0010f2   e101     MOVB	#0x01              
0010f3   389b     SUB	R0, 0x9b            
0010f4   7003     JNB	0x3, 0              
0010f5   c236     JMP	#0x236              
0010f6   9806     MOV	R0, #0x6            
0010f7   517e     MOV	0x7e, R0            
0010f8   0e9b     MOVZ	R0, 0x9b           
0010f9   e01e     MOVP	#0x1E              
0010fa   ded0     CALL	#0xed0             
0010fb   e010     MOVP	#0x10              
0010fc   e101     MOVB	#0x01              
0010fd   519a     MOV	0x9a, R0            
0010fe   98d1     MOV	R0, #0xd1           
0010ff   219a     ADD	0x9a, R0            
001100   9804     MOV	R0, #0x4            
001101   219a     ADD	0x9a, R0            
001102   7803     JB	0x3, 0               
001103   c105     JMP	#0x105              
001104   0b99     INC	0x99                
001105   9806     MOV	R0, #0x6            
001106   517e     MOV	0x7e, R0            
001107   0e9b     MOVZ	R0, 0x9b           
001108   e01e     MOVP	#0x1E              
001109   ded0     CALL	#0xed0             
00110a   e011     MOVP	#0x11              
00110b   e101     MOVB	#0x01              
00110c   5198     MOV	0x98, R0            
00110d   98d1     MOV	R0, #0xd1           
00110e   2198     ADD	0x98, R0            
00110f   9802     MOV	R0, #0x2            
001110   2198     ADD	0x98, R0            
001111   7803     JB	0x3, 0               
001112   c114     JMP	#0x114              
001113   0b97     INC	0x97                
001114   5298     MOV	R1, 0x98            
001115   e102     MOVB	#0x02              
001116   f708     LD	R0, [R1]             
001117   e101     MOVB	#0x01              
001118   5196     MOV	0x96, R0            
001119   ff11     INC	R1                  
00111a   e102     MOVB	#0x02              
00111b   f708     LD	R0, [R1]             
00111c   e101     MOVB	#0x01              
00111d   5195     MOV	0x95, R0            
00111e   0e96     MOVZ	R0, 0x96           
00111f   529a     MOV	R1, 0x9a            
001120   e102     MOVB	#0x02              
001121   f741     ST	[R1], R0             
001122   ff11     INC	R1                  
001123   e101     MOVB	#0x01              
001124   0e95     MOVZ	R0, 0x95           
001125   e102     MOVB	#0x02              
001126   f741     ST	[R1], R0             
001127   9806     MOV	R0, #0x6            
001128   517e     MOV	0x7e, R0            
001129   e101     MOVB	#0x01              
00112a   0e9b     MOVZ	R0, 0x9b           
00112b   e01e     MOVP	#0x1E              
00112c   ded0     CALL	#0xed0             
00112d   e011     MOVP	#0x11              
00112e   e101     MOVB	#0x01              
00112f   519a     MOV	0x9a, R0            
001130   98d1     MOV	R0, #0xd1           
001131   219a     ADD	0x9a, R0            
001132   9802     MOV	R0, #0x2            
001133   219a     ADD	0x9a, R0            
001134   7803     JB	0x3, 0               
001135   c137     JMP	#0x137              
001136   0b99     INC	0x99                
001137   9806     MOV	R0, #0x6            
001138   517e     MOV	0x7e, R0            
001139   0e9b     MOVZ	R0, 0x9b           
00113a   e01e     MOVP	#0x1E              
00113b   ded0     CALL	#0xed0             
00113c   e011     MOVP	#0x11              
00113d   e101     MOVB	#0x01              
00113e   5198     MOV	0x98, R0            
00113f   98d1     MOV	R0, #0xd1           
001140   2198     ADD	0x98, R0            
001141   5298     MOV	R1, 0x98            
001142   e102     MOVB	#0x02              
001143   f708     LD	R0, [R1]             
001144   e101     MOVB	#0x01              
001145   5196     MOV	0x96, R0            
001146   ff11     INC	R1                  
001147   e102     MOVB	#0x02              
001148   f708     LD	R0, [R1]             
001149   e101     MOVB	#0x01              
00114a   5195     MOV	0x95, R0            
00114b   0e96     MOVZ	R0, 0x96           
00114c   529a     MOV	R1, 0x9a            
00114d   e102     MOVB	#0x02              
00114e   f741     ST	[R1], R0             
00114f   ff11     INC	R1                  
001150   e101     MOVB	#0x01              
001151   0e95     MOVZ	R0, 0x95           
001152   e102     MOVB	#0x02              
001153   f741     ST	[R1], R0             
001154   9806     MOV	R0, #0x6            
001155   517e     MOV	0x7e, R0            
001156   e101     MOVB	#0x01              
001157   0e9b     MOVZ	R0, 0x9b           
001158   e01e     MOVP	#0x1E              
001159   ded0     CALL	#0xed0             
00115a   e011     MOVP	#0x11              
00115b   e101     MOVB	#0x01              
00115c   519a     MOV	0x9a, R0            
00115d   98d1     MOV	R0, #0xd1           
00115e   219a     ADD	0x9a, R0            
00115f   0e9b     MOVZ	R0, 0x9b           
001160   e019     MOVP	#0x19              
001161   d902     CALL	#0x902             
001162   e011     MOVP	#0x11              
001163   e101     MOVB	#0x01              
001164   5197     MOV	0x97, R0            
001165   0e7e     MOVZ	R0, 0x7e           
001166   5198     MOV	0x98, R0            
001167   0e98     MOVZ	R0, 0x98           
001168   529a     MOV	R1, 0x9a            
001169   e102     MOVB	#0x02              
00116a   f741     ST	[R1], R0             
00116b   ff11     INC	R1                  
00116c   e101     MOVB	#0x01              
00116d   0e97     MOVZ	R0, 0x97           
00116e   e102     MOVB	#0x02              
00116f   f741     ST	[R1], R0             
001170   6003     CLR	0x3, 0              
001171   e101     MOVB	#0x01              
001172   129b     RLCR	0x9b               
001173   519a     MOV	0x9a, R0            
001174   98a8     MOV	R0, #0xa8           
001175   219a     ADD	0x9a, R0            
001176   9806     MOV	R0, #0x6            
001177   517e     MOV	0x7e, R0            
001178   0e9b     MOVZ	R0, 0x9b           
001179   e01e     MOVP	#0x1E              
00117a   ded0     CALL	#0xed0             
00117b   e011     MOVP	#0x11              
00117c   e101     MOVB	#0x01              
00117d   5198     MOV	0x98, R0            
00117e   98d1     MOV	R0, #0xd1           
00117f   2198     ADD	0x98, R0            
001180   5298     MOV	R1, 0x98            
001181   e102     MOVB	#0x02              
001182   f708     LD	R0, [R1]             
001183   e101     MOVB	#0x01              
001184   5196     MOV	0x96, R0            
001185   ff11     INC	R1                  
001186   e102     MOVB	#0x02              
001187   f708     LD	R0, [R1]             
001188   e101     MOVB	#0x01              
001189   5195     MOV	0x95, R0            
00118a   9806     MOV	R0, #0x6            
00118b   517e     MOV	0x7e, R0            
00118c   0e9b     MOVZ	R0, 0x9b           
00118d   e01e     MOVP	#0x1E              
00118e   ded0     CALL	#0xed0             
00118f   e011     MOVP	#0x11              
001190   e101     MOVB	#0x01              
001191   5198     MOV	0x98, R0            
001192   98d1     MOV	R0, #0xd1           
001193   2198     ADD	0x98, R0            
001194   9802     MOV	R0, #0x2            
001195   2198     ADD	0x98, R0            
001196   7803     JB	0x3, 0               
001197   c199     JMP	#0x199              
001198   0b97     INC	0x97                
001199   5298     MOV	R1, 0x98            
00119a   e102     MOVB	#0x02              
00119b   f708     LD	R0, [R1]             
00119c   e101     MOVB	#0x01              
00119d   5194     MOV	0x94, R0            
00119e   ff11     INC	R1                  
00119f   e102     MOVB	#0x02              
0011a0   f708     LD	R0, [R1]             
0011a1   e101     MOVB	#0x01              
0011a2   5193     MOV	0x93, R0            
0011a3   9806     MOV	R0, #0x6            
0011a4   517e     MOV	0x7e, R0            
0011a5   0e9b     MOVZ	R0, 0x9b           
0011a6   e01e     MOVP	#0x1E              
0011a7   ded0     CALL	#0xed0             
0011a8   e011     MOVP	#0x11              
0011a9   e101     MOVB	#0x01              
0011aa   5198     MOV	0x98, R0            
0011ab   98d1     MOV	R0, #0xd1           
0011ac   2198     ADD	0x98, R0            
0011ad   9804     MOV	R0, #0x4            
0011ae   2198     ADD	0x98, R0            
0011af   7803     JB	0x3, 0               
0011b0   c1b2     JMP	#0x1b2              
0011b1   0b97     INC	0x97                
0011b2   5298     MOV	R1, 0x98            
0011b3   e102     MOVB	#0x02              
0011b4   f708     LD	R0, [R1]             
0011b5   e101     MOVB	#0x01              
0011b6   5192     MOV	0x92, R0            
0011b7   ff11     INC	R1                  
0011b8   e102     MOVB	#0x02              
0011b9   f708     LD	R0, [R1]             
0011ba   e101     MOVB	#0x01              
0011bb   5191     MOV	0x91, R0            
0011bc   0e92     MOVZ	R0, 0x92           
0011bd   517a     MOV	0x7a, R0            
0011be   0e91     MOVZ	R0, 0x91           
0011bf   517b     MOV	0x7b, R0            
0011c0   0e94     MOVZ	R0, 0x94           
0011c1   517c     MOV	0x7c, R0            
0011c2   0e93     MOVZ	R0, 0x93           
0011c3   517d     MOV	0x7d, R0            
0011c4   0e96     MOVZ	R0, 0x96           
0011c5   517e     MOV	0x7e, R0            
0011c6   0e95     MOVZ	R0, 0x95           
0011c7   e01a     MOVP	#0x1A              
0011c8   da50     CALL	#0xa50             
0011c9   e011     MOVP	#0x11              
0011ca   e101     MOVB	#0x01              
0011cb   5197     MOV	0x97, R0            
0011cc   0e7e     MOVZ	R0, 0x7e           
0011cd   5198     MOV	0x98, R0            
0011ce   0e98     MOVZ	R0, 0x98           
0011cf   529a     MOV	R1, 0x9a            
0011d0   e102     MOVB	#0x02              
0011d1   f741     ST	[R1], R0             
0011d2   ff11     INC	R1                  
0011d3   e101     MOVB	#0x01              
0011d4   0e97     MOVZ	R0, 0x97           
0011d5   e102     MOVB	#0x02              
0011d6   f741     ST	[R1], R0             
0011d7   6003     CLR	0x3, 0              
0011d8   e101     MOVB	#0x01              
0011d9   129b     RLCR	0x9b               
0011da   519a     MOV	0x9a, R0            
0011db   98a0     MOV	R0, #0xa0           
0011dc   219a     ADD	0x9a, R0            
0011dd   6003     CLR	0x3, 0              
0011de   129b     RLCR	0x9b               
0011df   5198     MOV	0x98, R0            
0011e0   98a8     MOV	R0, #0xa8           
0011e1   2198     ADD	0x98, R0            
0011e2   5298     MOV	R1, 0x98            
0011e3   e102     MOVB	#0x02              
0011e4   f708     LD	R0, [R1]             
0011e5   e101     MOVB	#0x01              
0011e6   5196     MOV	0x96, R0            
0011e7   ff11     INC	R1                  
0011e8   e102     MOVB	#0x02              
0011e9   f708     LD	R0, [R1]             
0011ea   e101     MOVB	#0x01              
0011eb   5195     MOV	0x95, R0            
0011ec   6003     CLR	0x3, 0              
0011ed   129b     RLCR	0x9b               
0011ee   5198     MOV	0x98, R0            
0011ef   98a0     MOV	R0, #0xa0           
0011f0   2198     ADD	0x98, R0            
0011f1   5298     MOV	R1, 0x98            
0011f2   e102     MOVB	#0x02              
0011f3   f708     LD	R0, [R1]             
0011f4   e101     MOVB	#0x01              
0011f5   5194     MOV	0x94, R0            
0011f6   ff11     INC	R1                  
0011f7   e102     MOVB	#0x02              
0011f8   f708     LD	R0, [R1]             
0011f9   e101     MOVB	#0x01              
0011fa   5193     MOV	0x93, R0            
0011fb   9802     MOV	R0, #0x2            
0011fc   517b     MOV	0x7b, R0            
0011fd   0e94     MOVZ	R0, 0x94           
0011fe   517c     MOV	0x7c, R0            
0011ff   0e93     MOVZ	R0, 0x93           
001200   517d     MOV	0x7d, R0            
001201   0e96     MOVZ	R0, 0x96           
001202   517e     MOV	0x7e, R0            
001203   0e95     MOVZ	R0, 0x95           
001204   e01c     MOVP	#0x1C              
001205   dcdf     CALL	#0xcdf             
001206   e012     MOVP	#0x12              
001207   e101     MOVB	#0x01              
001208   5197     MOV	0x97, R0            
001209   0e7e     MOVZ	R0, 0x7e           
00120a   5198     MOV	0x98, R0            
00120b   0e98     MOVZ	R0, 0x98           
00120c   529a     MOV	R1, 0x9a            
00120d   e102     MOVB	#0x02              
00120e   f741     ST	[R1], R0             
00120f   ff11     INC	R1                  
001210   e101     MOVB	#0x01              
001211   0e97     MOVZ	R0, 0x97           
001212   e102     MOVB	#0x02              
001213   f741     ST	[R1], R0             
001214   e101     MOVB	#0x01              
001215   0e9b     MOVZ	R0, 0x9b           
001216   e00d     MOVP	#0x0D              
001217   dd16     CALL	#0xd16             
001218   e012     MOVP	#0x12              
001219   6003     CLR	0x3, 0              
00121a   e101     MOVB	#0x01              
00121b   129b     RLCR	0x9b               
00121c   519a     MOV	0x9a, R0            
00121d   98ef     MOV	R0, #0xef           
00121e   219a     ADD	0x9a, R0            
00121f   6003     CLR	0x3, 0              
001220   129b     RLCR	0x9b               
001221   5198     MOV	0x98, R0            
001222   98b0     MOV	R0, #0xb0           
001223   2198     ADD	0x98, R0            
001224   5298     MOV	R1, 0x98            
001225   e102     MOVB	#0x02              
001226   f708     LD	R0, [R1]             
001227   e101     MOVB	#0x01              
001228   5196     MOV	0x96, R0            
001229   ff11     INC	R1                  
00122a   e102     MOVB	#0x02              
00122b   f708     LD	R0, [R1]             
00122c   e101     MOVB	#0x01              
00122d   5195     MOV	0x95, R0            
00122e   0e96     MOVZ	R0, 0x96           
00122f   529a     MOV	R1, 0x9a            
001230   f741     ST	[R1], R0             
001231   ff11     INC	R1                  
001232   0e95     MOVZ	R0, 0x95           
001233   f741     ST	[R1], R0             
001234   0b9b     INC	0x9b                
001235   c0f0     JMP	#0xf0               
001236   0b9c     INC	0x9c                
001237   c0eb     JMP	#0xeb               
001238   0008     CRET
                  
                                           func._IIR_Filter
001cdf   e101     MOVB	#0x01              
001ce0   51a2     MOV	0xa2, R0            
001ce1   0e7e     MOVZ	R0, 0x7e           
001ce2   51a3     MOV	0xa3, R0            
001ce3   0e7d     MOVZ	R0, 0x7d           
001ce4   51a0     MOV	0xa0, R0            
001ce5   0e7c     MOVZ	R0, 0x7c           
001ce6   51a1     MOV	0xa1, R0            
001ce7   0e7b     MOVZ	R0, 0x7b           
001ce8   519f     MOV	0x9f, R0            
001ce9   0e9f     MOVZ	R0, 0x9f           
001cea   ff10     INC	R0                  
001ceb   ccf0     JMP	#0xcf0              
001cec   6003     CLR	0x3, 0              
001ced   e101     MOVB	#0x01              
001cee   11a2     RRC	0xa2                
001cef   11a3     RRC	0xa3                
001cf0   ff58     DECJZ	R0                
001cf1   ccec     JMP	#0xcec              
001cf2   0ea1     MOVZ	R0, 0xa1           
001cf3   519e     MOV	0x9e, R0            
001cf4   0ea0     MOVZ	R0, 0xa0           
001cf5   519d     MOV	0x9d, R0            
001cf6   0e9f     MOVZ	R0, 0x9f           
001cf7   ff10     INC	R0                  
001cf8   ccfd     JMP	#0xcfd              
001cf9   6003     CLR	0x3, 0              
001cfa   e101     MOVB	#0x01              
001cfb   119d     RRC	0x9d                
001cfc   119e     RRC	0x9e                
001cfd   ff58     DECJZ	R0                
001cfe   ccf9     JMP	#0xcf9              
001cff   0e9e     MOVZ	R0, 0x9e           
001d00   39a1     SUB	0xa1, R0            
001d01   0e9d     MOVZ	R0, 0x9d           
001d02   7803     JB	0x3, 0               
001d03   ff10     INC	R0                  
001d04   7203     JNB	0x3, 2              
001d05   cd07     JMP	#0xd07              
001d06   39a0     SUB	0xa0, R0            
001d07   50a1     MOV	R0, 0xa1            
001d08   21a3     ADD	0xa3, R0            
001d09   0ea0     MOVZ	R0, 0xa0           
001d0a   7003     JNB	0x3, 0              
001d0b   ff10     INC	R0                  
001d0c   7203     JNB	0x3, 2              
001d0d   cd0f     JMP	#0xd0f              
001d0e   21a2     ADD	0xa2, R0            
001d0f   0ea3     MOVZ	R0, 0xa3           
001d10   517e     MOV	0x7e, R0            
001d11   0ea2     MOVZ	R0, 0xa2           
001d12   0008     CRET
                  
                                           .config
002007   05fc     CPL	0xfc                
002008   ffff     NOPZ                    
                                           func.___fs2uchar
001eeb   e01b     MOVP	#0x1B              
001eec   db52     CALL	#0xb52             
001eed   e01e     MOVP	#0x1E              
001eee   307e     ORL	R0, 0x7e            
001eef   307d     ORL	R0, 0x7d            
001ef0   7a03     JB	0x3, 2               
001ef1   cef4     JMP	#0xef4              
001ef2   507c     MOV	R0, 0x7c            
001ef3   cef5     JMP	#0xef5              
001ef4   98ff     MOV	R0, #0xff           
001ef5   0008     CRET
                  
                                           func.___fsmul
00147e   f8c1     MOV	R1, R0              
00147f   327e     ORL	R1, 0x7e            
001480   327d     ORL	R1, 0x7d            
001481   327c     ORL	R1, 0x7c            
001482   7203     JNB	0x3, 2              
001483   c56c     JMP	#0x56c              
001484   527b     MOV	R1, 0x7b            
001485   327a     ORL	R1, 0x7a            
001486   3279     ORL	R1, 0x79            
001487   3278     ORL	R1, 0x78            
001488   7a03     JB	0x3, 2               
001489   c48f     JMP	#0x48f              
00148a   037c     CLR	0x7c                
00148b   037d     CLR	0x7d                
00148c   037e     CLR	0x7e                
00148d   0208     CLR	R0                  
00148e   c56c     JMP	#0x56c              
00148f   f8c1     MOV	R1, R0              
001490   e101     MOVB	#0x01              
001491   03ce     CLR	0xce                
001492   f7b9     JNB	R1, 7               
001493   68ce     SET	0xce, 0             
001494   7f7b     JB	0x7b, 7              
001495   c498     JMP	#0x498              
001496   9801     MOV	R0, #0x1            
001497   19ce     XOR	0xce, R0            
001498   53cf     MOV	0xcf, R1            
001499   127e     RLCR	0x7e               
00149a   13cf     RLC	0xcf                
00149b   03d0     CLR	0xd0                
00149c   987e     MOV	R0, #0x7e           
00149d   39cf     SUB	0xcf, R0            
00149e   7803     JB	0x3, 0               
00149f   07d0     DEC	0xd0                
0014a0   507b     MOV	R0, 0x7b            
0014a1   51cd     MOV	0xcd, R0            
0014a2   127a     RLCR	0x7a               
0014a3   13cd     RLC	0xcd                
0014a4   50cd     MOV	R0, 0xcd            
0014a5   21cf     ADD	0xcf, R0            
0014a6   7003     JNB	0x3, 0              
0014a7   0bd0     INC	0xd0                
0014a8   03cd     CLR	0xcd                
0014a9   6f7e     SET	0x7e, 7             
0014aa   507e     MOV	R0, 0x7e            
0014ab   e102     MOVB	#0x02              
0014ac   03c3     CLR	0xc3                
0014ad   51c4     MOV	0xc4, R0            
0014ae   527d     MOV	R1, 0x7d            
0014af   507c     MOV	R0, 0x7c            
0014b0   53c5     MOV	0xc5, R1            
0014b1   51c6     MOV	0xc6, R0            
0014b2   037b     CLR	0x7b                
0014b3   6f7a     SET	0x7a, 7             
0014b4   507a     MOV	R0, 0x7a            
0014b5   03c7     CLR	0xc7                
0014b6   51c8     MOV	0xc8, R0            
0014b7   5279     MOV	R1, 0x79            
0014b8   5078     MOV	R0, 0x78            
0014b9   53c9     MOV	0xc9, R1            
0014ba   51ca     MOV	0xca, R0            
0014bb   e101     MOVB	#0x01              
0014bc   52d0     MOV	R1, 0xd0            
0014bd   50cf     MOV	R0, 0xcf            
0014be   e102     MOVB	#0x02              
0014bf   53cb     MOV	0xcb, R1            
0014c0   51cc     MOV	0xcc, R0            
0014c1   e101     MOVB	#0x01              
0014c2   50ce     MOV	R0, 0xce            
0014c3   e102     MOVB	#0x02              
0014c4   51c2     MOV	0xc2, R0            
0014c5   527d     MOV	R1, 0x7d            
0014c6   537c     MOV	0x7c, R1            
0014c7   527e     MOV	R1, 0x7e            
0014c8   537d     MOV	0x7d, R1            
0014c9   52c3     MOV	R1, 0xc3            
0014ca   537e     MOV	0x7e, R1            
0014cb   0208     CLR	R0                  
0014cc   5279     MOV	R1, 0x79            
0014cd   5378     MOV	0x78, R1            
0014ce   527a     MOV	R1, 0x7a            
0014cf   5379     MOV	0x79, R1            
0014d0   037a     CLR	0x7a                
0014d1   037b     CLR	0x7b                
0014d2   e01c     MOVP	#0x1C              
0014d3   dcaa     CALL	#0xcaa             
0014d4   e014     MOVP	#0x14              
0014d5   527e     MOV	R1, 0x7e            
0014d6   e102     MOVB	#0x02              
0014d7   51cd     MOV	0xcd, R0            
0014d8   53ce     MOV	0xce, R1            
0014d9   507d     MOV	R0, 0x7d            
0014da   527c     MOV	R1, 0x7c            
0014db   51cf     MOV	0xcf, R0            
0014dc   53d0     MOV	0xd0, R1            
0014dd   50c8     MOV	R0, 0xc8            
0014de   52c9     MOV	R1, 0xc9            
0014df   5179     MOV	0x79, R0            
0014e0   5378     MOV	0x78, R1            
0014e1   50c7     MOV	R0, 0xc7            
0014e2   517a     MOV	0x7a, R0            
0014e3   037b     CLR	0x7b                
0014e4   50c6     MOV	R0, 0xc6            
0014e5   517c     MOV	0x7c, R0            
0014e6   037d     CLR	0x7d                
0014e7   037e     CLR	0x7e                
0014e8   0208     CLR	R0                  
0014e9   e01c     MOVP	#0x1C              
0014ea   dcaa     CALL	#0xcaa             
0014eb   e014     MOVP	#0x14              
0014ec   e102     MOVB	#0x02              
0014ed   6fc2     SET	0xc2, 7             
0014ee   517c     MOV	0x7c, R0            
0014ef   507d     MOV	R0, 0x7d            
0014f0   e102     MOVB	#0x02              
0014f1   21d0     ADD	0xd0, R0            
0014f2   0e7e     MOVZ	R0, 0x7e           
0014f3   7003     JNB	0x3, 0              
0014f4   ff10     INC	R0                  
0014f5   7203     JNB	0x3, 2              
0014f6   c4f8     JMP	#0x4f8              
0014f7   21cf     ADD	0xcf, R0            
0014f8   0e7c     MOVZ	R0, 0x7c           
0014f9   7003     JNB	0x3, 0              
0014fa   ff10     INC	R0                  
0014fb   7203     JNB	0x3, 2              
0014fc   c4fe     JMP	#0x4fe              
0014fd   21ce     ADD	0xce, R0            
0014fe   0208     CLR	R0                  
0014ff   7003     JNB	0x3, 0              
001500   ff10     INC	R0                  
001501   7203     JNB	0x3, 2              
001502   c504     JMP	#0x504              
001503   21cd     ADD	0xcd, R0            
001504   7fc2     JB	0xc2, 7              
001505   c517     JMP	#0x517              
001506   67c2     CLR	0xc2, 7             
001507   50c3     MOV	R0, 0xc3            
001508   52c4     MOV	R1, 0xc4            
001509   517a     MOV	0x7a, R0            
00150a   5379     MOV	0x79, R1            
00150b   50c5     MOV	R0, 0xc5            
00150c   5178     MOV	0x78, R0            
00150d   037b     CLR	0x7b                
00150e   50ca     MOV	R0, 0xca            
00150f   517c     MOV	0x7c, R0            
001510   037d     CLR	0x7d                
001511   037e     CLR	0x7e                
001512   0208     CLR	R0                  
001513   e01c     MOVP	#0x1C              
001514   dcaa     CALL	#0xcaa             
001515   e015     MOVP	#0x15              
001516   c4ee     JMP	#0x4ee              
001517   9840     MOV	R0, #0x40           
001518   21d0     ADD	0xd0, R0            
001519   7803     JB	0x3, 0               
00151a   c522     JMP	#0x522              
00151b   0bcf     INC	0xcf                
00151c   7a03     JB	0x3, 2               
00151d   c522     JMP	#0x522              
00151e   0bce     INC	0xce                
00151f   7a03     JB	0x3, 2               
001520   c522     JMP	#0x522              
001521   0bcd     INC	0xcd                
001522   7fcd     JB	0xcd, 7              
001523   c537     JMP	#0x537              
001524   9840     MOV	R0, #0x40           
001525   21d0     ADD	0xd0, R0            
001526   7803     JB	0x3, 0               
001527   c52f     JMP	#0x52f              
001528   0bcf     INC	0xcf                
001529   7a03     JB	0x3, 2               
00152a   c52f     JMP	#0x52f              
00152b   0bce     INC	0xce                
00152c   7a03     JB	0x3, 2               
00152d   c52f     JMP	#0x52f              
00152e   0bcd     INC	0xcd                
00152f   50cf     MOV	R0, 0xcf            
001530   51d0     MOV	0xd0, R0            
001531   50ce     MOV	R0, 0xce            
001532   51cf     MOV	0xcf, R0            
001533   50cd     MOV	R0, 0xcd            
001534   51ce     MOV	0xce, R0            
001535   03cd     CLR	0xcd                
001536   c548     JMP	#0x548              
001537   52d0     MOV	R1, 0xd0            
001538   50cf     MOV	R0, 0xcf            
001539   51d0     MOV	0xd0, R0            
00153a   50ce     MOV	R0, 0xce            
00153b   51cf     MOV	0xcf, R0            
00153c   50cd     MOV	R0, 0xcd            
00153d   51ce     MOV	0xce, R0            
00153e   03cd     CLR	0xcd                
00153f   ff19     RLC	R1                  
001540   13d0     RLC	0xd0                
001541   13cf     RLC	0xcf                
001542   13ce     RLC	0xce                
001543   13cd     RLC	0xcd                
001544   98ff     MOV	R0, #0xff           
001545   21cc     ADD	0xcc, R0            
001546   7803     JB	0x3, 0               
001547   07cb     DEC	0xcb                
001548   67ce     CLR	0xce, 7             
001549   7fcb     JB	0xcb, 7              
00154a   c550     JMP	#0x550              
00154b   037c     CLR	0x7c                
00154c   037d     CLR	0x7d                
00154d   037e     CLR	0x7e                
00154e   0208     CLR	R0                  
00154f   c56c     JMP	#0x56c              
001550   50cb     MOV	R0, 0xcb            
001551   a800     XOR	R0, #0x0            
001552   7203     JNB	0x3, 2              
001553   c55c     JMP	#0x55c              
001554   037c     CLR	0x7c                
001555   037d     CLR	0x7d                
001556   9880     MOV	R0, #0x80           
001557   517e     MOV	0x7e, R0            
001558   987f     MOV	R0, #0x7f           
001559   70c2     JNB	0xc2, 0             
00155a   fe78     SET	R0, 7               
00155b   c56c     JMP	#0x56c              
00155c   52cc     MOV	R1, 0xcc            
00155d   6003     CLR	0x3, 0              
00155e   ff21     RRC	R1                  
00155f   33cd     ORL	0xcd, R1            
001560   52cc     MOV	R1, 0xcc            
001561   f781     JNB	R1, 0               
001562   6fce     SET	0xce, 7             
001563   70c2     JNB	0xc2, 0             
001564   6fcd     SET	0xcd, 7             
001565   50cf     MOV	R0, 0xcf            
001566   52d0     MOV	R1, 0xd0            
001567   537c     MOV	0x7c, R1            
001568   517d     MOV	0x7d, R0            
001569   50cd     MOV	R0, 0xcd            
00156a   52ce     MOV	R1, 0xce            
00156b   537e     MOV	0x7e, R1            
00156c   0008     CRET
                  
                                           func.___uchar2fs
001f09   517c     MOV	0x7c, R0            
001f0a   037d     CLR	0x7d                
001f0b   037e     CLR	0x7e                
001f0c   9800     MOV	R0, #0x0            
001f0d   e01a     MOVP	#0x1A              
001f0e   daff     CALL	#0xaff             
001f0f   e01f     MOVP	#0x1F              
001f10   0008     CRET
                  
                                           func.__divuint
001c09   527d     MOV	R1, 0x7d            
001c0a   327c     ORL	R1, 0x7c            
001c0b   7203     JNB	0x3, 2              
001c0c   cc3f     JMP	#0xc3f              
001c0d   037b     CLR	0x7b                
001c0e   037a     CLR	0x7a                
001c0f   0379     CLR	0x79                
001c10   0378     CLR	0x78                
001c11   6878     SET	0x78, 0             
001c12   777d     JNB	0x7d, 7             
001c13   cc1b     JMP	#0xc1b              
001c14   6003     CLR	0x3, 0              
001c15   137c     RLC	0x7c                
001c16   137d     RLC	0x7d                
001c17   6003     CLR	0x3, 0              
001c18   1378     RLC	0x78                
001c19   1379     RLC	0x79                
001c1a   cc12     JMP	#0xc12              
001c1b   5279     MOV	R1, 0x79            
001c1c   3278     ORL	R1, 0x78            
001c1d   7203     JNB	0x3, 2              
001c1e   cc3c     JMP	#0xc3c              
001c1f   527d     MOV	R1, 0x7d            
001c20   f841     SUB	R1, R0              
001c21   7a03     JB	0x3, 2               
001c22   cc25     JMP	#0xc25              
001c23   527c     MOV	R1, 0x7c            
001c24   3a7e     SUB	R1, 0x7e            
001c25   7803     JB	0x3, 0               
001c26   cc35     JMP	#0xc35              
001c27   5278     MOV	R1, 0x78            
001c28   237a     ADD	0x7a, R1            
001c29   5279     MOV	R1, 0x79            
001c2a   7003     JNB	0x3, 0              
001c2b   ff11     INC	R1                  
001c2c   237b     ADD	0x7b, R1            
001c2d   527c     MOV	R1, 0x7c            
001c2e   3a7e     SUB	R1, 0x7e            
001c2f   537e     MOV	0x7e, R1            
001c30   7803     JB	0x3, 0               
001c31   ff08     DEC	R0                  
001c32   527d     MOV	R1, 0x7d            
001c33   f841     SUB	R1, R0              
001c34   f8c8     MOV	R0, R1              
001c35   6003     CLR	0x3, 0              
001c36   117d     RRC	0x7d                
001c37   117c     RRC	0x7c                
001c38   6003     CLR	0x3, 0              
001c39   1179     RRC	0x79                
001c3a   1178     RRC	0x78                
001c3b   cc1b     JMP	#0xc1b              
001c3c   507a     MOV	R0, 0x7a            
001c3d   517e     MOV	0x7e, R0            
001c3e   507b     MOV	R0, 0x7b            
001c3f   0008     CRET
                  
                                           fun.__R2PCL
001f60   530a     MOV	0xa, R1             
001f61   5102     MOV	0x2, R0             
                                           func.__mulchar
001ed0   037d     CLR	0x7d                
001ed1   787e     JB	0x7e, 0              
001ed2   ced4     JMP	#0xed4              
001ed3   217d     ADD	0x7d, R0            
001ed4   6003     CLR	0x3, 0              
001ed5   ff18     RLC	R0                  
001ed6   6003     CLR	0x3, 0              
001ed7   117e     RRC	0x7e                
001ed8   0209     CLR	R1                  
001ed9   327e     ORL	R1, 0x7e            
001eda   7a03     JB	0x3, 2               
001edb   ced1     JMP	#0xed1              
001edc   507d     MOV	R0, 0x7d            
001edd   0008     CRET
                  
                                           func.__gsinit_startup
001f4a   e01d     MOVP	#0x1D              
001f4b   ddd3     CALL	#0xdd3             
001f4c   e01f     MOVP	#0x1F              
001f4d   0008     CRET
                  
                                           func.___fs2ulong
001b52   517b     MOV	0x7b, R0            
001b53   307e     ORL	R0, 0x7e            
001b54   307d     ORL	R0, 0x7d            
001b55   307c     ORL	R0, 0x7c            
001b56   7203     JNB	0x3, 2              
001b57   cb8e     JMP	#0xb8e              
001b58   777b     JNB	0x7b, 7             
001b59   cb8e     JMP	#0xb8e              
001b5a   507b     MOV	R0, 0x7b            
001b5b   517a     MOV	0x7a, R0            
001b5c   507e     MOV	R0, 0x7e            
001b5d   5179     MOV	0x79, R0            
001b5e   9807     MOV	R0, #0x7            
001b5f   6003     CLR	0x3, 0              
001b60   117a     RRC	0x7a                
001b61   1179     RRC	0x79                
001b62   ff58     DECJZ	R0                
001b63   cb5f     JMP	#0xb5f              
001b64   037a     CLR	0x7a                
001b65   9896     MOV	R0, #0x96           
001b66   3979     SUB	0x79, R0            
001b67   7003     JNB	0x3, 0              
001b68   cb6a     JMP	#0xb6a              
001b69   077a     DEC	0x7a                
001b6a   037b     CLR	0x7b                
001b6b   6f7e     SET	0x7e, 7             
001b6c   527a     MOV	R1, 0x7a            
001b6d   f7f9     JB	R1, 7                
001b6e   cb75     JMP	#0xb75              
001b6f   057a     CPL	0x7a                
001b70   0579     CPL	0x79                
001b71   0b79     INC	0x79                
001b72   7a03     JB	0x3, 2               
001b73   cb75     JMP	#0xb75              
001b74   0b7a     INC	0x7a                
001b75   507a     MOV	R0, 0x7a            
001b76   3079     ORL	R0, 0x79            
001b77   7203     JNB	0x3, 2              
001b78   cb8c     JMP	#0xb8c              
001b79   f7b9     JNB	R1, 7               
001b7a   cb81     JMP	#0xb81              
001b7b   6003     CLR	0x3, 0              
001b7c   137c     RLC	0x7c                
001b7d   137d     RLC	0x7d                
001b7e   137e     RLC	0x7e                
001b7f   137b     RLC	0x7b                
001b80   cb86     JMP	#0xb86              
001b81   6003     CLR	0x3, 0              
001b82   117b     RRC	0x7b                
001b83   117e     RRC	0x7e                
001b84   117d     RRC	0x7d                
001b85   117c     RRC	0x7c                
001b86   98ff     MOV	R0, #0xff           
001b87   2179     ADD	0x79, R0            
001b88   7003     JNB	0x3, 0              
001b89   cb75     JMP	#0xb75              
001b8a   077a     DEC	0x7a                
001b8b   cb75     JMP	#0xb75              
001b8c   507b     MOV	R0, 0x7b            
001b8d   cb92     JMP	#0xb92              
001b8e   037c     CLR	0x7c                
001b8f   037d     CLR	0x7d                
001b90   037e     CLR	0x7e                
001b91   0208     CLR	R0                  
001b92   0008     CRET
                  
                                           func.__mulint
001e4a   037b     CLR	0x7b                
001e4b   037a     CLR	0x7a                
001e4c   787c     JB	0x7c, 0              
001e4d   ce53     JMP	#0xe53              
001e4e   527e     MOV	R1, 0x7e            
001e4f   237a     ADD	0x7a, R1            
001e50   7003     JNB	0x3, 0              
001e51   0b7b     INC	0x7b                
001e52   217b     ADD	0x7b, R0            
001e53   6003     CLR	0x3, 0              
001e54   137e     RLC	0x7e                
001e55   ff18     RLC	R0                  
001e56   6003     CLR	0x3, 0              
001e57   117d     RRC	0x7d                
001e58   117c     RRC	0x7c                
001e59   527d     MOV	R1, 0x7d            
001e5a   327c     ORL	R1, 0x7c            
001e5b   7a03     JB	0x3, 2               
001e5c   ce4c     JMP	#0xe4c              
001e5d   507a     MOV	R0, 0x7a            
001e5e   517e     MOV	0x7e, R0            
001e5f   507b     MOV	R0, 0x7b            
001e60   0008     CRET
                  
                                           func.__mullong
001caa   f8c1     MOV	R1, R0              
001cab   e101     MOVB	#0x01              
001cac   03d0     CLR	0xd0                
001cad   03cf     CLR	0xcf                
001cae   03ce     CLR	0xce                
001caf   03cd     CLR	0xcd                
001cb0   7878     JB	0x78, 0              
001cb1   ccc7     JMP	#0xcc7              
001cb2   507c     MOV	R0, 0x7c            
001cb3   21cd     ADD	0xcd, R0            
001cb4   0e7d     MOVZ	R0, 0x7d           
001cb5   7003     JNB	0x3, 0              
001cb6   ff10     INC	R0                  
001cb7   7203     JNB	0x3, 2              
001cb8   ccba     JMP	#0xcba              
001cb9   21ce     ADD	0xce, R0            
001cba   0e7e     MOVZ	R0, 0x7e           
001cbb   7003     JNB	0x3, 0              
001cbc   ff10     INC	R0                  
001cbd   7203     JNB	0x3, 2              
001cbe   ccc0     JMP	#0xcc0              
001cbf   21cf     ADD	0xcf, R0            
001cc0   0208     CLR	R0                  
001cc1   f908     ORL	R0, R1              
001cc2   7003     JNB	0x3, 0              
001cc3   ff10     INC	R0                  
001cc4   7203     JNB	0x3, 2              
001cc5   ccc7     JMP	#0xcc7              
001cc6   21d0     ADD	0xd0, R0            
001cc7   6003     CLR	0x3, 0              
001cc8   137c     RLC	0x7c                
001cc9   137d     RLC	0x7d                
001cca   137e     RLC	0x7e                
001ccb   ff19     RLC	R1                  
001ccc   6003     CLR	0x3, 0              
001ccd   117b     RRC	0x7b                
001cce   117a     RRC	0x7a                
001ccf   1179     RRC	0x79                
001cd0   1178     RRC	0x78                
001cd1   507b     MOV	R0, 0x7b            
001cd2   307a     ORL	R0, 0x7a            
001cd3   3079     ORL	R0, 0x79            
001cd4   3078     ORL	R0, 0x78            
001cd5   7a03     JB	0x3, 2               
001cd6   ccb0     JMP	#0xcb0              
001cd7   50cd     MOV	R0, 0xcd            
001cd8   517c     MOV	0x7c, R0            
001cd9   50ce     MOV	R0, 0xce            
001cda   517d     MOV	0x7d, R0            
001cdb   50cf     MOV	R0, 0xcf            
001cdc   517e     MOV	0x7e, R0            
001cdd   50d0     MOV	R0, 0xd0            
001cde   0008     CRET
                  
                                           func.___ulong2fs
001aff   5179     MOV	0x79, R0            
001b00   9896     MOV	R0, #0x96           
001b01   517a     MOV	0x7a, R0            
001b02   037b     CLR	0x7b                
001b03   5079     MOV	R0, 0x79            
001b04   307e     ORL	R0, 0x7e            
001b05   307d     ORL	R0, 0x7d            
001b06   307c     ORL	R0, 0x7c            
001b07   7a03     JB	0x3, 2               
001b08   cb0b     JMP	#0xb0b              
001b09   9800     MOV	R0, #0x0            
001b0a   cb51     JMP	#0xb51              
001b0b   5079     MOV	R0, 0x79            
001b0c   88ff     AND	R0, #0xff           
001b0d   7203     JNB	0x3, 2              
001b0e   cb19     JMP	#0xb19              
001b0f   6003     CLR	0x3, 0              
001b10   1179     RRC	0x79                
001b11   117e     RRC	0x7e                
001b12   117d     RRC	0x7d                
001b13   117c     RRC	0x7c                
001b14   0b7a     INC	0x7a                
001b15   7a03     JB	0x3, 2               
001b16   cb0b     JMP	#0xb0b              
001b17   0b7b     INC	0x7b                
001b18   cb0b     JMP	#0xb0b              
001b19   5079     MOV	R0, 0x79            
001b1a   88ff     AND	R0, #0xff           
001b1b   7a03     JB	0x3, 2               
001b1c   cb30     JMP	#0xb30              
001b1d   777e     JNB	0x7e, 7             
001b1e   cb30     JMP	#0xb30              
001b1f   6003     CLR	0x3, 0              
001b20   137c     RLC	0x7c                
001b21   137d     RLC	0x7d                
001b22   137e     RLC	0x7e                
001b23   1379     RLC	0x79                
001b24   98ff     MOV	R0, #0xff           
001b25   217a     ADD	0x7a, R0            
001b26   7003     JNB	0x3, 0              
001b27   cb29     JMP	#0xb29              
001b28   077b     DEC	0x7b                
001b29   5079     MOV	R0, 0x79            
001b2a   88ff     AND	R0, #0xff           
001b2b   7a03     JB	0x3, 2               
001b2c   cb30     JMP	#0xb30              
001b2d   777e     JNB	0x7e, 7             
001b2e   cb30     JMP	#0xb30              
001b2f   cb1f     JMP	#0xb1f              
001b30   507e     MOV	R0, 0x7e            
001b31   fe38     CLR	R0, 7               
001b32   a87f     XOR	R0, #0x7f           
001b33   7a03     JB	0x3, 2               
001b34   cb45     JMP	#0xb45              
001b35   98ff     MOV	R0, #0xff           
001b36   187d     XOR	R0, 0x7d            
001b37   7a03     JB	0x3, 2               
001b38   cb45     JMP	#0xb45              
001b39   98ff     MOV	R0, #0xff           
001b3a   187c     XOR	R0, 0x7c            
001b3b   7a03     JB	0x3, 2               
001b3c   cb45     JMP	#0xb45              
001b3d   0379     CLR	0x79                
001b3e   037e     CLR	0x7e                
001b3f   037d     CLR	0x7d                
001b40   037c     CLR	0x7c                
001b41   0b7a     INC	0x7a                
001b42   7a03     JB	0x3, 2               
001b43   cb45     JMP	#0xb45              
001b44   0b7b     INC	0x7b                
001b45   677e     CLR	0x7e, 7             
001b46   9807     MOV	R0, #0x7            
001b47   6003     CLR	0x3, 0              
001b48   137a     RLC	0x7a                
001b49   137b     RLC	0x7b                
001b4a   ff58     DECJZ	R0                
001b4b   cb47     JMP	#0xb47              
001b4c   507b     MOV	R0, 0x7b            
001b4d   3179     ORL	0x79, R0            
001b4e   507a     MOV	R0, 0x7a            
001b4f   317e     ORL	0x7e, R0            
001b50   5079     MOV	R0, 0x79            
001b51   0008     CRET
                  
                                           .cinit
001dd3   e100     MOVB	#0x00              
001dd4   9878     MOV	R0, #0x78           
001dd5   9907     MOV	R1, #0x7            
001dd6   dded     CALL	#0xded             
001dd7   e100     MOVB	#0x00              
001dd8   9880     MOV	R0, #0x80           
001dd9   991c     MOV	R1, #0x1c           
001dda   dded     CALL	#0xded             
001ddb   989d     MOV	R0, #0x9d           
001ddc   9962     MOV	R1, #0x62           
001ddd   dded     CALL	#0xded             
001dde   9802     MOV	R0, #0x2            
001ddf   519c     MOV	0x9c, R0            
001de0   e101     MOVB	#0x01              
001de1   9880     MOV	R0, #0x80           
001de2   997f     MOV	R1, #0x7f           
001de3   dded     CALL	#0xded             
001de4   e102     MOVB	#0x02              
001de5   9880     MOV	R0, #0x80           
001de6   9969     MOV	R1, #0x69           
001de7   dded     CALL	#0xded             
001de8   e103     MOVB	#0x03              
001de9   9880     MOV	R0, #0x80           
001dea   9920     MOV	R1, #0x20           
001deb   dded     CALL	#0xded             
001dec   0008     CRET
                  
001ded   020a     CLR	R2                  
001dee   f750     ST	[R0], R2             
001def   ff10     INC	R0                  
001df0   ff59     DECJZ	R1                
001df1   cdee     JMP	#0xdee              
001df2   0008     CRET
                  
